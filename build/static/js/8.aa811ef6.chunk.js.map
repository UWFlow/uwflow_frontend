{"version":3,"sources":["components/display/styles/ProgressBar.jsx","components/display/ProgressBar.jsx","desktop/components/notFoundPage/styles/NotFoundPage.jsx","desktop/components/notFoundPage/NotFoundPage.jsx","components/statistics/styles/CircularPercentage.jsx","components/statistics/CircularPercentage.jsx","components/input/styles/BubbleRatings.jsx","components/input/BubbleRatings.jsx","graphql/fragments/course/CourseFragment.jsx","desktop/components/common/styles/RatingBox.jsx","desktop/components/common/RatingBox.jsx","desktop/components/common/styles/Review.jsx","desktop/components/common/Review.jsx","mobile/components/common/styles/RatingBox.jsx","mobile/components/common/RatingBox.jsx","mobile/components/common/styles/Review.jsx","mobile/components/common/Review.jsx","desktop/components/coursePage/styles/CourseInfoHeader.jsx","desktop/components/coursePage/CourseInfoHeader.jsx","desktop/components/coursePage/styles/CourseSchedule.jsx","desktop/components/coursePage/CourseScheduleTableColumns.jsx","desktop/components/coursePage/CourseSchedule.jsx","desktop/components/coursePage/styles/CoursePage.jsx","components/coursePage/styles/Prereqs.jsx","components/coursePage/Prereqs.jsx","desktop/components/coursePage/ExtraInfoBox.jsx","data/custom_hooks/UseCourseReviewsReducer.jsx","desktop/components/coursePage/styles/CourseReviews.jsx","graphql/fragments/course/CourseReviewFragment.jsx","graphql/queries/course/CourseReview.jsx","desktop/components/coursePage/CourseReviews.jsx","desktop/components/coursePage/CoursePage.jsx","mobile/components/coursePage/styles/CourseInfoHeader.jsx","mobile/components/coursePage/CourseInfoHeader.jsx","mobile/components/coursePage/styles/CourseReviews.jsx","mobile/components/coursePage/CourseReviews.jsx","mobile/components/coursePage/styles/CourseExtraInfo.jsx","mobile/components/coursePage/CourseExtraInfo.jsx","mobile/components/coursePage/styles/CoursePage.jsx","mobile/components/coursePage/CoursePage.jsx","pageSwitches/CoursePageSwitch.jsx","graphql/queries/course/Course.jsx"],"names":["ProgressBarWrapper","styled","div","width","Number","isInteger","height","theme","light3","Complete","span","primary","ProgressBar","percentComplete","percentWidth","Math","round","NotFoundPageWrapper","PageContent","NotFoundText","Heading2","withRouter","text","history","displayText","Button","handleClick","push","LANDING_PAGE_ROUTE","CircleWrapper","NumbersInCircle","LargePercentage","Heading1","GreyText","dark2","Small","withTheme","percent","barThickness","label","dataKey","data","value","cx","cy","outerRadius","innerRadius","fill","BubbleRatingsWrapper","UnitCircle","diameter","filledColor","emptyColor","filled","primaryDark","light4","BoxShadow","ThumbsWrapper","Thumb","Body","colored","Thumbs","boolRating","Squares","rating","total","Array","apply","map","_","ind","key","CourseFragment","courseInfo","gql","courseTerm","courseSchedule","courseRequirements","RatingBoxWrapper","ratingBoxWidth","ratingBoxHeight","PAGE_CONTENT_WIDTH","LikesColumn","ProgressBarColumn","ProgressBarColumnWrapper","ProgressWrapper","ProgressTextLabel","ProgressNumberLabel","NumCommentsAndRatingsWrapper","NumCommentsWrapper","dark3","NumRatingsWrapper","RATING_BOX_HEIGHT","RATING_BOX_WIDTH","RatingBox","percentages","numRatings","numComments","likedPercent","CircularPercentage","metric","displayName","ReviewWrapper","Card","light1","ReviewPictureWrapper","ReviewPicture","ReviewUpvotes","selected","ReviewTextWrapper","ReviewText","ReviewAuthor","dark1","ReviewMetricsWrapper","table","ReviewMetricsBody","tbody","SingleMetricWrapper","tr","SingleMetricSquares","td","SingleMetricLabel","UpvoteNumber","MetricIfExists","metrics","undefined","BubbleRatings","charAt","toUpperCase","slice","upvotes","review","reviewer","color","size","strokeWidth","full_name","program","CircularPercentageWrapper","RatingBarsColumn","ReviewsAndGraphButtonWrapper","connect","state","getWidth","min","ReviewPictureAndMetricsRow","ReviewPictureAndUpvotesWrapper","CourseInfoHeaderWrapper","white","CourseCodeAndNameSection","primaryExtraDark","CourseCodeAndNameWrapper","CourseDescriptionSection","CourseCode","CourseName","Description","RatingsSection","CourseCodeAndStar","StarAlignmentWrapper","CourseInfoHeader","course","shortlisted","setAuthModalOpen","course_reviews_aggregate","aggregate","avg","liked","easy","useful","count","text_count","useState","isStarClicked","setIsStarClicked","splitCourseCode","code","ShortlistStar","checked","onClick","isLoggedIn","name","description","CourseScheduleWrapper","numRows","LEC","LAB","Link","professors","secsToTime","secs","t","floor","h","m","getInfoGroupings","meetings","groupedByTimeOfDay","reduce","groupings","curr","start_seconds","end_seconds","startSeconds","endSeconds","startTime","endTime","location","prof","id","timeRanges","days","startDate","start_date","endDate","end_date","answer","Object","entries","forEach","entry","sort","a","b","daysOfWeek","newTimeRanges","newDays","currRange","i","length","nextRange","day","includes","indexOf","CourseSchedule","sections","termsOffered","allTerms","term","sectionsCleanedData","s","section","class","class_number","enrolled","enrollment_total","capacity","enrollment_capacity","infoGroupings","console","log","tabList","title","termCodeToDate","render","TabContainer","initialSelectedTab","contentPadding","CoursePageWrapper","ColumnWrapper","Column1","WideColumn","Column2","ThinColumn","ExtraInfoBoxWrapper","Heading4","CourseReviewQuestionBox","CourseQuestionTextAndToggle","CourseReviewQuestionText","Heading3","Header","accent","LineOfText","CourseText","courses","Prereqs","prereqs","postreqs","courseCode","prereq","idx","to","getCoursePageRoute","prerequisite","postreq","postrequisite","ExtraInfoBox","convertInputToState","courseReviews","reviewsByProf","courseReviewProfs","profReviewProfs","course_review","r","course_review_votes_aggregate","sum","vote","user","prof_review","allProfs","current","profObject","foundProfObject","reviews","prof_review_votes_aggregate","clear","engaging","obj","useCourseReviewsReducer","initialState","setState","action","newState","currentState","type","payload","processDispatch","propTypes","PropTypes","shape","arrayOf","string","number","CourseReviewWrapper","CourseCourseReviewsWrapper","CourseProfReviewsWrapper","ReviewsForSingleProfWrapper","ReviewListWrapper","ReviewsOptionsWrapper","DropdownPanelWrapper","ProfDropdownPanelWrapper","DropdownTableText","ProfHeader","ProfName","ProfLikedMetric","ProfLikedPercent","ProfLikedPercentLabel","ShowMoreReviewsSection","ShowMoreReviewsText","CourseReviewFragment","courseReviewInfo","profReviewInfo","GET_COURSE_REVIEW","CourseCourseReviews","courseSort","setCourseSort","courseProfFilter","courseProfFilterOptions","setCourseProfFilter","showingAllReviews","setShowingAllReviews","DropdownList","selectedIndex","options","onChange","MIN_REVIEWS_SHOWN","Review","CourseProfReviews","showingReviewsMap","setShowingReviewsMap","getProfPageRoute","courseID","useQuery","variables","loading","profReviewFilter","setProfReviewFilter","showingProfReviews","setShowingProfReviews","reviewDataState","dispatch","useEffect","LoadingSpinner","courseReviewsToShow","filter","profProfFilterOptions","profReviewsToShow","numProfReviews","ProfFilterDropdown","CoursePageContent","userReview","authModalOpen","reviewModalOpen","setReviewModalOpen","LikeCourseToggle","padding","ModalHOC","isModalOpen","onCloseModal","CourseReviewCourseBox","courseIDList","reviewData","onCancel","prerequisites","postrequisites","AuthModal","getIsLoggedIn","user_shortlist","CourseNameSection","CourseDescriptionParagraph","light2","zIndex","CollapseableContainer","course_review_aggregate","prof_review_aggregate","CourseExtraInfoWrapper","CourseExtraInfo","CoursePageSwitch","isDesktopPage","match","params","toLowerCase","query","fetchUserData","userId","buildCourseQuery","getUserId","error","NotFoundPage","getIsBrowserDesktop"],"mappings":"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","file":"static/js/8.aa811ef6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ProgressBarWrapper = styled.div`\n  width: ${({ width }) => (Number.isInteger(width) ? `${width}px` : width)};\n  height: ${({ height }) => height}px;\n  display: flex;\n  margin: 10px 8px 10px 0;\n  background-color: ${({ theme }) => theme.light3};\n  border-radius: 4px;\n  box-shadow: 0px 2px 5px rgba(236, 237, 237, 0.5),\n    0px 0px 5px rgba(142, 147, 148, 0.2);\n`;\n\nexport const Complete = styled.span`\n  border-radius: ${({ width }) => (width >= 100 ? '4px' : '4px 0 0 4px')};\n  width: ${({ width }) => width}%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.primary};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ProgressBarWrapper, Complete } from './styles/ProgressBar';\n\nconst ProgressBar = ({ percentComplete, width = 188, height = 16 }) => {\n  const percentWidth = Math.round(percentComplete * 100);\n  return (\n    <ProgressBarWrapper width={width} height={height}>\n      <Complete width={percentWidth} />\n    </ProgressBarWrapper>\n  );\n};\n\nProgressBar.propTypes = {\n  percentComplete: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default ProgressBar;\n","import styled from 'styled-components';\n\nimport { Heading2 , PageContent} from '../../../../constants/Mixins';\n\nexport const NotFoundPageWrapper = styled.div`\n  min-height: 100%;\n  padding-top: 200px;\n  margin: auto;\n  ${PageContent}\n`;\n\nexport const NotFoundText = styled.div`\n  ${Heading2}\n  margin-bottom: 40px;\n`;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Button from '../../../components/input/Button';\nimport { LANDING_PAGE_ROUTE } from '../../../Routes';\n\nimport { NotFoundPageWrapper, NotFoundText } from './styles/NotFoundPage';\n\nconst NotFoundPage = ({ text, history }) => {\n  const handleClick = () => {\n    history.push(LANDING_PAGE_ROUTE);\n  };\n\n  const displayText = text ? text : `Sorry, this page doesn't exist!`;\n\n  return (\n    <NotFoundPageWrapper>\n      <NotFoundText>{displayText}</NotFoundText>\n      <Button handleClick={handleClick}>Home</Button>\n    </NotFoundPageWrapper>\n  );\n};\n\nNotFoundPage.propTypes = {\n  text: PropTypes.string,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(NotFoundPage);\n","import styled from 'styled-components';\nimport { Heading1, Small } from '../../../constants/Mixins';\n\nexport const CircleWrapper = styled.div`\n  position: relative;\n`;\n\nexport const NumbersInCircle = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  bottom: 0;\n  left: 0;\n  height: ${({ height }) => height}px;\n  width: ${({ height }) => height}px;\n  justify-content: center;\n  align-items: center;\n  transform: scale(${({ height }) => height / 212});\n`;\n// Transform: scale is iffy hard code but this seems to be the most veratile way to resize the inner text\n// Or else we'll have to change the font types with if statements\n\nexport const LargePercentage = styled.div`\n  ${Heading1};\n`;\nexport const GreyText = styled.div`\n  color: ${({ theme }) => theme.dark2};\n  ${Small};\n`;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { PieChart, Pie, Cell } from 'recharts';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  CircleWrapper,\n  NumbersInCircle,\n  LargePercentage,\n  GreyText,\n} from './styles/CircularPercentage';\n\n//Contained within a square tho\nconst CircularPercentage = ({\n  theme,\n  height,\n  percent,\n  barThickness,\n  label,\n}) => (\n  <CircleWrapper>\n    <PieChart width={height} height={height}>\n      <Pie\n        dataKey=\"value\"\n        data={[{ value: percent }, { value: 100 - percent }]}\n        cx=\"50%\"\n        cy=\"50%\"\n        outerRadius={height / 2}\n        innerRadius={height / 2 - barThickness}\n      >\n        <Cell fill={theme.primary} />\n        <Cell fill={theme.light3} />\n      </Pie>\n    </PieChart>\n    <NumbersInCircle height={height}>\n      <LargePercentage>{percent}%</LargePercentage>\n      <GreyText>{label}</GreyText>\n    </NumbersInCircle>\n  </CircleWrapper>\n);\n\nCircularPercentage.propTypes = {\n  height: PropTypes.number,\n  percent: PropTypes.number, //Out of 100, not as a decimal\n  barThickness: PropTypes.number,\n  label: PropTypes.string,\n};\n\nexport default withTheme(CircularPercentage);\n","import styled from 'styled-components';\nimport { Body, BoxShadow } from '../../../constants/Mixins';\n\nexport const BubbleRatingsWrapper = styled.div`\n  display: flex;\n  padding-bottom: 16px;\n\n  @media only screen and (max-width: 800px) {\n    padding-bottom: 8px\n  }\n`;\n\nexport const UnitCircle = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${({ diameter }) => diameter}px;\n  height: ${({ diameter }) => diameter}px;\n  border-radius: ${({ diameter }) => diameter / 2}px;\n  background-color: ${({ filledColor, emptyColor, theme, filled }) =>\n    filled\n      ? filledColor\n        ? filledColor\n        : theme.primary\n      : emptyColor\n      ? emptyColor\n      : 'white'};\n  border: 2px solid ${({ filled, theme }) => (filled ? theme.primaryDark : theme.light4)};\n  margin: 0 1px;\n  ${({ filled }) => (filled ? '' : BoxShadow)}\n`;\n\nexport const ThumbsWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Thumb = styled.div`\n  ${Body}\n  color: ${({theme, colored}) => colored ? theme.primary : theme.light4};\n  margin-left: 4px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThumbsUp, ThumbsDown } from 'react-feather';\nimport { withTheme } from 'styled-components';\n\n/* Styled Components */\nimport {\n  BubbleRatingsWrapper,\n  UnitCircle,\n  ThumbsWrapper,\n  Thumb\n} from './styles/BubbleRatings';\n\nconst Thumbs = ({ boolRating }) => (\n  <ThumbsWrapper>\n    <Thumb colored={boolRating === true}>\n      <ThumbsUp width={20} height={20} />\n    </Thumb>\n    <Thumb colored={boolRating === false}>\n      <ThumbsDown width={20} height={20} />\n    </Thumb>\n  </ThumbsWrapper>\n);\n\nconst Squares = ({ rating, total }) => (\n  <>\n    {Array.apply(null, Array(total)).map((_, ind) => {\n      return (\n        <UnitCircle\n          key={ind}\n          filled={ind < rating}\n          diameter={16}\n        />\n      );\n    })}\n  </>\n);\n\n/*\n  Provides either a row of circles indicating a rating out of 5 or \n  a Y and N block indicating a rating for yes or no (for the liked it rating for courses)\n*/\nconst BubbleRatings = ({ total = 5, rating, boolRating, theme }) => {\n  return (\n    <BubbleRatingsWrapper>\n      {boolRating === true || boolRating === false ? (\n        <Thumbs boolRating={boolRating} />\n      ) : (\n        <Squares rating={rating} total={total} />\n      )}\n    </BubbleRatingsWrapper>\n  );\n};\n\nBubbleRatings.propTypes = {\n  total: PropTypes.number, //int total that the rating is out of (5 for us rn)\n  rating: PropTypes.number, // int rating that is given (out of 5)\n  boolRating: PropTypes.bool, //This will be not null/undefined if we want to use this intead of a number out of 5\n  theme: PropTypes.object,\n};\n\nexport default withTheme(BubbleRatings);\n","import gql from 'graphql-tag';\r\n\r\nconst CourseFragment = {\r\n  courseInfo: gql`\r\n    fragment CourseInfoFragment on course {\r\n      id\r\n      code\r\n      name\r\n      description\r\n      course_reviews_aggregate {\r\n        aggregate {\r\n          avg {\r\n            easy\r\n            liked\r\n            useful\r\n          }\r\n          count(columns: liked)\r\n          text_count: count(columns: text)\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  courseTerm: gql`\r\n    fragment CourseTermFragment on course {\r\n      sections {\r\n        term\r\n      }\r\n    }\r\n  `,\r\n  courseSchedule: gql`\r\n    fragment CourseScheduleFragment on course {\r\n      sections {\r\n        id\r\n        enrollment_capacity\r\n        enrollment_total\r\n        class_number\r\n        campus\r\n        section\r\n        term\r\n        meetings {\r\n          days\r\n          start_date\r\n          end_date\r\n          start_seconds\r\n          end_seconds\r\n          location\r\n          prof {\r\n            id\r\n            name\r\n          }\r\n          is_closed\r\n          is_cancelled\r\n        }\r\n        exams {\r\n          date\r\n          day\r\n          end_seconds\r\n          is_tba\r\n          location\r\n          section_id\r\n          start_seconds\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  courseRequirements: gql`\r\n  fragment CourseRequirementsFragment on course {\r\n    antireqs\r\n    coreqs\r\n    prereqs\r\n    prerequisites {\r\n      prerequisite {\r\n        id\r\n        code\r\n        name\r\n      }\r\n    }\r\n    postrequisites {\r\n      postrequisite {\r\n        id\r\n        code\r\n        name\r\n      }\r\n    }\r\n  }\r\n  `\r\n};\r\n\r\nexport default CourseFragment;\r\n","import styled from 'styled-components';\nimport { Body, BoxShadow } from '../../../../constants/Mixins';\nimport { PAGE_CONTENT_WIDTH } from '../../../../constants/PageConstants';\n\nexport const RatingBoxWrapper = styled.div`\n  width: ${({ ratingBoxWidth }) => ratingBoxWidth}px;\n  height: ${({ ratingBoxHeight }) => ratingBoxHeight}px;\n  background-color: white;\n  display: flex;\n  border-radius: ${({ ratingBoxHeight }) => ratingBoxHeight / 2}px 5px 5px\n    ${({ ratingBoxHeight }) => ratingBoxHeight / 2}px;\n  justify-content: space-between;\n  position: relative;\n  ${BoxShadow}\n\n  @media only screen and (max-width: ${PAGE_CONTENT_WIDTH + 32}px) {\n    margin-right: 32px;\n  }\n`;\n\nexport const LikesColumn = styled.div`\n  margin: 16px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const ProgressBarColumn = styled.div`\n  margin: 16px 0 16px 16px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ProgressBarColumnWrapper = styled.div`\n  margin: auto;\n`;\n\nexport const ProgressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 8px;\n`;\n\nexport const ProgressTextLabel = styled.div``;\n\nexport const ProgressBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProgressNumberLabel = styled.div`\n  ${Body};\n  margin: 8px;\n`;\n\nexport const NumCommentsAndRatingsWrapper = styled.div`\n  display: flex;\n  margin: 8px;\n`;\n\nexport const NumCommentsWrapper = styled.div`\n  ${Body};\n  color: ${({ theme }) => theme.dark3};\n`;\n\nexport const NumRatingsWrapper = styled.div`\n  ${Body};\n  margin-left: 24px;\n  color: ${({ theme }) => theme.dark3};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  RatingBoxWrapper,\n  LikesColumn,\n  ProgressBarColumn,\n  ProgressBarColumnWrapper,\n  ProgressWrapper,\n  ProgressTextLabel,\n  ProgressBarWrapper,\n  ProgressNumberLabel,\n  NumCommentsAndRatingsWrapper,\n  NumCommentsWrapper,\n  NumRatingsWrapper,\n} from './styles/RatingBox';\n\n/* Child Components */\nimport ProgressBar from '../../../components/display/ProgressBar';\nimport CircularPercentage from '../../../components/statistics/CircularPercentage';\n\nexport const RATING_BOX_HEIGHT = 244;\nexport const RATING_BOX_WIDTH = 512;\n\n/*\n  NOTE DATA FOR \"LIKED\" MUST BE PERCENTAGES[0]\n*/\nconst RatingBox = ({ percentages, numRatings, numComments }) => {\n  const likedPercent = Math.round(percentages[0].percent * 100);\n\n  return (\n    <RatingBoxWrapper\n      ratingBoxHeight={RATING_BOX_HEIGHT}\n      ratingBoxWidth={RATING_BOX_WIDTH}\n    >\n      <LikesColumn>\n        <CircularPercentage\n          height={RATING_BOX_HEIGHT - 32}\n          percent={likedPercent}\n          barThickness={16}\n          label=\"liked\"\n        />\n      </LikesColumn>\n      <ProgressBarColumn>\n        <ProgressBarColumnWrapper>\n          {percentages.map((metric, ind) =>\n            ind === 0 ? null : (\n              <ProgressWrapper key={metric.displayName}>\n                <ProgressTextLabel>{metric.displayName}</ProgressTextLabel>\n                <ProgressBarWrapper>\n                  <ProgressBar percentComplete={metric.percent} />\n                  <ProgressNumberLabel>\n                    {Math.round(metric.percent * 100)}%\n                  </ProgressNumberLabel>\n                </ProgressBarWrapper>\n              </ProgressWrapper>\n            ),\n          )}\n          <NumCommentsAndRatingsWrapper>\n            <NumCommentsWrapper>\n              {numComments} {numComments === 1 ? 'comment' : 'comments'}\n            </NumCommentsWrapper>\n            <NumRatingsWrapper>\n              {numRatings}\n              {numRatings === 1 ? ' rating' : ' ratings'}\n            </NumRatingsWrapper>\n          </NumCommentsAndRatingsWrapper>\n        </ProgressBarColumnWrapper>\n      </ProgressBarColumn>\n    </RatingBoxWrapper>\n  );\n};\n\nRatingBox.propTypes = {\n  percentages: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayName: PropTypes.string,\n      percent: PropTypes.number,\n    }),\n  ),\n  numRatings: PropTypes.number,\n  numComments: PropTypes.number,\n  theme: PropTypes.object,\n};\n\nexport default RatingBox;\n","import styled from 'styled-components';\nimport { Card, BoxShadow, Body } from '../../../../constants/Mixins';\n\nexport const ReviewWrapper = styled.div`\n  ${Card('24px 32px')}\n  ${BoxShadow}\n  margin-bottom: 32px;\n  background-color: ${({ theme }) => theme.light1};\n  justify-content: space-between;\n  flex-direction: row;\n`;\n\nexport const ReviewPictureWrapper = styled.div`\n  display: flex;\n  margin-bottom: 32px;\n  margin-right: 32px;\n  position: relative;\n`;\n\nexport const ReviewPicture = styled.div`\n  width: 64px;\n  height: 64px;\n  background-color: ${({ theme }) => theme.dark3};\n  border-radius: 32px 32px 32px 32px;\n`;\n\nexport const ReviewUpvotes = styled.div`\n  position: absolute;\n  top: 36px;\n  right: -16px;\n  width: 40px;\n  height: 40px;\n  ${({ selected, theme }) =>\n    selected ? `background-color:${theme.primary};` : ''}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  border-radius: 20px 20px 20px 20px;\n  cursor: pointer;\n  border: 2px solid ${({ theme }) => theme.light3};\n\n  &:hover {\n    ${({ selected, theme }) =>\n      `background-color:${selected ? theme.primaryDark : theme.light3};`\n  }\n`;\n\nexport const ReviewTextWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  word-wrap: break-word;\n`;\n\nexport const ReviewText = styled.div`\n  word-break: break-word;\n  ${Body}\n`;\n\nexport const ReviewAuthor = styled.div`\n  ${Body}\n  margin-top: 16px;\n  color: ${({ theme }) => theme.dark1};\n`;\n\nexport const ReviewMetricsWrapper = styled.table`\n  min-width: 168px;\n  margin-left: 16px;\n`;\n\nexport const ReviewMetricsBody = styled.tbody``;\n\nexport const SingleMetricWrapper = styled.tr``;\n\nexport const SingleMetricSquares = styled.td`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const SingleMetricLabel = styled.td`\n  ${Body}\n  color: ${({theme}) => theme.dark2};\n  padding-left: 8px;\n  vertical-align: top;\n`;\n\nexport const UpvoteNumber = styled.div`\n  ${Body}\n  color: ${({ selected, theme }) => (selected ? 'white' : theme.dark3)}\n  margin-left: 4px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { ThumbsUp } from 'react-feather';\n\n/* Styled Components */\nimport {\n  ReviewWrapper,\n  ReviewTextWrapper,\n  ReviewMetricsWrapper,\n  ReviewMetricsBody,\n  ReviewPictureWrapper,\n  ReviewPicture,\n  ReviewUpvotes,\n  ReviewText,\n  ReviewAuthor,\n  UpvoteNumber,\n  SingleMetricWrapper,\n  SingleMetricSquares,\n  SingleMetricLabel,\n} from './styles/Review';\n\n/* Child Components */\nimport BubbleRatings from '../../../components/input/BubbleRatings';\n\nconst MetricIfExists = (metrics, metric) => {\n  if (metrics[metric] !== null && metrics[metric] !== undefined) {\n    if (metrics[metric] === true || metrics[metric] === false) {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings boolRating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {metric === 'liked' ? 'Liked' : metric}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    } else {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings total={5} rating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {' '}\n            {metric.charAt(0).toUpperCase() + metric.slice(1)}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    }\n  }\n};\n\nconst Review = ({ upvotes, review, reviewer, metrics, theme }) => {\n  const userUpvoted = true;\n  return (\n    <ReviewWrapper>\n      <ReviewPictureWrapper>\n        <ReviewPicture />\n        <ReviewUpvotes selected={userUpvoted}>\n          <ThumbsUp\n            color={userUpvoted ? 'white' : theme.dark3}\n            size={16}\n            strokeWidth={2}\n          />\n          <UpvoteNumber selected={userUpvoted}>\n            {upvotes ? upvotes : 0}\n          </UpvoteNumber>\n        </ReviewUpvotes>\n      </ReviewPictureWrapper>\n      <ReviewTextWrapper>\n        <ReviewText>{review}</ReviewText>\n        <ReviewAuthor>\n          -{reviewer.full_name}, a {review.program} student\n        </ReviewAuthor>\n      </ReviewTextWrapper>\n      <ReviewMetricsWrapper>\n        <ReviewMetricsBody>\n          {MetricIfExists(metrics, 'clear')}\n          {MetricIfExists(metrics, 'engaging')}\n          {MetricIfExists(metrics, 'useful')}\n          {MetricIfExists(metrics, 'easy')}\n          {MetricIfExists(metrics, 'liked')}\n        </ReviewMetricsBody>\n      </ReviewMetricsWrapper>\n    </ReviewWrapper>\n  );\n};\n\nReview.propTypes = {\n  upvotes: PropTypes.number,\n  review: PropTypes.string,\n  reviewer: PropTypes.shape({\n    name: PropTypes.string,\n    program: PropTypes.string,\n  }),\n  metrics: PropTypes.shape({\n    useful: PropTypes.number, //not all these metrics have to exist, we should only display the ones that do\n    easy: PropTypes.number, //for example course review only has useful, easy liked,\n    liked: PropTypes.bool, //prof review only has liked, clear and engagin\n    clear: PropTypes.number,\n    engaging: PropTypes.number,\n  }),\n};\n\nexport default withTheme(Review);\n","import styled from 'styled-components';\nimport { Body, BoxShadow } from '../../../../constants/Mixins';\n\nexport const RatingBoxWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CircularPercentageWrapper = styled.div`\n  padding: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RatingBarsColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 360px;\n`;\n\nexport const ProgressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 8px 8px 0;\n\n  &:first-child {\n    margin-top: 16px;\n  }\n`;\n\nexport const ProgressTextLabel = styled.div``;\n\nexport const ProgressBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProgressNumberLabel = styled.div`\n  ${Body};\n  margin: 8px;\n`;\n\nexport const ReviewsAndGraphButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const NumCommentsAndRatingsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 0 16px 0;\n`;\n\nexport const NumCommentsWrapper = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.dark3};\n  margin-bottom: 8px;\n`;\n\nexport const NumRatingsWrapper = styled.div`\n  ${Body};\n  color: ${({ theme }) => theme.dark3};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n/* Selectors */\nimport { getWidth } from '../../../data/reducers/BrowserReducer';\n\n/* Child Components */\nimport CircularPercentage from '../../../components/statistics/CircularPercentage';\nimport ProgressBar from '../../../components/display/ProgressBar';\n\n/* Styled Components */\nimport {\n  RatingBoxWrapper,\n  CircularPercentageWrapper,\n  RatingBarsColumn,\n  ProgressWrapper,\n  ProgressTextLabel,\n  ProgressBarWrapper,\n  ProgressNumberLabel,\n  ReviewsAndGraphButtonWrapper,\n  NumCommentsAndRatingsWrapper,\n  NumCommentsWrapper,\n  NumRatingsWrapper,\n} from './styles/RatingBox';\n\nconst mapStateToProps = state => ({\n  width: getWidth(state),\n});\n\nconst RatingBox = ({ percentages, numRatings, numComments, width }) => {\n  const likedPercent = Math.round(percentages[0].percent * 100);\n  return (\n    <RatingBoxWrapper>\n      <CircularPercentageWrapper>\n        <CircularPercentage\n          height={Math.min(width / 2 - 32, 200)}\n          percent={likedPercent}\n          barThickness={16}\n          label=\"liked\"\n        />\n      </CircularPercentageWrapper>\n      <RatingBarsColumn>\n        {percentages.map((metric, ind) =>\n          ind === 0 ? null : (\n            <ProgressWrapper key={metric.displayName}>\n              <ProgressTextLabel>{metric.displayName}</ProgressTextLabel>\n              <ProgressBarWrapper>\n                <ProgressBar percentComplete={metric.percent} width=\"100%\" />\n                <ProgressNumberLabel>\n                  {Math.round(metric.percent * 100)}%\n                </ProgressNumberLabel>\n              </ProgressBarWrapper>\n            </ProgressWrapper>\n          ),\n        )}\n        <ReviewsAndGraphButtonWrapper>\n          <NumCommentsAndRatingsWrapper>\n            <NumCommentsWrapper>\n              {numComments} {numComments === 1 ? 'comment' : 'comments'}\n            </NumCommentsWrapper>\n            <NumRatingsWrapper>\n              {numRatings} {numRatings === 1 ? 'rating' : 'ratings'}\n            </NumRatingsWrapper>\n          </NumCommentsAndRatingsWrapper>\n        </ReviewsAndGraphButtonWrapper>\n      </RatingBarsColumn>\n    </RatingBoxWrapper>\n  );\n};\n\nRatingBox.propTypes = {\n  percentages: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayName: PropTypes.string,\n      percent: PropTypes.number,\n    }),\n  ),\n  numRatings: PropTypes.number,\n  numComments: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(RatingBox);\n","import styled from 'styled-components';\nimport { BoxShadow, Body } from '../../../../constants/Mixins';\n\nexport const ReviewWrapper = styled.div`\n  ${BoxShadow}\n  padding: 16px;\n  margin-bottom: 32px;\n  background-color: ${({ theme }) => theme.light1};\n  align-content: center;\n`;\n\nexport const ReviewPictureAndMetricsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ReviewPictureAndUpvotesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 32px;\n`;\n\nexport const ReviewPicture = styled.div`\n  width: 64px;\n  height: 64px;\n  background-color: ${({ theme }) => theme.dark3};\n  border-radius: 32px 32px 32px 32px;\n  margin-right: 16px;\n\n  @media only screen and (max-width: 320px) {\n    margin-right: 8px\n  }\n`;\n\nexport const ReviewUpvotes = styled.div`\n  width: 40px;\n  height: 40px;\n  ${({ selected, theme }) =>\n    selected ? `background-color:${theme.primary};` : ''}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  border-radius: 20px 20px 20px 20px;\n  border: 2px solid ${({ theme }) => theme.light3};\n`;\n\nexport const UpvoteNumber = styled.div`\n  ${Body}\n  color: ${({ selected, theme }) => (selected ? 'white' : theme.dark3)}\n  margin-left: 4px;\n`;\n\nexport const ReviewMetricsWrapper = styled.table`\n  min-width: 158px;\n  margin-left: 8px;\n`;\n\nexport const ReviewMetricsBody = styled.tbody``;\n\nexport const SingleMetricWrapper = styled.tr``;\n\nexport const SingleMetricSquares = styled.td`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const SingleMetricLabel = styled.td`\n  ${Body}\n  vertical-align: top;\n`;\n\nexport const ReviewTextWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  word-wrap: break-word;\n`;\n\nexport const ReviewText = styled.div`\n  word-break: break-word;\n  ${Body}\n`;\n\nexport const ReviewAuthor = styled.div`\n  ${Body}\n  margin-top: 16px;\n  color: ${({ theme }) => theme.dark1};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { ThumbsUp } from 'react-feather';\n\n/* Styled Components */\nimport {\n  ReviewWrapper,\n  ReviewPictureAndMetricsRow,\n  ReviewTextWrapper,\n  ReviewMetricsWrapper,\n  ReviewMetricsBody,\n  ReviewPictureAndUpvotesWrapper,\n  ReviewPicture,\n  ReviewUpvotes,\n  UpvoteNumber,\n  ReviewText,\n  ReviewAuthor,\n  SingleMetricWrapper,\n  SingleMetricSquares,\n  SingleMetricLabel,\n} from './styles/Review';\n\n/* Child Components */\nimport BubbleRatings from '../../../components/input/BubbleRatings';\n\nconst MetricIfExists = (metrics, metric) => {\n  if (metrics[metric] !== null && metrics[metric] !== undefined) {\n    if (metrics[metric] === true || metrics[metric] === false) {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings boolRating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {metric === 'liked' ? 'Liked' : metric}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    } else {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings total={5} rating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {' '}\n            {metric.charAt(0).toUpperCase() + metric.slice(1)}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    }\n  }\n};\n\nconst Review = ({ upvotes, review, reviewer, metrics, theme }) => {\n  const userUpvoted = true;\n  return (\n    <ReviewWrapper>\n      <ReviewPictureAndMetricsRow>\n        <ReviewPictureAndUpvotesWrapper>\n          <ReviewPicture />\n          <ReviewUpvotes selected={userUpvoted}>\n            <ThumbsUp\n              color={userUpvoted ? 'white' : theme.dark3}\n              size={16}\n              strokeWidth={2}\n            />\n            <UpvoteNumber selected={userUpvoted}>\n              {upvotes ? upvotes : 0}\n            </UpvoteNumber>\n          </ReviewUpvotes>\n        </ReviewPictureAndUpvotesWrapper>\n        <ReviewMetricsWrapper>\n          <ReviewMetricsBody>\n            {MetricIfExists(metrics, 'clear')}\n            {MetricIfExists(metrics, 'engaging')}\n            {MetricIfExists(metrics, 'useful')}\n            {MetricIfExists(metrics, 'easy')}\n            {MetricIfExists(metrics, 'liked')}\n          </ReviewMetricsBody>\n        </ReviewMetricsWrapper>\n      </ReviewPictureAndMetricsRow>\n      <ReviewTextWrapper>\n        <ReviewText>{review}</ReviewText>\n        <ReviewAuthor>\n          -{reviewer.full_name}, a {review.program} student\n        </ReviewAuthor>\n      </ReviewTextWrapper>\n    </ReviewWrapper>\n  );\n};\n\nReview.propTypes = {\n  upvotes: PropTypes.number,\n  review: PropTypes.string,\n  reviewer: PropTypes.shape({\n    name: PropTypes.string,\n    program: PropTypes.string,\n  }),\n  prof: PropTypes.string,\n  metrics: PropTypes.shape({\n    useful: PropTypes.number, //not all these metrics have to exist, we should only display the ones that do\n    easy: PropTypes.number, //for example course review only has useful, easy liked,\n    liked: PropTypes.bool, //prof review only has liked, clear and engagin\n    clear: PropTypes.number,\n    engaging: PropTypes.number,\n  }),\n};\n\nexport default withTheme(Review);\n","import styled from 'styled-components';\n\n/* Mixins */\nimport {\n  Heading1,\n  Heading2,\n  Body,\n  PageContent,\n} from '../../../../constants/Mixins';\n\nexport const CourseInfoHeaderWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 32px;\n  display: flex;\n  background-color: ${({ theme }) => theme.white};\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const CourseCodeAndNameSection = styled.div`\n  width: 100%;\n  min-height: 320px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background-color: ${({ theme }) => theme.primaryExtraDark};\n  position: relative;\n`;\n\nexport const CourseCodeAndNameWrapper = styled.div`\n  ${PageContent}\n  margin: auto;\n  margin-bottom: 48px;\n`;\n\nexport const CourseDescriptionSection = styled.div`\n  position: relative;\n  ${PageContent}\n  padding-bottom: 48px;\n  margin: auto;\n`;\n\nexport const CourseCode = styled.div`\n  color: ${({ theme }) => theme.white};\n  ${Heading1};\n  text-transform: uppercase;\n  max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n`;\n\nexport const CourseName = styled.div`\n  color: ${({ theme }) => theme.light1};\n  max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  ${Heading2};\n  font-weight: 400;\n`;\n\nexport const Description = styled.div`\n  ${Body}\n  margin-top: 48px;\n  max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  line-height: 1.5;\n  color: ${({ theme }) => theme.dark1};\n`;\n\nexport const RatingsSection = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: 32px;\n`;\n\nexport const CourseCodeAndStar = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nexport const StarAlignmentWrapper = styled.div`\n  margin-left: 16px;\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  CourseInfoHeaderWrapper,\n  CourseCodeAndNameSection,\n  CourseDescriptionSection,\n  CourseCodeAndNameWrapper,\n  CourseCode,\n  CourseName,\n  Description,\n  RatingsSection,\n  CourseCodeAndStar,\n  StarAlignmentWrapper,\n} from './styles/CourseInfoHeader';\n\n/* Child Components */\nimport RatingBox, { RATING_BOX_WIDTH } from '../common/RatingBox';\nimport ShortlistStar from '../../../components/input/ShortlistStar';\n\nimport { splitCourseCode } from '../../../utils/Misc';\nimport { isLoggedIn } from '../../../utils/Auth';\n\nconst CourseInfoHeader = ({ course, shortlisted, setAuthModalOpen }) => {\n  const { liked, easy, useful } = course.course_reviews_aggregate.aggregate.avg;\n  const { count, text_count } = course.course_reviews_aggregate.aggregate;\n  const [isStarClicked, setIsStarClicked] = useState(shortlisted);\n\n  const onStarClick = () => {\n    isLoggedIn() ? setIsStarClicked(!isStarClicked) : setAuthModalOpen(true);\n  };\n\n  return (\n    <CourseInfoHeaderWrapper>\n      <CourseCodeAndNameSection>\n        <CourseCodeAndNameWrapper>\n          <CourseCodeAndStar>\n            <CourseCode ratingBoxWidth={RATING_BOX_WIDTH}>\n              {splitCourseCode(course.code)}\n            </CourseCode>\n            <StarAlignmentWrapper>\n              <ShortlistStar\n                size={36}\n                checked={isStarClicked}\n                onClick={onStarClick}\n              />\n            </StarAlignmentWrapper>\n          </CourseCodeAndStar>\n          <CourseName ratingBoxWidth={RATING_BOX_WIDTH}>\n            {course.name}\n          </CourseName>\n        </CourseCodeAndNameWrapper>\n      </CourseCodeAndNameSection>\n      <CourseDescriptionSection>\n        <RatingsSection>\n          <RatingBox\n            numRatings={count}\n            numComments={text_count}\n            percentages={[\n              {\n                displayName: 'Likes',\n                percent: liked,\n              },\n              {\n                displayName: 'Useful',\n                percent: useful / 5,\n              },\n              {\n                displayName: 'Easy',\n                percent: easy / 5,\n              },\n            ]}\n          />\n        </RatingsSection>\n        <Description ratingBoxWidth={RATING_BOX_WIDTH}>\n          {course.description}\n        </Description>\n      </CourseDescriptionSection>\n    </CourseInfoHeaderWrapper>\n  );\n};\n\nCourseInfoHeader.propTypes = {\n  course: PropTypes.object.isRequired,\n};\n\nexport default CourseInfoHeader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { LEC, LAB } from '../CourseScheduleTableColumns';\n\nexport const CourseScheduleWrapper = styled.div`\n  margin-bottom: 32px;\n`;\n\nexport const SectionCellWrapper = styled.div`\n  display: flex;\n  position: relative;\n  height: calc(\n    ${({ numRows }) => numRows}em + ${({ numRows }) => numRows * 4}px + 60px\n  );\n  width: 100%;\n  align-items: flex-begin;\n`;\n\nexport const ColorBar = styled.div`\n  height: 100%;\n  width: 8px;\n  background-color: ${({ color, theme }) =>\n    color === LEC ? theme.dark1 : color === LAB ? theme.dark2 : theme.dark3};\n  margin-right: 24px;\n`;\n\nexport const NormalCellWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-begin;\n`;\n\nexport const SectionContentWrapper = styled.div`\n  margin: 18px 0 4px 0;\n  height: 1em;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const ContentWrapper = styled.div`\n  margin: 4px 0;\n  height: 1em;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const InstructorLink = styled(Link)`\n  color: ${({ theme }) => theme.professors};\n  margin: 4px 0 4px 0;\n  height: 1em;\n`;\n","import React from 'react';\nimport {\n  SectionCellWrapper,\n  SectionContentWrapper,\n  NormalCellWrapper,\n  ContentWrapper,\n  InstructorLink,\n  ColorBar,\n} from './styles/CourseSchedule';\nimport { getProfPageRoute } from '../../../Routes';\n\nexport const LEC = 'LEC';\nexport const LAB = 'LAB';\nexport const TUT = 'TUT';\n\nconst SectionCell = ({ cell }) => (\n  <SectionCellWrapper numRows={cell.value.numRows}>\n    <ColorBar\n      color={\n        cell.value.section.includes(LEC)\n          ? LEC\n          : cell.value.section.includes(LAB)\n          ? LAB\n          : TUT\n      }\n    />\n    <SectionContentWrapper>{cell.value.section}</SectionContentWrapper>\n  </SectionCellWrapper>\n);\n\nconst ClassCell = ({ cell }) => (\n  <NormalCellWrapper>{cell.value}</NormalCellWrapper>\n);\nconst EnrolledCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.filled}/{cell.value.capacity}\n  </NormalCellWrapper>\n);\nconst TimeCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, ind) => {\n      return (\n        <ContentWrapper key={ind}>\n          {cl.time.start} - {cl.time.end}\n        </ContentWrapper>\n      );\n    })}\n  </NormalCellWrapper>\n);\nconst DateCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, ind) => {\n      return (\n        <ContentWrapper key={ind}>\n          {cl.date.reduce((acc, curr, ind) => {\n            return `${acc}${ind === 0 ? curr : ` ${curr}`}`;\n          }, '')}\n        </ContentWrapper>\n      );\n    })}\n  </NormalCellWrapper>\n);\nconst LocationCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, ind) => {\n      return <ContentWrapper key={ind}>{cl.location}</ContentWrapper>;\n    })}\n  </NormalCellWrapper>\n);\nconst InstructorCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, ind) => {\n      if (!cl.instructor) return <ContentWrapper key={ind} />;\n      return (\n        <InstructorLink\n          to={getProfPageRoute(cl.instructor.toString())}\n          key={ind}\n        >\n          {cl.instructor}\n        </InstructorLink>\n      );\n    })}\n  </NormalCellWrapper>\n);\n\nexport const courseScheduleTableColumns = [\n  {\n    Header: 'Section',\n    Cell: SectionCell,\n    accessor: 'section',\n    style: {\n      padding: 0,\n    },\n  },\n  {\n    Header: 'Class',\n    Cell: ClassCell,\n    accessor: 'class_number',\n    style: {\n      'vertical-align': 'top',\n    },\n  },\n  {\n    Header: 'Enrolled',\n    Cell: EnrolledCell,\n    accessor: 'enrolled',\n    style: {\n      'vertical-align': 'top',\n    },\n  },\n  {\n    Header: 'Time',\n    Cell: TimeCell,\n    accessor: 'classes',\n  },\n  {\n    Header: 'Date',\n    Cell: DateCell,\n    accessor: 'classes',\n  },\n  {\n    Header: 'Location',\n    Cell: LocationCell,\n    accessor: 'classes',\n  },\n  {\n    Header: 'Instructor',\n    Cell: InstructorCell,\n    accessor: 'classes',\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport TabContainer from '../../../components/display/TabContainer';\nimport Table from '../../../components/display/Table';\nimport { courseScheduleTableColumns } from './CourseScheduleTableColumns';\n\n/* Styled Components */\nimport { CourseScheduleWrapper } from './styles/CourseSchedule';\n\n/* GraphQL Queries */\nimport { termCodeToDate } from '../../../utils/Misc';\n\nconst secsToTime = secs => {\n  const t = Math.floor(secs / 3600) % 12;\n  const h = t === 0 ? 12 : t;\n  const m = Math.floor((secs % 3600) / 60) % 60;\n  return `${h}:${m}${m === 0 ? 0 : ''} ${secs >= 3600 * 12 ? 'PM' : 'AM'}`;\n};\n\n// We first group the data by time of day range (start and end time) Now, each group should have\n// a time of day range, location, instructor, and all the more specific 'timeranges' the classes occur in.\n// Each timerange contains days of the week the class occurs as well as the start and end dates\n// of the weeks that timerange applies. We assume that, if the start and end dates are the same,\n// the time range is valid for the week beginning on that date and otherwise, the time range is\n// valid for the whole term. We order the timeranges for each grouping as follows:\n// the time range valid for the whole term, if it exists, comes first and everything else\n// is sorted by date.\nconst getInfoGroupings = meetings => {\n  var groupedByTimeOfDay = meetings.reduce((groupings, curr) => {\n    const key = `${curr.start_seconds} ${curr.end_seconds}`;\n    if (!groupings[key]) {\n      groupings[key] = {\n        startSeconds: curr.start_seconds,\n        endSeconds: curr.end_seconds,\n        startTime: secsToTime(curr.start_seconds),\n        endTime: secsToTime(curr.end_seconds),\n        location: curr.location,\n        prof: curr.prof\n          ? {\n              id: curr.prof.id,\n              name: curr.prof.name,\n            }\n          : null,\n        timeRanges: [],\n      };\n    }\n    groupings[key].timeRanges.push({\n      days: curr.days,\n      startDate: curr.start_date,\n      endDate: curr.end_date,\n    });\n    return groupings;\n  }, {});\n  var answer = [];\n  // Sort timeRanges for each group\n  Object.entries(groupedByTimeOfDay).forEach(entry => {\n    entry[1].timeRanges.sort((a, b) => a.startDate > b.startDate);\n    answer.push(entry[1]);\n  });\n  // Merge and sort days of week for timeRanges that occur in the same date range\n  const daysOfWeek = ['M', 'T', 'W', 'Th', 'F', 'S', 'Su']; //not to0 sure about saturday and sunday\n  answer.forEach(entry => {\n    var newTimeRanges = [];\n    var newDays = [];\n    entry.timeRanges.forEach((currRange, i) => {\n      if (i < entry.timeRanges.length - 1) {\n        const nextRange = entry.timeRanges[i + 1];\n        if (\n          currRange.startDate == nextRange.startDate &&\n          currRange.endDate == nextRange.endDate\n        ) {\n          for (var day of currRange.days) {\n            if (!newDays.includes(day)) {\n              newDays.push(day);\n            }\n          }\n          return;\n        }\n      }\n      for (var day of currRange.days) {\n        if (!newDays.includes(day)) {\n          newDays.push(day);\n        }\n      }\n      newDays.sort((a, b) => daysOfWeek.indexOf(a) - daysOfWeek.indexOf(b));\n      newTimeRanges.push({\n        days: newDays,\n        startDate: currRange.startDate,\n        endDate: currRange.endDate,\n      });\n      newDays = [];\n    });\n    entry.timeRanges = newTimeRanges;\n  });\n  answer.sort((a, b) => a.startSeconds - b.startSeconds);\n  return answer;\n};\n\nconst CourseSchedule = ({ sections }) => {\n  if (!sections || sections.length === 0) {\n    return null;\n  }\n  const termsOffered = sections.reduce((allTerms, curr) => {\n    if (!allTerms.includes(curr.term)) {\n      allTerms.push(curr.term);\n    }\n    return allTerms;\n  }, []);\n\n  const sectionsCleanedData = sections.map(s => ({\n    section: s.section,\n    class: s.class_number,\n    term: s.term,\n    enrolled: {\n      section: s.section,\n      class: s.class_number,\n      filled: s.enrollment_total,\n      capacity: s.enrollment_capacity,\n    },\n    // Every grouping contains a single time of day, location, and instructor\n    // and the classes that occur with those parameters.\n    infoGroupings: getInfoGroupings(s.meetings),\n  }));\n\n  console.log(sectionsCleanedData);\n\n  const tabList = termsOffered.map(term => {\n    return {\n      title: termCodeToDate(term),\n      render: () =>\n        /*\n        <Table\n          columns={courseScheduleTableColumns}\n          data={sectionsCleanedData.filter(c => c.term === term)}\n        />\n        */\n        null,\n    };\n  });\n\n  return (\n    <CourseScheduleWrapper>\n      <TabContainer\n        initialSelectedTab={0}\n        tabList={tabList}\n        contentPadding={'0'}\n      />\n    </CourseScheduleWrapper>\n  );\n};\n\nCourseSchedule.propTypes = {\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      campus: PropTypes.string,\n      class_number: PropTypes.number,\n      enrollment_capacity: PropTypes.number,\n      enrollment_total: PropTypes.number,\n      meetings: PropTypes.arrayOf(\n        PropTypes.shape({\n          days: PropTypes.arrayOf(PropTypes.string),\n          end_date: PropTypes.string,\n          end_seconds: PropTypes.number,\n          is_cancelled: PropTypes.bool,\n          is_closed: PropTypes.bool,\n          location: PropTypes.string,\n          prof: PropTypes.shape({\n            id: PropTypes.number,\n            name: PropTypes.string,\n          }),\n          start_date: PropTypes.string,\n          start_seconds: PropTypes.number,\n        }),\n      ),\n      section: PropTypes.string,\n      term: PropTypes.number,\n    }),\n  ),\n};\n\nexport default CourseSchedule;\n","import styled from 'styled-components';\nimport { PageContent } from '../../../../constants/Mixins';\n\n/* Mixins */\nimport {\n  Card,\n  WideColumn,\n  ThinColumn,\n  BoxShadow,\n  Heading3,\n  Heading4,\n} from '../../../../constants/Mixins';\n\nexport const CoursePageWrapper = styled.div`\n  width: 100%;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ColumnWrapper = styled.div`\n  ${PageContent}\n  margin: auto;\n  display: flex;\n`;\n\nexport const Column1 = styled.div`\n  ${WideColumn}\n`;\n\nexport const Column2 = styled.div`\n  ${ThinColumn}\n`;\n\nexport const ExtraInfoBoxWrapper = styled.div`\n  ${Card('32px 24px')}\n  ${BoxShadow}\n  ${Heading4}\n`;\n\nexport const CourseReviewQuestionBox = styled.div`\n  ${Card('24px')}\n  ${BoxShadow}\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 32px;\n`;\n\nexport const CourseQuestionTextAndToggle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n`;\n\nexport const CourseReviewQuestionText = styled.div`\n  ${Heading3}\n  margin-right: 24px;\n`;\n\nexport const AddReviewButton = styled.div`\n  background-color: ${({ theme }) => theme.accent} ${Heading3};\n  padding: 8px 24px 8px 24px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nimport { Heading3, Body } from '../../../constants/Mixins';\n\nexport const Header = styled.div`\n  ${Heading3}\n  margin-bottom: 16px;\n`;\n\nexport const LineOfText = styled.div`\n  margin-bottom: 16px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CourseText = styled(Link)`\n  ${Body}\n  color: ${({ theme }) => theme.courses};\n`;\n\nexport const GreyText = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.light4};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport { \n  Header,\n  LineOfText,\n  CourseText,\n  GreyText,  \n} from './styles/Prereqs';\n\nimport { splitCourseCode } from '../../utils/Misc';\nimport { getCoursePageRoute } from '../../Routes';\n\nconst Prereqs = ({ prereqs, postreqs, courseCode }) => {\n  console.log(prereqs);\n  return (\n    <>\n      <Header>{`${splitCourseCode(courseCode)} prerequisites`}</Header>\n        {prereqs.map((prereq, idx) => (\n          <LineOfText key={idx}>\n            <CourseText to={getCoursePageRoute(prereq.prerequisite.code)}>\n              {`${splitCourseCode(prereq.prerequisite.code)} - ${prereq.prerequisite.name}`}\n            </CourseText>\n          </LineOfText>\n        ))}\n        {prereqs.length === 0 && (\n          <LineOfText>\n            <GreyText>No prerequisites</GreyText>\n          </LineOfText>\n        )}\n      <br />\n      <Header>{`${splitCourseCode(courseCode)} leads to`}</Header>\n      {postreqs.map((postreq, idx) => (\n        <LineOfText key={idx}>\n          <CourseText to={getCoursePageRoute(postreq.postrequisite.code)}>\n            {`${splitCourseCode(postreq.postrequisite.code)} - ${postreq.postrequisite.name}`}\n          </CourseText>\n        </LineOfText>\n      ))}\n      {postreqs.length === 0 && (\n        <LineOfText>\n          <GreyText>Nothing</GreyText>\n        </LineOfText>\n      )}\n    </>\n  );\n};\n\nPrereqs.propTypes = {\n  prereqs: PropTypes.arrayOf(\n    PropTypes.shape({\n      code: PropTypes.string,\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  ),\n  postreqs: PropTypes.arrayOf(\n    PropTypes.shape({\n      code: PropTypes.string,\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  ),\n  courseCode: PropTypes.string,\n};\n\nexport default Prereqs;\n","import React from 'react';\n\n/* Styled Components */\nimport { ExtraInfoBoxWrapper } from './styles/CoursePage';\n\nimport Prereqs from '../../../components/coursePage/Prereqs';\n\nconst ExtraInfoBox = ({ prereqs, postreqs, courseCode }) => {\n  return (\n    <ExtraInfoBoxWrapper>\n      <Prereqs prereqs={prereqs} postreqs={postreqs} courseCode={courseCode} />\n    </ExtraInfoBoxWrapper>\n  );\n};\n\nexport default ExtraInfoBox;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const UPDATE_REVIEW_DATA = 'update review data';\nexport const SORT_COURSE_REVIEWS_BY_PROF = 'sort by prof';\n\nconst convertInputToState = data => {\n  if (!data) {\n    return {\n      courseReviews: [],\n      reviewsByProf: [],\n      courseReviewProfs: [],\n      profReviewProfs: [],\n    };\n  }\n  const courseReviews = data.course_review.map(r => ({\n    upvotes: r.course_review_votes_aggregate.aggregate.sum.vote,\n    review: r.text,\n    reviewer: r.user,\n    metrics: {\n      useful: r.useful,\n      easy: r.easy,\n      liked: r.liked != null,\n    },\n    prof: r.prof ? r.prof.name : '',\n  }));\n\n  const reviewsByProf = data.prof_review.reduce((allProfs, current) => {\n    let profObject;\n    let foundProfObject = false;\n    for (let i of allProfs) {\n      if (current.prof && current.prof.name === i.name) {\n        profObject = i;\n        foundProfObject = true;\n        break;\n      }\n    }\n    if (!foundProfObject) {\n      profObject = {\n        id: current.prof ? current.prof.id : 0,\n        code: current.prof ? current.prof.code : '',\n        name: current.prof ? current.prof.name : '',\n        liked: current.prof\n          ? current.prof.course_reviews_aggregate.aggregate.avg.liked\n          : 0,\n        reviews: [],\n      };\n      allProfs.push(profObject);\n    }\n    profObject.reviews.push({\n      upvotes: current.prof_review_votes_aggregate.aggregate.sum.vote,\n      review: current.text,\n      reviewer: current.user,\n      metrics: {\n        clear: current.clear,\n        engaging: current.engaging,\n      },\n    });\n    return allProfs;\n  }, []);\n\n  const courseReviewProfs = data.course_review.reduce((allProfs, review) => {\n    if (review.prof && !allProfs.includes(review.prof.name)) {\n      allProfs.push(review.prof.name);\n    }\n    return allProfs;\n  }, []);\n\n  const profReviewProfs = reviewsByProf.map(obj => obj.name);\n\n  return {\n    courseReviews,\n    reviewsByProf,\n    courseReviewProfs,\n    profReviewProfs,\n  };\n};\n\nconst processDispatch = (currentState, action) => {\n  switch (action.type) {\n    case UPDATE_REVIEW_DATA:\n      return convertInputToState(action.payload);\n    default:\n      return currentState;\n  }\n};\n\nconst useCourseReviewsReducer = initialState => {\n  const [state, setState] = useState(convertInputToState(initialState));\n\n  const dispatch = action => {\n    const newState = processDispatch(state, action);\n    setState(newState);\n  };\n\n  return [state, dispatch];\n};\n\nuseCourseReviewsReducer.propTypes = {\n  initialState: PropTypes.shape({\n    course_review: PropTypes.arrayOf(\n      PropTypes.shape({\n        course: PropTypes.shape({\n          code: PropTypes.string,\n          id: PropTypes.number,\n        }),\n        course_review_votes_aggregate: PropTypes.shape({\n          aggregate: PropTypes.shape({\n            sum: PropTypes.shape({\n              vote: PropTypes.number,\n            }),\n          }),\n        }),\n        easy: PropTypes.number,\n        id: PropTypes.number,\n        liked: PropTypes.number,\n        prof: PropTypes.shape({\n          id: PropTypes.number,\n          name: PropTypes.string,\n        }),\n        text: PropTypes.string,\n        useful: PropTypes.number,\n        user: PropTypes.shape({\n          full_name: PropTypes.string,\n          id: PropTypes.number,\n          program: PropTypes.string,\n        }),\n      }),\n    ),\n    prof_review: PropTypes.arrayOf(\n      PropTypes.shape({\n        clear: PropTypes.number,\n        engaging: PropTypes.number,\n        id: PropTypes.number,\n        prof: PropTypes.shape({\n          course_reviews_aggregate: PropTypes.shape({\n            aggregate: PropTypes.shape({\n              avg: PropTypes.shape({\n                liked: PropTypes.number,\n              }),\n            }),\n          }),\n          id: PropTypes.number,\n          name: PropTypes.string,\n        }),\n        prof_review_votes_aggregate: PropTypes.shape({\n          aggregate: PropTypes.shape({\n            sum: PropTypes.shape({\n              vote: PropTypes.number,\n            }),\n          }),\n        }),\n        text: PropTypes.string,\n        user: PropTypes.shape({\n          full_name: PropTypes.string,\n          id: PropTypes.number,\n          program: PropTypes.string,\n        }),\n      }),\n    ),\n  }),\n};\n\nexport default useCourseReviewsReducer;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  Heading1,\n  Heading4,\n  Heading2,\n  Body,\n  BoxShadow,\n} from '../../../../constants/Mixins';\n\nexport const CourseReviewWrapper = styled.div``;\n\nexport const ReviewWithButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseCourseReviewsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseProfReviewsWrapper = styled.div`\n  padding-top: 12px;\n`;\n\nexport const ReviewsForSingleProfWrapper = styled.div`\n  ${Card('0')}\n  ${BoxShadow}\n  margin-bottom: 32px;\n`;\n\nexport const ReviewListWrapper = styled.div`\n  padding: 32px 32px 0 32px;\n`;\n\nexport const ReviewsOptionsWrapper = styled.div`\n  display: flex;\n`;\n\nexport const DropdownPanelWrapper = styled.div`\n  display: flex;\n  margin: 0 32px 32px 0;\n  align-items: center;\n`;\n\nexport const ProfDropdownPanelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 32px;\n`;\n\nexport const DropdownTableText = styled.div`\n  ${Heading4}\n`;\n\nexport const ProfHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 32px;\n  align-items: center;\n`;\n\nexport const ProfName = styled(Link)`\n  ${Heading2}\n  color: ${({ theme }) => theme.professors}\n`;\n\nexport const ProfLikedMetric = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProfLikedPercent = styled.div`\n  ${Heading1}\n`;\n\nexport const ProfLikedPercentLabel = styled.div`\n  ${Body}\n  width: 64px;\n  margin-left: 12px;\n`;\n\nexport const ShowMoreReviewsSection = styled.div`\n  background: ${({ theme }) => theme.light3};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  cursor: pointer;\n`;\n\nexport const ShowMoreReviewsText = styled.div`\n  ${Heading4}\n  cursor: pointer;\n`;\n","import gql from 'graphql-tag';\r\n\r\nconst CourseReviewFragment = {\r\n  courseReviewInfo: gql`\r\n    fragment CourseReviewInfoFragment on course_review {\r\n      id\r\n      course {\r\n        id\r\n        code\r\n      }\r\n      easy\r\n      liked\r\n      prof {\r\n        id\r\n        code\r\n        name\r\n      }\r\n      text\r\n      useful\r\n      user {\r\n        id\r\n        full_name\r\n        program\r\n      }\r\n      course_review_votes_aggregate {\r\n        aggregate {\r\n          sum {\r\n            vote\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  profReviewInfo: gql`\r\n    fragment ProfReviewInfoFragment on prof_review {\r\n      id\r\n      prof {\r\n        id\r\n        code\r\n        name\r\n        course_reviews_aggregate {\r\n          aggregate {\r\n            avg {\r\n              liked\r\n            }\r\n          }\r\n        }\r\n      }\r\n      clear\r\n      engaging\r\n      text\r\n      user {\r\n        id\r\n        full_name\r\n        program\r\n      }\r\n      prof_review_votes_aggregate {\r\n        aggregate {\r\n          sum {\r\n            vote\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\nexport default CourseReviewFragment;\r\n","import gql from 'graphql-tag';\r\n\r\nimport CourseReviewFragment from '../../fragments/course/CourseReviewFragment.jsx';\r\n\r\nexport const GET_COURSE_REVIEW = gql`\r\n  query GET_COURSE_REVIEW($id: Int) {\r\n    course_review(\r\n      where: { course_id: { _eq: $id }, text: { _is_null: false } }\r\n    ) {\r\n      ...CourseReviewInfoFragment\r\n    }\r\n    course_review_aggregate(where: { course_id: { _eq: $id } }) {\r\n      aggregate {\r\n        count(columns: text)\r\n      }\r\n    }\r\n    prof_review(where: { course_id: { _eq: $id }, text: { _is_null: false } }) {\r\n      ...ProfReviewInfoFragment\r\n    }\r\n    prof_review_aggregate(where: { course_id: { _eq: $id } }) {\r\n      aggregate {\r\n        count(columns: text)\r\n      }\r\n    }\r\n  }\r\n  ${CourseReviewFragment.courseReviewInfo}\r\n  ${CourseReviewFragment.profReviewInfo}\r\n`;\r\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from 'react-apollo';\nimport { withTheme } from 'styled-components';\n\n/* Constants */\nimport { MIN_REVIEWS_SHOWN } from '../../../constants/PageConstants';\n\n/* Custom Hooks */\nimport useCourseReviewsReducer, {\n  UPDATE_REVIEW_DATA,\n  SORT_COURSE_REVIEWS_BY_PROF,\n} from '../../../data/custom_hooks/UseCourseReviewsReducer';\n\n/* Styled Components */\nimport {\n  CourseReviewWrapper,\n  ReviewWithButtonWrapper,\n  CourseCourseReviewsWrapper,\n  CourseProfReviewsWrapper,\n  ReviewsForSingleProfWrapper,\n  ReviewListWrapper,\n  ReviewsOptionsWrapper,\n  DropdownPanelWrapper,\n  ProfDropdownPanelWrapper,\n  DropdownTableText,\n  ProfHeader,\n  ProfName,\n  ProfLikedMetric,\n  ProfLikedPercent,\n  ProfLikedPercentLabel,\n  ShowMoreReviewsSection,\n  ShowMoreReviewsText,\n} from './styles/CourseReviews';\n\n/* Child Components */\nimport TabContainer from '../../../components/display/TabContainer';\nimport Review from '../common/Review';\nimport DropdownList from '../../../components/input/DropdownList';\nimport LoadingSpinner from '../../../components/display/LoadingSpinner';\n\n/* GraphQL Queries */\nimport { GET_COURSE_REVIEW } from '../../../graphql/queries/course/CourseReview.jsx';\nimport { getProfPageRoute } from '../../../Routes';\n\nconst CourseCourseReviews = ({\n  reviews,\n  theme,\n  courseSort,\n  setCourseSort,\n  courseProfFilter,\n  courseProfFilterOptions,\n  setCourseProfFilter,\n}) => {\n  const [showingAllReviews, setShowingAllReviews] = useState(false);\n\n  return (\n    <CourseCourseReviewsWrapper>\n      <ReviewListWrapper>\n        <ReviewsOptionsWrapper>\n          <DropdownPanelWrapper>\n            <DropdownTableText>Sort by: </DropdownTableText>\n            <DropdownList\n              color={theme.primary}\n              selectedIndex={courseSort}\n              options={[\n                'least recent',\n                'least helpful',\n                'most helpful',\n                'most recent',\n              ]}\n              onChange={value => setCourseSort(value)}\n            />\n          </DropdownPanelWrapper>\n          <DropdownPanelWrapper>\n            <DropdownTableText>Filter by professor: </DropdownTableText>\n            <DropdownList\n              color={theme.professors}\n              selectedIndex={courseProfFilter}\n              options={courseProfFilterOptions}\n              onChange={value => setCourseProfFilter(value)}\n            />\n          </DropdownPanelWrapper>\n        </ReviewsOptionsWrapper>\n        {reviews.map((review, i) => {\n          if (i < MIN_REVIEWS_SHOWN || showingAllReviews)\n            return (\n              <Review\n                key={i}\n                upvotes={review.upvotes}\n                review={review.review}\n                reviewer={review.reviewer}\n                metrics={review.metrics}\n              />\n            );\n        })}\n      </ReviewListWrapper>\n      {reviews.length > MIN_REVIEWS_SHOWN && (\n        <ShowMoreReviewsSection\n          onClick={() => setShowingAllReviews(!showingAllReviews)}\n        >\n          <ShowMoreReviewsText>\n            {showingAllReviews\n              ? `Show less reviews`\n              : `Show all ${reviews.length} reviews`}\n          </ShowMoreReviewsText>\n        </ShowMoreReviewsSection>\n      )}\n    </CourseCourseReviewsWrapper>\n  );\n};\n\nCourseCourseReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      upvotes: PropTypes.number,\n      review: PropTypes.object,\n      reviewer: PropTypes.shape({\n        name: PropTypes.string,\n        program: PropTypes.string,\n      }),\n      metrics: PropTypes.shape({\n        useful: PropTypes.number,\n        easy: PropTypes.number,\n        liked: PropTypes.boolean,\n      }),\n    }),\n  ).isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst CourseProfReviews = ({ reviewsByProf }) => {\n  const [showingReviewsMap, setShowingReviewsMap] = useState({});\n\n  return (\n    <CourseProfReviewsWrapper>\n      {reviewsByProf.map((prof, idx) => (\n        <ReviewsForSingleProfWrapper key={idx}>\n          <ReviewListWrapper>\n            <ProfHeader>\n              <ProfName to={getProfPageRoute(prof.code)}>{prof.name}</ProfName>\n              <ProfLikedMetric>\n                <ProfLikedPercent>\n                  {Math.round(prof.liked * 100)}%\n                </ProfLikedPercent>\n                <ProfLikedPercentLabel>\n                  liked this professor\n                </ProfLikedPercentLabel>\n              </ProfLikedMetric>\n            </ProfHeader>\n            {prof.reviews.map((review, i) => {\n              if (i < MIN_REVIEWS_SHOWN || showingReviewsMap[prof.name])\n                return (\n                  <Review\n                    key={review.reviewer.full_name}\n                    upvotes={review.upvotes}\n                    review={review.review}\n                    reviewer={review.reviewer}\n                    metrics={review.metrics}\n                  />\n                );\n            })}\n          </ReviewListWrapper>\n          {prof.reviews.length > MIN_REVIEWS_SHOWN && (\n            <ShowMoreReviewsSection\n              onClick={() =>\n                setShowingReviewsMap({\n                  ...showingReviewsMap,\n                  [prof.name]: !showingReviewsMap[prof.name],\n                })\n              }\n            >\n              <ShowMoreReviewsText>\n                {showingReviewsMap[prof.name]\n                  ? `Show less reviews`\n                  : `Show all ${prof.reviews.length} reviews`}\n              </ShowMoreReviewsText>\n            </ShowMoreReviewsSection>\n          )}\n        </ReviewsForSingleProfWrapper>\n      ))}\n    </CourseProfReviewsWrapper>\n  );\n};\n\nCourseProfReviews.propTypes = {\n  reviewsByProf: PropTypes.arrayOf(\n    PropTypes.shape({\n      prof: PropTypes.string,\n      likes: PropTypes.number,\n      reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n          upvotes: PropTypes.number,\n          review: PropTypes.object,\n          reviewer: PropTypes.shape({\n            name: PropTypes.string,\n            program: PropTypes.string,\n          }),\n          metrics: PropTypes.shape({\n            clear: PropTypes.bool, //these probably should be numbers but server returns bools rn\n            engaging: PropTypes.bool,\n          }),\n        }),\n      ),\n    }),\n  ).isRequired,\n};\n\nconst CourseReviews = ({ courseID, theme }) => {\n  const { loading, data } = useQuery(GET_COURSE_REVIEW, {\n    variables: { id: courseID },\n  });\n  const [courseSort, setCourseSort] = useState(0);\n  const [courseProfFilter, setCourseProfFilter] = useState(0);\n  const [profReviewFilter, setProfReviewFilter] = useState(0);\n  const [showingProfReviews, setShowingProfReviews] = useState(false);\n  const [reviewDataState, dispatch] = useCourseReviewsReducer(data);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_REVIEW_DATA,\n        payload: data,\n      });\n    }\n  }, [data]);\n\n  if (loading) {\n    return (\n      <CourseReviewWrapper>\n        <LoadingSpinner />\n      </CourseReviewWrapper>\n    );\n  }\n\n  const courseProfFilterOptions = [\n    'show all professors',\n    ...reviewDataState.courseReviewProfs,\n  ];\n\n  const courseReviewsToShow = reviewDataState.courseReviews.filter(\n    review =>\n      courseProfFilter === 0 ||\n      review.prof === courseProfFilterOptions[courseProfFilter],\n  );\n\n  const profProfFilterOptions = [\n    'show all professors',\n    ...reviewDataState.profReviewProfs,\n  ];\n\n  const profReviewsToShow = reviewDataState.reviewsByProf.filter(\n    review =>\n      profReviewFilter === 0 ||\n      review.name === profProfFilterOptions[profReviewFilter],\n  );\n\n  const numProfReviews = profReviewsToShow.reduce((total, curr) => {\n    total += curr.reviews.length;\n    return total;\n  }, 0);\n\n  const ProfFilterDropdown = (\n    <ProfDropdownPanelWrapper>\n      <DropdownTableText>Filter by professor: </DropdownTableText>\n      <DropdownList\n        color={theme.professors}\n        selectedIndex={profReviewFilter}\n        options={profProfFilterOptions}\n        onChange={value => setProfReviewFilter(value)}\n      />\n    </ProfDropdownPanelWrapper>\n  );\n\n  const tabList = [\n    {\n      title: `Course reviews (${courseReviewsToShow.length})`,\n      render: () => (\n        <CourseCourseReviews\n          reviews={courseReviewsToShow}\n          theme={theme}\n          courseSort={courseSort}\n          setCourseSort={setCourseSort}\n          courseProfFilter={courseProfFilter}\n          courseProfFilterOptions={courseProfFilterOptions}\n          setCourseProfFilter={setCourseProfFilter}\n        />\n      ),\n      onClick: () => setShowingProfReviews(false),\n    },\n    {\n      title: `Professor reviews (${numProfReviews})`,\n      render: () => ProfFilterDropdown,\n      onClick: () => setShowingProfReviews(true),\n    },\n  ];\n\n  return (\n    <CourseReviewWrapper>\n      <TabContainer\n        tabList={tabList}\n        initialSelectedTab={0}\n        contentPadding=\"0\"\n      />\n      {showingProfReviews && (\n        <CourseProfReviews reviewsByProf={profReviewsToShow} />\n      )}\n    </CourseReviewWrapper>\n  );\n};\n\nCourseReviews.propTypes = {\n  courseID: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withTheme(CourseReviews);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport CourseInfoHeader from './CourseInfoHeader';\nimport CourseSchedule from './CourseSchedule';\nimport ExtraInfoBox from './ExtraInfoBox';\nimport CourseReviews from './CourseReviews';\nimport CourseReviewCourseBox from '../../../components/coursePage/CourseReviewCourseBox';\nimport Button from '../../../components/input/Button';\nimport ModalHOC from '../../../components/modal/ModalHOC';\nimport LikeCourseToggle from '../../../components/input/LikeCourseToggle';\nimport AuthModal from '../../../auth/AuthModal';\n\n/* Styled Components */\nimport {\n  CoursePageWrapper,\n  ColumnWrapper,\n  Column1,\n  Column2,\n  CourseReviewQuestionBox,\n  CourseQuestionTextAndToggle,\n  CourseReviewQuestionText,\n} from './styles/CoursePage';\n\nimport { splitCourseCode } from '../../../utils/Misc';\nimport { getIsLoggedIn } from '../../../data/reducers/AuthReducer';\n\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nconst CoursePageContent = ({ course, shortlisted, userReview, isLoggedIn }) => {\n  const [authModalOpen, setAuthModalOpen] = useState(false);\n  const [reviewModalOpen, setReviewModalOpen] = useState(false);\n\n  const handleReviewClick = () => {\n    isLoggedIn ? setReviewModalOpen(true) : setAuthModalOpen(true);\n  };\n  console.log(course);\n  return (\n    <>\n      <CourseInfoHeader\n        course={course}\n        shortlisted={shortlisted}\n        setAuthModalOpen={setAuthModalOpen}\n      />\n      <ColumnWrapper>\n        <Column1>\n          <CourseSchedule sections={course.sections} />\n          <CourseReviewQuestionBox>\n            <CourseQuestionTextAndToggle>\n              <CourseReviewQuestionText>\n                What do you think of {splitCourseCode(course.code)}?\n              </CourseReviewQuestionText>\n              <LikeCourseToggle liked={true} />\n            </CourseQuestionTextAndToggle>\n            <Button\n              width={200}\n              padding=\"16px 24px\"\n              handleClick={handleReviewClick}\n            >\n              {userReview ? 'Edit your review' : 'Add your review'}\n            </Button>\n          </CourseReviewQuestionBox>\n          <ModalHOC\n            isModalOpen={reviewModalOpen}\n            onCloseModal={() => setReviewModalOpen(false)}\n          >\n            <CourseReviewCourseBox\n              courseIDList={[course.id]}\n              reviewData={userReview}\n              onCancel={() => setReviewModalOpen(false)}\n            />\n          </ModalHOC>\n          <CourseReviews courseID={course.id} />\n        </Column1>\n        <Column2>\n          <ExtraInfoBox\n            courseCode={course.code}\n            prereqs={course.prerequisites}\n            postreqs={course.postrequisites}\n          />\n        </Column2>\n      </ColumnWrapper>\n      <AuthModal\n        isModalOpen={authModalOpen}\n        onCloseModal={() => setAuthModalOpen(false)}\n        width={400}\n      />\n    </>\n  );\n};\n\nconst CoursePage = ({ data, isLoggedIn }) => (\n  <CoursePageWrapper>\n    <CoursePageContent\n      course={data.course[0]}\n      shortlisted={isLoggedIn && data.user_shortlist.length > 0}\n      userReview={\n        isLoggedIn && data.course_review.length > 0\n          ? data.course_review[0]\n          : null\n      }\n      isLoggedIn={isLoggedIn}\n    />\n  </CoursePageWrapper>\n);\n\nCoursePage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default connect(mapStateToProps)(CoursePage);\n","import styled from 'styled-components';\n\n/* Mixins */\nimport { Heading1, Heading2, Body } from '../../../../constants/Mixins';\n\nexport const CourseInfoHeaderWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  background: white;\n`;\n\nexport const CourseNameSection = styled.div`\n  width: 100%;\n  min-height: 162px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  background-color: ${({ theme }) => theme.primaryExtraDark};\n  position: relative;\n  padding: 16px;\n`;\n\nexport const CourseCodeAndStar = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nexport const StarAlignmentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseCode = styled.div`\n  ${Heading1}\n  color: ${({ theme }) => theme.white};;\n  margin-right: 16px;\n`;\n\nexport const CourseName = styled.div`\n  ${Heading2}\n  color: ${({ theme }) => theme.light1};\n  font-weight: 400;\n`;\n\nexport const CourseDescriptionSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 16px;\n`;\n\nexport const CourseDescriptionParagraph = styled.div`\n  ${Body}\n  margin-bottom: 16px;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport RatingBox from '../common/RatingBox';\nimport ShortlistStar from '../../../components/input/ShortlistStar';\n\n/* Styled Components */\nimport {\n  CourseInfoHeaderWrapper,\n  CourseNameSection,\n  CourseCodeAndStar,\n  StarAlignmentWrapper,\n  CourseCode,\n  CourseName,\n  CourseDescriptionSection,\n  CourseDescriptionParagraph,\n} from './styles/CourseInfoHeader';\n\nimport { splitCourseCode } from '../../../utils/Misc';\nimport { isLoggedIn } from '../../../utils/Auth';\n\nconst CourseInfoHeader = ({ course, shortlisted, setAuthModalOpen }) => {\n  const { liked, easy, useful } = course.course_reviews_aggregate.aggregate.avg;\n  const { count, text_count } = course.course_reviews_aggregate.aggregate;\n  const [isStarClicked, setIsStarClicked] = useState(shortlisted);\n\n  const onStarClick = () => {\n    isLoggedIn() ? setIsStarClicked(!isStarClicked) : setAuthModalOpen(true);\n  };\n\n  return (\n    <CourseInfoHeaderWrapper>\n      <CourseNameSection>\n        <CourseCodeAndStar>\n          <CourseCode>{splitCourseCode(course.code)}</CourseCode>\n          <StarAlignmentWrapper>\n            <ShortlistStar\n              size={36}\n              checked={isStarClicked}\n              onClick={onStarClick}\n            />\n          </StarAlignmentWrapper>\n        </CourseCodeAndStar>\n        <CourseName>{course.name}</CourseName>\n      </CourseNameSection>\n      <RatingBox\n        numRatings={count}\n        numComments={text_count}\n        percentages={[\n          {\n            displayName: 'Likes',\n            percent: liked,\n          },\n          {\n            displayName: 'Useful',\n            percent: useful / 5,\n          },\n          {\n            displayName: 'Easy',\n            percent: easy / 5,\n          },\n        ]}\n      />\n      <CourseDescriptionSection>\n        <CourseDescriptionParagraph>\n          {course.description}\n        </CourseDescriptionParagraph>\n      </CourseDescriptionSection>\n    </CourseInfoHeaderWrapper>\n  );\n};\n\nCourseInfoHeader.propTypes = {\n  prof: PropTypes.object,\n};\n\nexport default CourseInfoHeader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Heading2, Heading4, Body } from '../../../../constants/Mixins';\n\nexport const CourseReviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseCourseReviewsWrapper = styled.div`\n  background: white;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const ReviewsOptionsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 16px;\n`;\nexport const DropdownPanelWrapper = styled.div`\n  display: flex;\n  :not(first-child) {\n    margin-top: 24px;\n  }\n`;\n\nexport const DropdownTableText = styled.div`\n  ${Heading4}\n  white-space: nowrap;\n`;\n\nexport const CourseProfReviewsWrapper = styled.div`\n  background: ${({ theme }) => theme.light1};\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ReviewsForSingleProfWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 32px;\n  background: white;\n`;\n\nexport const ProfName = styled(Link)`\n  ${Heading2}\n  color: ${({ theme }) => theme.professors}\n  margin: 16px;\n`;\n\nexport const ProfLikedMetric = styled.div`\n  display: flex;\n  margin: 8px 16px 16px 16px;\n  align-items: center;\n`;\n\nexport const ProfLikedPercent = styled.div`\n  ${Heading2}\n  margin-right: 16px;\n`;\n\nexport const ProfLikedPercentLabel = styled.div`\n  ${Body}\n`;\n\nexport const ProfDropdownPanelWrapper = styled.div`\n  display: flex;\n  padding: 24px 16px;\n  border-bottom: 1px solid ${({ theme }) => theme.light2};\n  background: white;\n`;\n\nexport const ShowMoreReviewsSection = styled.div`\n  background: ${({ theme }) => theme.light3};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  cursor: pointer;\n`;\n\nexport const ShowMoreReviewsText = styled.div`\n  ${Heading4}\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from 'react-apollo';\nimport { withTheme } from 'styled-components';\n\n/* Custom Hooks */\nimport useCourseReviewsReducer, {\n  UPDATE_REVIEW_DATA,\n  SORT_COURSE_REVIEWS_BY_PROF,\n} from '../../../data/custom_hooks/UseCourseReviewsReducer';\n\n/* Styled Components */\nimport {\n  CourseReviewWrapper,\n  CourseCourseReviewsWrapper,\n  CourseProfReviewsWrapper,\n  ReviewsForSingleProfWrapper,\n  ReviewsOptionsWrapper,\n  DropdownPanelWrapper,\n  ProfDropdownPanelWrapper,\n  DropdownTableText,\n  ProfName,\n  ProfLikedMetric,\n  ProfLikedPercent,\n  ProfLikedPercentLabel,\n  ShowMoreReviewsSection,\n  ShowMoreReviewsText,\n} from './styles/CourseReviews';\n\n/* Child Components */\nimport CollapseableContainer from '../common/CollapseableContainer';\nimport Review from '../common/Review';\nimport DropdownList from '../../../components/input/DropdownList';\nimport LoadingSpinner from '../../../components/display/LoadingSpinner';\n\n/* GraphQL Queries */\nimport { GET_COURSE_REVIEW } from '../../../graphql/queries/course/CourseReview.jsx';\n\nimport { getProfPageRoute } from '../../../Routes';\nimport { MIN_REVIEWS_SHOWN } from '../../../constants/PageConstants';\n\nconst CourseCourseReviews = ({\n  reviews,\n  theme,\n  courseSort,\n  setCourseSort,\n  courseProfFilter,\n  courseProfFilterOptions,\n  setCourseProfFilter,\n}) => {\n  const [showingAllReviews, setShowingAllReviews] = useState(false);\n\n  return (\n    <CourseCourseReviewsWrapper>\n      <ReviewsOptionsWrapper>\n        <DropdownPanelWrapper>\n          <DropdownTableText>Sort by: </DropdownTableText>\n          <DropdownList\n            color={theme.primary}\n            selectedIndex={courseSort}\n            options={[\n              'least recent',\n              'least helpful',\n              'most helpful',\n              'most recent',\n            ]}\n            onChange={value => setCourseSort(value)}\n            zIndex={5}\n          />\n        </DropdownPanelWrapper>\n        <DropdownPanelWrapper>\n          <DropdownTableText>Filter by professor: </DropdownTableText>\n          <DropdownList\n            color={theme.professors}\n            selectedIndex={courseProfFilter}\n            options={courseProfFilterOptions}\n            onChange={value => setCourseProfFilter(value)}\n            zIndex={4}\n          />\n        </DropdownPanelWrapper>\n      </ReviewsOptionsWrapper>\n      {reviews.map((review, i) => {\n        if (i < MIN_REVIEWS_SHOWN || showingAllReviews)\n          return (\n            <Review\n              key={i}\n              upvotes={review.upvotes}\n              review={review.review}\n              reviewer={review.reviewer}\n              metrics={review.metrics}\n            />\n          );\n      })}\n      {reviews.length > MIN_REVIEWS_SHOWN && (\n        <ShowMoreReviewsSection\n          onClick={() => setShowingAllReviews(!showingAllReviews)}\n        >\n          <ShowMoreReviewsText>\n            {showingAllReviews\n              ? `Show less reviews`\n              : `Show all ${reviews.length} reviews`}\n          </ShowMoreReviewsText>\n        </ShowMoreReviewsSection>\n      )}\n    </CourseCourseReviewsWrapper>\n  );\n};\n\nCourseCourseReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      upvotes: PropTypes.number,\n      review: PropTypes.object,\n      reviewer: PropTypes.shape({\n        name: PropTypes.string,\n        program: PropTypes.string,\n      }),\n      metrics: PropTypes.shape({\n        useful: PropTypes.number,\n        easy: PropTypes.number,\n        liked: PropTypes.boolean,\n      }),\n    }),\n  ).isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst CourseProfReviews = ({ reviewsByProf, ProfFilterDropdown }) => {\n  const [showingReviewsMap, setShowingReviewsMap] = useState({});\n\n  return (\n    <CourseProfReviewsWrapper>\n      {ProfFilterDropdown}\n      {reviewsByProf.map((prof, idx) => (\n        <ReviewsForSingleProfWrapper key={idx}>\n          <ProfName to={getProfPageRoute(prof.code)}>{prof.name}</ProfName>\n          <ProfLikedMetric>\n            <ProfLikedPercent>{Math.round(prof.liked * 100)}%</ProfLikedPercent>\n            <ProfLikedPercentLabel>liked this professor</ProfLikedPercentLabel>\n          </ProfLikedMetric>\n          {prof.reviews.map((review, i) => {\n            if (i < MIN_REVIEWS_SHOWN || showingReviewsMap[prof.name])\n              return (\n                <Review\n                  key={review.reviewer.full_name}\n                  upvotes={review.upvotes}\n                  review={review.review}\n                  reviewer={review.reviewer}\n                  metrics={review.metrics}\n                />\n              );\n          })}\n          {prof.reviews.length > MIN_REVIEWS_SHOWN && (\n            <ShowMoreReviewsSection\n              onClick={() =>\n                setShowingReviewsMap({\n                  ...showingReviewsMap,\n                  [prof.name]: !showingReviewsMap[prof.name],\n                })\n              }\n            >\n              <ShowMoreReviewsText>\n                {showingReviewsMap[prof.name]\n                  ? `Show less reviews`\n                  : `Show all ${prof.reviews.length} reviews`}\n              </ShowMoreReviewsText>\n            </ShowMoreReviewsSection>\n          )}\n        </ReviewsForSingleProfWrapper>\n      ))}\n    </CourseProfReviewsWrapper>\n  );\n};\n\nCourseProfReviews.propTypes = {\n  reviewsByProf: PropTypes.arrayOf(\n    PropTypes.shape({\n      prof: PropTypes.string,\n      likes: PropTypes.number,\n      reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n          upvotes: PropTypes.number,\n          review: PropTypes.object,\n          reviewer: PropTypes.shape({\n            name: PropTypes.string,\n            program: PropTypes.string,\n          }),\n          metrics: PropTypes.shape({\n            clear: PropTypes.bool, //these probably should be numbers but server returns bools rn\n            engaging: PropTypes.bool,\n          }),\n        }),\n      ),\n    }),\n  ).isRequired,\n};\n\nconst CourseReviews = ({ courseID, theme }) => {\n  const { loading, data } = useQuery(GET_COURSE_REVIEW, {\n    variables: { id: courseID },\n  });\n  const [courseSort, setCourseSort] = useState(0);\n  const [courseProfFilter, setCourseProfFilter] = useState(0);\n  const [profReviewFilter, setProfReviewFilter] = useState(0);\n  const [reviewDataState, dispatch] = useCourseReviewsReducer(data);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_REVIEW_DATA,\n        payload: data,\n      });\n    }\n  }, [data]);\n\n  if (loading) {\n    return (\n      <CourseReviewWrapper>\n        <LoadingSpinner />\n      </CourseReviewWrapper>\n    );\n  }\n\n  const courseProfFilterOptions = [\n    'show all professors',\n    ...reviewDataState.courseReviewProfs,\n  ];\n\n  const courseReviewsToShow = reviewDataState.courseReviews.filter(\n    review =>\n      courseProfFilter === 0 ||\n      review.prof === courseProfFilterOptions[courseProfFilter],\n  );\n\n  const profProfFilterOptions = [\n    'show all professors',\n    ...reviewDataState.profReviewProfs,\n  ];\n\n  const profReviewsToShow = reviewDataState.reviewsByProf.filter(\n    review =>\n      profReviewFilter === 0 ||\n      review.name === profProfFilterOptions[profReviewFilter],\n  );\n\n  const ProfFilterDropdown = (\n    <ProfDropdownPanelWrapper>\n      <DropdownTableText>Filter by professor: </DropdownTableText>\n      <DropdownList\n        color={theme.professors}\n        selectedIndex={profReviewFilter}\n        options={profProfFilterOptions}\n        onChange={value => setProfReviewFilter(value)}\n      />\n    </ProfDropdownPanelWrapper>\n  );\n\n  return (\n    <CourseReviewWrapper>\n      <CollapseableContainer\n        title={`Course comments (${data.course_review_aggregate.aggregate.count})`}\n      >\n        <CourseCourseReviews\n          reviews={courseReviewsToShow}\n          theme={theme}\n          courseSort={courseSort}\n          setCourseSort={setCourseSort}\n          courseProfFilter={courseProfFilter}\n          courseProfFilterOptions={courseProfFilterOptions}\n          setCourseProfFilter={setCourseProfFilter}\n        />\n      </CollapseableContainer>\n      <CollapseableContainer\n        title={`Professor comments (${data.prof_review_aggregate.aggregate.count})`}\n      >\n        <CourseProfReviews\n          reviewsByProf={profReviewsToShow}\n          ProfFilterDropdown={ProfFilterDropdown}\n        />\n      </CollapseableContainer>\n    </CourseReviewWrapper>\n  );\n};\n\nCourseReviews.propTypes = {\n  courseID: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withTheme(CourseReviews);\n","import styled from 'styled-components';\nimport { BoxShadow } from '../../../../constants/Mixins';\n\nexport const CourseExtraInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 32px 16px;\n  background: white;\n  margin-bottom: 32px;\n  ${BoxShadow}\n`;\n","import React from 'react';\n\n/* Styled Components */\nimport {\n  CourseExtraInfoWrapper,\n} from './styles/CourseExtraInfo';\n\nimport Prereqs from '../../../components/coursePage/Prereqs';\n\nconst CourseExtraInfo = ({ prereqs, postreqs, courseCode }) => {\n  return (\n    <CourseExtraInfoWrapper>\n      <Prereqs prereqs={prereqs} postreqs={postreqs} courseCode={courseCode} />\n    </CourseExtraInfoWrapper>\n  );\n};\n\nexport default CourseExtraInfo;\n","import styled from 'styled-components';\n\nexport const CoursePageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.light1};\n`;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport CourseInfoHeader from './CourseInfoHeader';\nimport CourseReviews from './CourseReviews';\nimport CourseExtraInfo from './CourseExtraInfo';\nimport AuthModal from '../../../auth/AuthModal';\n\n/* Styled Components */\nimport { CoursePageWrapper } from './styles/CoursePage';\n\nimport { getIsLoggedIn } from '../../../data/reducers/AuthReducer';\n\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nconst CoursePageContent = ({ course, shortlisted, userReview, isLoggedIn }) => {\n  const [authModalOpen, setAuthModalOpen] = useState(false);\n\n  return (\n    <>\n      <CourseInfoHeader\n        course={course}\n        shortlisted={shortlisted}\n        setAuthModalOpen={setAuthModalOpen}\n      />\n      <CourseExtraInfo\n        courseCode={course.code}\n        prereqs={course.prerequisites}\n        postreqs={course.postrequisites}\n      />\n      <CourseReviews courseID={course.id} />\n      <AuthModal\n        isModalOpen={authModalOpen}\n        onCloseModal={() => setAuthModalOpen(false)}\n        width={350}\n      />\n    </>\n  );\n};\n\nconst CoursePage = ({ data, isLoggedIn }) => (\n  <CoursePageWrapper>\n    <CoursePageContent\n      course={data.course[0]}\n      shortlisted={isLoggedIn && data.user_shortlist.length > 0}\n      userReview={\n        isLoggedIn && data.course_review.length > 0\n          ? data.course_review[0]\n          : null\n      }\n      isLoggedIn={isLoggedIn}\n    />\n  </CoursePageWrapper>\n);\n\nCoursePage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default connect(mapStateToProps)(CoursePage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Selectors */\nimport { getIsBrowserDesktop } from '../data/reducers/BrowserReducer';\nimport { getIsLoggedIn } from '../data/reducers/AuthReducer';\n\n/* Child Components */\nimport DesktopCoursePage from '../desktop/components/coursePage/CoursePage';\nimport MobileCoursePage from '../mobile/components/coursePage/CoursePage';\nimport LoadingSpinner from '../components/display/LoadingSpinner';\nimport NotFoundPage from '../desktop/components/notFoundPage/NotFoundPage';\n\n/* Queries */\nimport { buildCourseQuery } from '../graphql/queries/course/Course';\nimport { getUserId } from '../utils/Auth';\n\nconst mapStateToProps = state => ({\n  isDesktopPage: getIsBrowserDesktop(state),\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nexport const CoursePageSwitch = ({ isDesktopPage, match, isLoggedIn }) => {\n  const courseCode = match.params.courseCode.toLowerCase();\n  const query = buildCourseQuery(isLoggedIn, getUserId());\n\n  const { loading, error, data } = useQuery(query, {\n    variables: { code: courseCode },\n  });\n\n  return loading ? (\n    <LoadingSpinner />\n  ) : error || !data || !data.course || data.course.length === 0 ? (\n    <NotFoundPage text=\"Sorry, we couldn't find that course!\" />\n  ) : isDesktopPage ? (\n    <DesktopCoursePage data={data} />\n  ) : (\n    <MobileCoursePage data={data} />\n  );\n};\n\nCoursePageSwitch.propTypes = {\n  isDesktopPage: PropTypes.bool,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ courseCode: PropTypes.string }),\n  }),\n};\n\nexport default withRouter(connect(mapStateToProps)(CoursePageSwitch));\n","import gql from 'graphql-tag';\r\n\r\nimport CourseFragment from '../../fragments/course/CourseFragment.jsx';\r\n\r\nexport const buildCourseQuery = (fetchUserData = false, userId = null) => {\r\n  return gql`\r\n    query GET_COURSE($code: String) {\r\n      course(where: { code: { _eq: $code } }) {\r\n        ...CourseInfoFragment\r\n        ...CourseScheduleFragment\r\n        ...CourseRequirementsFragment\r\n      }\r\n      ${fetchUserData ?\r\n        `user_shortlist(where: {\r\n          user_id: {_eq: ${userId}},\r\n          course: {code: {_eq: $code}}}\r\n        ) {\r\n          user_id\r\n          course {\r\n            code\r\n          }\r\n        }\r\n        course_review(where: {\r\n          user_id: {_eq: ${userId}},\r\n          course: {code: {_eq: $code}}}\r\n        ) {\r\n          id\r\n          user_id\r\n        }` : ''\r\n      }\r\n    }\r\n    ${CourseFragment.courseInfo}\r\n    ${CourseFragment.courseSchedule}\r\n    ${CourseFragment.courseRequirements}\r\n  `;\r\n}"],"sourceRoot":""}