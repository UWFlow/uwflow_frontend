{"version":3,"sources":["components/display/styles/RatingBox.jsx","components/display/styles/ProgressBar.jsx","components/display/ProgressBar.jsx","components/statistics/styles/CircularPercentage.jsx","components/statistics/CircularPercentage.jsx","components/display/RatingBox.jsx","components/display/styles/Review.jsx","components/input/styles/BubbleRatings.jsx","components/input/BubbleRatings.jsx","components/display/Review.jsx","img/course_v1.svg","pages/coursePage/styles/CourseInfoHeader.jsx","pages/coursePage/CourseInfoHeader.jsx","pages/coursePage/styles/CourseSchedule.jsx","pages/coursePage/CourseSchedule.jsx","pages/coursePage/CourseScheduleTableColumns.jsx","pages/coursePage/styles/CourseRequisites.jsx","pages/coursePage/CourseRequisites.jsx","data/hooks/UseCourseReviewsReducer.jsx","pages/coursePage/styles/CourseReviews.jsx","graphql/fragments/course/CourseReviewFragment.jsx","graphql/queries/course/CourseReview.jsx","pages/coursePage/CourseReviews.jsx","pages/coursePage/styles/CoursePage.jsx","pages/coursePage/CoursePage.jsx"],"names":["RatingBoxWrapper","styled","div","breakpoint","ratingBoxWidth","ratingBoxHeight","BoxShadow","CircularPercentageWrapper","RatingBarsColumn","ProgressWrapper","ProgressTextLabel","ProgressBarWrapper","ProgressNumberLabel","Body","ReviewsAndGraphButtonWrapper","NumCommentsAndRatingsWrapper","NumCommentsWrapper","theme","dark3","NumRatingsWrapper","width","Number","isInteger","height","light3","Complete","span","primary","ProgressBar","percentComplete","percentWidth","Math","round","CircleWrapper","NumbersInCircle","LargePercentage","Heading1","GreyText","dark2","Small","withTheme","percent","barThickness","label","dataKey","data","value","cx","cy","outerRadius","innerRadius","fill","RATING_BOX_HEIGHT","RATING_BOX_WIDTH","connect","state","getWidth","isBrowserDesktop","getIsBrowserDesktop","percentages","numRatings","numComments","likedPercent","min","map","metric","ind","key","displayName","ReviewWrapper","light1","Card","ReviewPictureAndMetricsRow","ReviewPictureAndUpvotesWrapper","ReviewPicture","ReviewUpvotes","button","selected","primaryDark","light2","ReviewTextWrapper","ReviewText","ReviewAuthor","dark1","ReviewMetricsWrapper","table","ReviewMetricsBody","tbody","SingleMetricWrapper","tr","SingleMetricSquares","td","SingleMetricLabel","UpvoteNumber","BubbleRatingsWrapper","UnitCircle","diameter","filledColor","emptyColor","filled","light4","ThumbsWrapper","Thumb","colored","Thumbs","boolRating","Squares","rating","total","Array","apply","_","MetricIfExists","metrics","undefined","charAt","toUpperCase","slice","isLoggedIn","getIsLoggedIn","review","upvotes","upvote_users","reviewText","author","created_at","userID","localStorage","getItem","dispatch","useDispatch","useState","includes","userUpvoted","setUserUpvoted","authorNameText","full_name","reviewContent","program","moment","fromNow","onClick","authModalOpen","color","size","strokeWidth","module","exports","CourseInfoHeaderWrapper","white","CourseCodeAndNameSection","primaryExtraDark","CourseHeader","CourseCodeAndStar","PageContent","StarAlignmentWrapper","CourseCode","CourseNameWrapper","CourseName","Heading2","CourseDescriptionSection","Description","RatingsSection","CourseInfoHeader","course","shortlisted","course_reviews_aggregate","aggregate","avg","liked","easy","useful","count","text_count","splitCourseCode","code","ShortlistStar","initialState","courseID","id","name","RatingBox","description","CourseScheduleWrapper","secsToTime","numRows","Link","professors","secs","t","floor","h","m","getInfoGroupings","meetings","groupedByTimeOfDay","reduce","groupings","curr","start_seconds","end_seconds","startSeconds","endSeconds","startTime","endTime","location","prof","timeRanges","push","days","startDate","start_date","endDate","end_date","answer","Object","entries","forEach","entry","sort","a","b","daysOfWeek","newTimeRanges","newDays","currRange","i","length","nextRange","day","indexOf","CourseSchedule","sections","termsOffered","allTerms","term","sectionsCleanedData","s","section","class","class_number","enrolled","enrollment_total","capacity","enrollment_capacity","infoGroupings","console","log","tabList","title","termCodeToDate","render","TabContainer","initialSelectedTab","contentPadding","ExtraInfoBoxWrapper","Heading4","Header","Heading3","LineOfText","CourseText","courses","PrereqText","ExtraInfoBox","prereqs","postreqs","courseCode","splitText","replace","split","COURSE_CODE_REGEX","matches","match","arr","element","index","to","getCoursePageRoute","parsedPrereqs","postreq","idx","postrequisite","convertInputToState","courseReviews","reviewsByProf","courseReviewProfs","profReviewProfs","course_review","r","course_review_votes_aggregate","sum","vote","course_review_votes","voteObj","user_id","text","user","prof_review","allProfs","current","profObject","foundProfObject","reviews","prof_review_votes_aggregate","prof_review_votes","clear","engaging","obj","useCourseReviewsReducer","setState","action","newState","currentState","type","payload","processDispatch","propTypes","PropTypes","shape","arrayOf","string","number","picture_url","CourseReviewWrapper","CourseCourseReviewsWrapper","ReviewListWrapper","ReviewsOptionsWrapper","DropdownPanelWrapper","ProfDropdownPanelWrapper","DropdownTableText","CourseProfReviewsWrapper","ReviewsForSingleProfWrapper","ProfHeader","ProfName","ProfLikedMetric","ProfLikedPercent","ProfLikedPercentLabel","ShowMoreReviewsSection","ShowMoreReviewsText","CourseReviewFragment","courseReviewInfo","gql","profReviewInfo","GET_COURSE_REVIEW","CourseCourseReviews","courseSort","setCourseSort","courseProfFilter","courseProfFilterOptions","setCourseProfFilter","showingAllReviews","setShowingAllReviews","renderReviews","useMemo","timeSort","format","filter","MIN_REVIEWS_SHOWN","Review","DropdownList","selectedIndex","options","onChange","CourseProfReviews","ProfFilterDropdown","showingReviewsMap","setShowingReviewsMap","reviewList","getProfPageRoute","useQuery","variables","loading","profReviewFilter","setProfReviewFilter","showingProfReviews","setShowingProfReviews","reviewDataState","dispatchReviews","useEffect","LoadingSpinner","courseReviewsToShow","profProfFilterOptions","profReviewsToShow","numProfReviews","CollapseableContainer","course_review_aggregate","prof_review_aggregate","CoursePageWrapper","PageWrapper","ColumnWrapper","Column1","WideColumn","Column2","ThinColumn","ScheduleAndReviewWrapper","CourseReviewQuestionBox","CourseQuestionTextAndToggle","CourseReviewQuestionText","CoursePageContent","userCourseReview","userProfReview","userCourseTaken","reviewModalOpen","setReviewModalOpen","LikeCourseToggle","reviewID","Button","padding","handleClick","CourseRequisites","postrequisites","Modal","isOpen","onRequestClose","CourseReviewCourseBox","courseList","courseReview","profReview","onCancel","withRouter","params","toLowerCase","query","buildCourseQuery","getUserId","error","user_course_taken","user_shortlist","NotFoundPage"],"mappings":"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","file":"static/js/10.b5b5b4b4.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { Body, BoxShadow } from '../../../constants/Mixins';\n\nexport const RatingBoxWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  ${breakpoint('tablet')`\n    width: ${({ ratingBoxWidth }) => ratingBoxWidth}px;\n    height: ${({ ratingBoxHeight }) => ratingBoxHeight}px;\n    background-color: white;\n    border-radius: ${({ ratingBoxHeight }) => ratingBoxHeight / 2}px 5px 5px\n      ${({ ratingBoxHeight }) => ratingBoxHeight / 2}px;\n    position: relative;\n    ${BoxShadow}\n    margin-right: 32px;\n  `}\n`;\n\nexport const CircularPercentageWrapper = styled.div`\n  padding: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RatingBarsColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: flex-begin;\n  justify-content: center;\n`;\n\nexport const ProgressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 8px;\n\n  &:first-child {\n    margin-top: 16px;\n  }\n\n  ${breakpoint('mobile', 'desktop')`\n    margin: 0 8px 8px 0;\n  `}\n`;\n\nexport const ProgressTextLabel = styled.div``;\n\nexport const ProgressBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProgressNumberLabel = styled.div`\n  ${Body};\n  margin: 8px;\n`;\n\nexport const ReviewsAndGraphButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const NumCommentsAndRatingsWrapper = styled.div`\n  display: flex;\n  margin: 8px;\n\n  ${breakpoint('mobile', 'desktop')`\n    flex-direction: column;\n    margin: 0 0 16px 0;\n  `}\n`;\n\nexport const NumCommentsWrapper = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.dark3};\n`;\n\nexport const NumRatingsWrapper = styled.div`\n  ${Body};\n  color: ${({ theme }) => theme.dark3};\n\n  ${breakpoint('desktop')`\n    margin-left: 24px;\n  `}\n`;\n","import styled from 'styled-components';\n\nexport const ProgressBarWrapper = styled.div`\n  width: ${({ width }) => (Number.isInteger(width) ? `${width}px` : width)};\n  height: ${({ height }) => height}px;\n  display: flex;\n  margin: 10px 8px 10px 0;\n  background-color: ${({ theme }) => theme.light3};\n  border-radius: 4px;\n  box-shadow: 0px 2px 5px rgba(236, 237, 237, 0.5),\n    0px 0px 5px rgba(142, 147, 148, 0.2);\n`;\n\nexport const Complete = styled.span`\n  border-radius: ${({ width }) => (width >= 100 ? '4px' : '4px 0 0 4px')};\n  width: ${({ width }) => width}%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.primary};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ProgressBarWrapper, Complete } from './styles/ProgressBar';\n\nconst ProgressBar = ({ percentComplete, width = 188, height = 16 }) => {\n  const percentWidth = Math.round(percentComplete * 100);\n  return (\n    <ProgressBarWrapper width={width} height={height}>\n      <Complete width={percentWidth} />\n    </ProgressBarWrapper>\n  );\n};\n\nProgressBar.propTypes = {\n  percentComplete: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.number,\n};\n\nexport default ProgressBar;\n","import styled from 'styled-components';\nimport { Heading1, Small } from '../../../constants/Mixins';\n\nexport const CircleWrapper = styled.div`\n  position: relative;\n`;\n\nexport const NumbersInCircle = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  bottom: 0;\n  left: 0;\n  height: ${({ height }) => height}px;\n  width: ${({ height }) => height}px;\n  justify-content: center;\n  align-items: center;\n  transform: scale(${({ height }) => height / 212});\n`;\n// Transform: scale is iffy hard code but this seems to be the most veratile way to resize the inner text\n// Or else we'll have to change the font types with if statements\n\nexport const LargePercentage = styled.div`\n  ${Heading1};\n`;\nexport const GreyText = styled.div`\n  color: ${({ theme }) => theme.dark2};\n  ${Small};\n`;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { PieChart, Pie, Cell } from 'recharts';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  CircleWrapper,\n  NumbersInCircle,\n  LargePercentage,\n  GreyText,\n} from './styles/CircularPercentage';\n\n//Contained within a square tho\nconst CircularPercentage = ({\n  theme,\n  height,\n  percent,\n  barThickness,\n  label,\n}) => (\n  <CircleWrapper>\n    <PieChart width={height} height={height}>\n      <Pie\n        dataKey=\"value\"\n        data={[{ value: percent }, { value: 100 - percent }]}\n        cx=\"50%\"\n        cy=\"50%\"\n        outerRadius={height / 2}\n        innerRadius={height / 2 - barThickness}\n      >\n        <Cell fill={theme.primary} />\n        <Cell fill={theme.light3} />\n      </Pie>\n    </PieChart>\n    <NumbersInCircle height={height}>\n      <LargePercentage>{percent}%</LargePercentage>\n      <GreyText>{label}</GreyText>\n    </NumbersInCircle>\n  </CircleWrapper>\n);\n\nCircularPercentage.propTypes = {\n  height: PropTypes.number,\n  percent: PropTypes.number, //Out of 100, not as a decimal\n  barThickness: PropTypes.number,\n  label: PropTypes.string,\n};\n\nexport default withTheme(CircularPercentage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n/* Selectors */\nimport {\n  getWidth,\n  getIsBrowserDesktop,\n} from '../../data/reducers/BrowserReducer';\n\n/* Styled Components */\nimport {\n  RatingBoxWrapper,\n  CircularPercentageWrapper,\n  RatingBarsColumn,\n  ProgressWrapper,\n  ProgressTextLabel,\n  ProgressBarWrapper,\n  ProgressNumberLabel,\n  ReviewsAndGraphButtonWrapper,\n  NumCommentsAndRatingsWrapper,\n  NumCommentsWrapper,\n  NumRatingsWrapper,\n} from './styles/RatingBox';\n\n/* Child Components */\nimport ProgressBar from './ProgressBar';\nimport CircularPercentage from '../statistics/CircularPercentage';\n\nexport const RATING_BOX_HEIGHT = 244;\nexport const RATING_BOX_WIDTH = 512;\n\nconst mapStateToProps = state => ({\n  width: getWidth(state),\n  isBrowserDesktop: getIsBrowserDesktop(state),\n});\n\n/*\n  NOTE DATA FOR \"LIKED\" MUST BE PERCENTAGES[0]\n*/\nconst RatingBox = ({\n  percentages,\n  numRatings,\n  numComments,\n  width,\n  isBrowserDesktop,\n}) => {\n  const likedPercent = Math.round(percentages[0].percent * 100);\n\n  return (\n    <RatingBoxWrapper\n      ratingBoxHeight={RATING_BOX_HEIGHT}\n      ratingBoxWidth={RATING_BOX_WIDTH}\n    >\n      <CircularPercentageWrapper>\n        <CircularPercentage\n          height={\n            isBrowserDesktop\n              ? RATING_BOX_HEIGHT - 32\n              : Math.min(width / 2 - 32, 200)\n          }\n          percent={likedPercent}\n          barThickness={16}\n          label=\"liked\"\n        />\n      </CircularPercentageWrapper>\n      <RatingBarsColumn>\n        {percentages.map((metric, ind) =>\n          ind === 0 ? null : (\n            <ProgressWrapper key={metric.displayName}>\n              <ProgressTextLabel>{metric.displayName}</ProgressTextLabel>\n              <ProgressBarWrapper>\n                <ProgressBar percentComplete={metric.percent} width=\"100%\" />\n                <ProgressNumberLabel>\n                  {Math.round(metric.percent * 100)}%\n                </ProgressNumberLabel>\n              </ProgressBarWrapper>\n            </ProgressWrapper>\n          ),\n        )}\n        <ReviewsAndGraphButtonWrapper>\n          <NumCommentsAndRatingsWrapper>\n            <NumCommentsWrapper>\n              {numComments} {numComments === 1 ? 'comment' : 'comments'}\n            </NumCommentsWrapper>\n            <NumRatingsWrapper>\n              {numRatings} {numRatings === 1 ? 'rating' : 'ratings'}\n            </NumRatingsWrapper>\n          </NumCommentsAndRatingsWrapper>\n          {/* Graph button goes here */}\n        </ReviewsAndGraphButtonWrapper>\n      </RatingBarsColumn>\n    </RatingBoxWrapper>\n  );\n};\n\nRatingBox.propTypes = {\n  percentages: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayName: PropTypes.string,\n      percent: PropTypes.number,\n    }),\n  ),\n  numRatings: PropTypes.number,\n  numComments: PropTypes.number,\n  theme: PropTypes.object,\n};\n\nexport default connect(mapStateToProps)(RatingBox);\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { Card, BoxShadow, Body } from '../../../constants/Mixins';\n\nexport const ReviewWrapper = styled.div`\n  ${BoxShadow}\n  margin-bottom: 32px;\n  background-color: ${({ theme }) => theme.light1};\n\n  ${breakpoint('mobile', 'desktop')`\n    padding: 16px;\n    align-content: center;\n  `}\n\n  ${breakpoint('desktop')`\n    ${Card('24px 32px')}\n    margin-bottom: 32px;\n    justify-content: space-between;\n    flex-direction: row;\n  `}\n`;\n\nexport const ReviewPictureAndMetricsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const ReviewPictureAndUpvotesWrapper = styled.div`\n  display: flex;\n  margin-bottom: 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    align-items: center;\n  `}\n\n  ${breakpoint('tablet')`\n    margin-right: 32px;\n    position: relative;\n  `}\n`;\n\nexport const ReviewPicture = styled.div`\n  width: 64px;\n  height: 64px;\n  background-color: ${({ theme }) => theme.dark3};\n  border-radius: 32px 32px 32px 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    margin-right: 8px;\n  `}\n`;\n\nexport const ReviewUpvotes = styled.button`\n  padding: 0;\n  width: 40px;\n  height: 40px;\n  background-color: ${({ selected, theme }) => selected ?\n    theme.primary : theme.light1};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  border-radius: 20px 20px 20px 20px;\n  border: 2px solid ${({ theme }) => theme.light3};\n  cursor: pointer;\n\n  &:hover, &:focus {\n    ${({ selected, theme }) =>\n      `background-color:${selected ? theme.primaryDark : theme.light2};`}\n  }\n\n  ${breakpoint('tablet')`\n    position: absolute;\n    top: 36px;\n    right: -16px;\n    cursor: pointer;\n  `}\n`;\n\nexport const ReviewTextWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  word-wrap: break-word;\n`;\n\nexport const ReviewText = styled.div`\n  word-break: break-word;\n  ${Body}\n`;\n\nexport const ReviewAuthor = styled.div`\n  ${Body}\n  margin-top: 16px;\n  color: ${({ theme }) => theme.dark1};\n`;\n\nexport const ReviewMetricsWrapper = styled.table`\n  min-width: 168px;\n  margin-left: 16px;\n`;\n\nexport const ReviewMetricsBody = styled.tbody``;\n\nexport const SingleMetricWrapper = styled.tr``;\n\nexport const SingleMetricSquares = styled.td`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const SingleMetricLabel = styled.td`\n  ${Body}\n  color: ${({ theme }) => theme.dark2};\n  padding-left: 8px;\n  vertical-align: top;\n`;\n\nexport const UpvoteNumber = styled.div`\n  ${Body}\n  color: ${({ selected, theme }) => (selected ? 'white' : theme.dark3)}\n  margin-left: 4px;\n`;\n","import styled from 'styled-components';\nimport { Body, BoxShadow } from '../../../constants/Mixins';\n\nexport const BubbleRatingsWrapper = styled.div`\n  display: flex;\n  padding-bottom: 16px;\n\n  @media only screen and (max-width: 800px) {\n    padding-bottom: 8px\n  }\n`;\n\nexport const UnitCircle = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${({ diameter }) => diameter}px;\n  height: ${({ diameter }) => diameter}px;\n  border-radius: ${({ diameter }) => diameter / 2}px;\n  background-color: ${({ filledColor, emptyColor, theme, filled }) =>\n    filled\n      ? filledColor\n        ? filledColor\n        : theme.primary\n      : emptyColor\n      ? emptyColor\n      : 'white'};\n  border: 2px solid ${({ filled, theme }) => (filled ? theme.primaryDark : theme.light4)};\n  margin: 0 1px;\n  ${({ filled }) => (filled ? '' : BoxShadow)}\n`;\n\nexport const ThumbsWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Thumb = styled.div`\n  ${Body}\n  color: ${({theme, colored}) => colored ? theme.primary : theme.light4};\n  margin-left: 4px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThumbsUp, ThumbsDown } from 'react-feather';\nimport { withTheme } from 'styled-components';\n\n/* Styled Components */\nimport {\n  BubbleRatingsWrapper,\n  UnitCircle,\n  ThumbsWrapper,\n  Thumb\n} from './styles/BubbleRatings';\n\nconst Thumbs = ({ boolRating }) => (\n  <ThumbsWrapper>\n    <Thumb colored={boolRating === true}>\n      <ThumbsUp width={20} height={20} />\n    </Thumb>\n    <Thumb colored={boolRating === false}>\n      <ThumbsDown width={20} height={20} />\n    </Thumb>\n  </ThumbsWrapper>\n);\n\nconst Squares = ({ rating, total }) => (\n  <>\n    {Array.apply(null, Array(total)).map((_, ind) => {\n      return (\n        <UnitCircle\n          key={ind}\n          filled={ind < rating}\n          diameter={16}\n        />\n      );\n    })}\n  </>\n);\n\n/*\n  Provides either a row of circles indicating a rating out of 5 or \n  a Y and N block indicating a rating for yes or no (for the liked it rating for courses)\n*/\nconst BubbleRatings = ({ total = 5, rating, boolRating, theme }) => {\n  return (\n    <BubbleRatingsWrapper>\n      {boolRating === true || boolRating === false ? (\n        <Thumbs boolRating={boolRating} />\n      ) : (\n        <Squares rating={rating} total={total} />\n      )}\n    </BubbleRatingsWrapper>\n  );\n};\n\nBubbleRatings.propTypes = {\n  total: PropTypes.number, //int total that the rating is out of (5 for us rn)\n  rating: PropTypes.number, // int rating that is given (out of 5)\n  boolRating: PropTypes.bool, //This will be not null/undefined if we want to use this intead of a number out of 5\n  theme: PropTypes.object,\n};\n\nexport default withTheme(BubbleRatings);\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { ThumbsUp } from 'react-feather';\nimport moment from 'moment';\n\n/* Selectors */\nimport { getIsBrowserDesktop } from '../../data/reducers/BrowserReducer';\nimport { getIsLoggedIn } from '../../data/reducers/AuthReducer';\nimport { authModalOpen } from '../../data/actions/AuthActions';\n\n/* Styled Components */\nimport {\n  ReviewWrapper,\n  ReviewPictureAndMetricsRow,\n  ReviewTextWrapper,\n  ReviewMetricsWrapper,\n  ReviewMetricsBody,\n  ReviewPictureAndUpvotesWrapper,\n  ReviewPicture,\n  ReviewUpvotes,\n  ReviewText,\n  ReviewAuthor,\n  UpvoteNumber,\n  SingleMetricWrapper,\n  SingleMetricSquares,\n  SingleMetricLabel,\n} from './styles/Review';\n\n/* Child Components */\nimport BubbleRatings from '../input/BubbleRatings';\n\nconst mapStateToProps = state => ({\n  isBrowserDesktop: getIsBrowserDesktop(state),\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nconst MetricIfExists = (metrics, metric) => {\n  if (metrics[metric] !== null && metrics[metric] !== undefined) {\n    if (metrics[metric] === true || metrics[metric] === false) {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings boolRating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {metric === 'liked' ? 'Liked' : metric}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    } else {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings total={5} rating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {' '}\n            {metric.charAt(0).toUpperCase() + metric.slice(1)}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    }\n  }\n};\n\nconst Review = ({\n  review,\n  theme,\n  isBrowserDesktop,\n  isLoggedIn\n}) => {\n  const { upvotes, upvote_users, review: reviewText, author, created_at, metrics } = review;\n  const userID = localStorage.getItem('user_id');\n\n  const dispatch = useDispatch();\n  const [userUpvoted, setUserUpvoted] = useState(upvote_users.includes(userID));\n\n  const onClickUpvote = () => {\n    if (!isLoggedIn) {\n      dispatch(authModalOpen());\n      return;\n    }\n\n    if (userUpvoted) {\n    } else {\n    }\n    setUserUpvoted(!userUpvoted);\n  }\n\n  const authorNameText = author.full_name ? `-${author.full_name}` : '-Anonymous';\n  const reviewContent = (\n    <ReviewTextWrapper>\n      <ReviewText>{reviewText}</ReviewText>\n      <ReviewAuthor>\n        {authorNameText}{author.program ? `, a ${author.program} student` : ''}\n        , {moment(created_at).fromNow()}\n      </ReviewAuthor>\n    </ReviewTextWrapper>\n  );\n\n  return (\n    <ReviewWrapper>\n      <ReviewPictureAndMetricsRow>\n        <ReviewPictureAndUpvotesWrapper>\n          <ReviewPicture />\n          <ReviewUpvotes selected={userUpvoted} onClick={onClickUpvote}>\n            <ThumbsUp\n              color={userUpvoted ? 'white' : theme.dark3}\n              size={16}\n              strokeWidth={2}\n            />\n            <UpvoteNumber selected={userUpvoted}>\n              {upvotes ? upvotes : 0}\n            </UpvoteNumber>\n          </ReviewUpvotes>\n        </ReviewPictureAndUpvotesWrapper>\n        {isBrowserDesktop && reviewContent}\n        <ReviewMetricsWrapper>\n          <ReviewMetricsBody>\n            {MetricIfExists(metrics, 'clear')}\n            {MetricIfExists(metrics, 'engaging')}\n            {MetricIfExists(metrics, 'useful')}\n            {MetricIfExists(metrics, 'easy')}\n            {MetricIfExists(metrics, 'liked')}\n          </ReviewMetricsBody>\n        </ReviewMetricsWrapper>\n      </ReviewPictureAndMetricsRow>\n      {!isBrowserDesktop && reviewContent}\n    </ReviewWrapper>\n  );\n};\n\nReview.propTypes = {\n  upvotes: PropTypes.number,\n  review: PropTypes.shape({\n    upvotes: PropTypes.number,\n    review: PropTypes.string.isRequired,\n    author: PropTypes.shape({\n      full_name: PropTypes.string,\n      program: PropTypes.string,\n      picture_url: PropTypes.string\n    }).isRequired,\n    user: PropTypes.shape({\n      user_id: PropTypes.number\n    }),\n    metrics: PropTypes.shape({\n      useful: PropTypes.number, //not all these metrics have to exist, we should only display the ones that do\n      easy: PropTypes.number, //for example course review only has useful, easy liked,\n      liked: PropTypes.bool, //prof review only has liked, clear and engagin\n      clear: PropTypes.number,\n      engaging: PropTypes.number,\n    }).isRequired,\n  }).isRequired\n};\n\nexport default withTheme(connect(mapStateToProps)(Review));\n","module.exports = __webpack_public_path__ + \"static/media/course_v1.3daa38cd.svg\";","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport CourseHeader from '../../../img/course_v1.svg';\n\n/* Mixins */\nimport {\n  Heading1,\n  Heading2,\n  Body,\n  PageContent,\n} from '../../../constants/Mixins';\n\nexport const CourseInfoHeaderWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 32px;\n  display: flex;\n  background-color: ${({ theme }) => theme.white};\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const CourseCodeAndNameSection = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  background-color: ${({ theme }) => theme.primaryExtraDark};\n  background: url(${CourseHeader});\n  background-size: cover;\n  position: relative;\n  min-height: 160px;\n  padding: 16px;\n\n  ${breakpoint('tablet')`\n    min-height: 320px;\n  `}\n`;\n\nexport const CourseCodeAndStar = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n\n  ${breakpoint('tablet')`\n    ${PageContent}\n    margin: 0 auto;\n  `}\n`;\n\nexport const StarAlignmentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${breakpoint('tablet')`\n    margin-left: 16px;\n  `}\n`;\n\nexport const CourseCode = styled.div`\n  ${Heading1}\n  color: white;\n  text-transform: uppercase;\n\n  ${breakpoint('mobile', 'tablet')`\n    margin-right: 16px;\n  `}\n\n  ${breakpoint('tablet')`\n    max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  `}\n`;\n\nexport const CourseNameWrapper = styled.div`\n  ${breakpoint('tablet')`\n    ${PageContent}\n    margin: 16px auto 0 auto;\n  `}\n`;\n\nexport const CourseName = styled.div`\n  ${Heading2}\n  color: ${({ theme }) => theme.light1};\n  font-weight: 400;\n\n  ${breakpoint('tablet')`\n    max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  `}\n`;\n\nexport const CourseDescriptionSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  position: relative;\n\n  ${breakpoint('tablet')`\n    ${PageContent}\n    padding-bottom: 48px;\n    margin: auto;\n  `}\n`;\n\nexport const Description = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.dark1};\n\n  ${breakpoint('mobile', 'tablet')`\n    margin-bottom: 16px;\n    padding: 0 16px;\n    min-width: 100%;\n  `}\n\n  ${breakpoint('tablet')`\n    margin-top: 48px;\n    max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  `}\n`;\n\nexport const RatingsSection = styled.div`\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n  `}\n\n  ${breakpoint('tablet')`\n    position: absolute;\n    right: 0;\n    bottom: 32px;\n  `}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  CourseInfoHeaderWrapper,\n  CourseCodeAndNameSection,\n  CourseDescriptionSection,\n  CourseCode,\n  CourseNameWrapper,\n  CourseName,\n  Description,\n  RatingsSection,\n  CourseCodeAndStar,\n  StarAlignmentWrapper,\n} from './styles/CourseInfoHeader';\n\n/* Child Components */\nimport RatingBox, {\n  RATING_BOX_WIDTH,\n} from '../../components/display/RatingBox';\nimport ShortlistStar from '../../components/input/ShortlistStar';\n\nimport { splitCourseCode } from '../../utils/Misc';\n\nconst CourseInfoHeader = ({ course, shortlisted }) => {\n  const { liked, easy, useful } = course.course_reviews_aggregate.aggregate.avg;\n  const { count, text_count } = course.course_reviews_aggregate.aggregate;\n\n  return (\n    <CourseInfoHeaderWrapper>\n      <CourseCodeAndNameSection>\n        <CourseCodeAndStar>\n          <CourseCode ratingBoxWidth={RATING_BOX_WIDTH}>\n            {splitCourseCode(course.code)}\n          </CourseCode>\n          <StarAlignmentWrapper>\n            <ShortlistStar\n              size={36}\n              initialState={shortlisted}\n              courseID={course.id}\n            />\n          </StarAlignmentWrapper>\n        </CourseCodeAndStar>\n        <CourseNameWrapper>\n          <CourseName ratingBoxWidth={RATING_BOX_WIDTH}>\n            {course.name}\n          </CourseName>\n        </CourseNameWrapper>\n      </CourseCodeAndNameSection>\n      <CourseDescriptionSection>\n        <RatingsSection>\n          <RatingBox\n            numRatings={count}\n            numComments={text_count}\n            percentages={[\n              {\n                displayName: 'Likes',\n                percent: liked,\n              },\n              {\n                displayName: 'Useful',\n                percent: useful / 5,\n              },\n              {\n                displayName: 'Easy',\n                percent: easy / 5,\n              },\n            ]}\n          />\n        </RatingsSection>\n        <Description ratingBoxWidth={RATING_BOX_WIDTH}>\n          {course.description}\n        </Description>\n      </CourseDescriptionSection>\n    </CourseInfoHeaderWrapper>\n  );\n};\n\nCourseInfoHeader.propTypes = {\n  course: PropTypes.object.isRequired,\n};\n\nexport default CourseInfoHeader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { LEC, LAB } from '../CourseScheduleTableColumns';\n\nexport const CourseScheduleWrapper = styled.div`\n  margin-bottom: 32px;\n`;\n\nexport const SectionCellWrapper = styled.div`\n  display: flex;\n  position: relative;\n  height: calc(\n    ${({ numRows }) => numRows}em + ${({ numRows }) => numRows * 4}px + 60px\n  );\n  width: 100%;\n  align-items: flex-begin;\n`;\n\nexport const ColorBar = styled.div`\n  height: 100%;\n  width: 8px;\n  background-color: ${({ color, theme }) =>\n    color === LEC ? theme.dark1 : color === LAB ? theme.dark2 : theme.dark3};\n  margin-right: 24px;\n`;\n\nexport const NormalCellWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-begin;\n`;\n\nexport const SectionContentWrapper = styled.div`\n  margin: 18px 0 4px 0;\n  height: 1em;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const ContentWrapper = styled.div`\n  margin: 4px 0;\n  height: 1em;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const InstructorLink = styled(Link)`\n  color: ${({ theme }) => theme.professors};\n  margin: 4px 0 4px 0;\n  height: 1em;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport TabContainer from '../../components/display/TabContainer';\n// import Table from '../../components/display/Table';\n// import { courseScheduleTableColumns } from './CourseScheduleTableColumns';\n\n/* Styled Components */\nimport { CourseScheduleWrapper } from './styles/CourseSchedule';\n\n/* GraphQL Queries */\nimport { termCodeToDate } from '../../utils/Misc';\n\nconst secsToTime = secs => {\n  const t = Math.floor(secs / 3600) % 12;\n  const h = t === 0 ? 12 : t;\n  const m = Math.floor((secs % 3600) / 60) % 60;\n  return `${h}:${m}${m === 0 ? 0 : ''} ${secs >= 3600 * 12 ? 'PM' : 'AM'}`;\n};\n\n/*\n* We first group the data by time of day range (start and end time) Now, each group should have\n* a time of day range, location, instructor, and all the more specific 'timeranges' the classes occur in.\n* Each timerange contains days of the week the class occurs as well as the start and end dates\n* of the weeks that timerange applies. We assume that, if the start and end dates are the same,\n* the time range is valid for the week beginning on that date and otherwise, the time range is\n* valid for the whole term. We order the timeranges for each grouping as follows:\n* the time range valid for the whole term, if it exists, comes first and everything else\n* is sorted by date.\n*/\n\nconst getInfoGroupings = meetings => {\n  let groupedByTimeOfDay = meetings.reduce((groupings, curr) => {\n    const key = `${curr.start_seconds} ${curr.end_seconds}`;\n  \n    if (!groupings[key]) {\n      groupings[key] = {\n        startSeconds: curr.start_seconds,\n        endSeconds: curr.end_seconds,\n        startTime: secsToTime(curr.start_seconds),\n        endTime: secsToTime(curr.end_seconds),\n        location: curr.location,\n        prof: curr.prof\n          ? {\n              id: curr.prof.id,\n              name: curr.prof.name,\n            }\n          : null,\n        timeRanges: [],\n      };\n    }\n  \n    groupings[key].timeRanges.push({\n      days: curr.days,\n      startDate: curr.start_date,\n      endDate: curr.end_date,\n    });\n    return groupings;\n  }, {});\n\n  let answer = [];\n  // Sort timeRanges for each group\n  Object.entries(groupedByTimeOfDay).forEach(entry => {\n    entry[1].timeRanges.sort((a, b) => a.startDate > b.startDate);\n    answer.push(entry[1]);\n  });\n\n  // Merge and sort days of week for timeRanges that occur in the same date range\n  const daysOfWeek = ['M', 'T', 'W', 'Th', 'F', 'S', 'Su']; //not too sure about saturday and sunday\n  answer.forEach(entry => {\n    let newTimeRanges = [];\n    let newDays = [];\n    entry.timeRanges.forEach((currRange, i) => {\n      if (i < entry.timeRanges.length - 1) {\n        const nextRange = entry.timeRanges[i + 1];\n        if (\n          currRange.startDate === nextRange.startDate &&\n          currRange.endDate === nextRange.endDate\n        ) {\n          for (let day of currRange.days) {\n            if (!newDays.includes(day)) {\n              newDays.push(day);\n            }\n          }\n          return;\n        }\n      }\n\n      for (let day of currRange.days) {\n        if (!newDays.includes(day)) {\n          newDays.push(day);\n        }\n      }\n      newDays.sort((a, b) => daysOfWeek.indexOf(a) - daysOfWeek.indexOf(b));\n      newTimeRanges.push({\n        days: newDays,\n        startDate: currRange.startDate,\n        endDate: currRange.endDate,\n      });\n      newDays = [];\n    });\n    entry.timeRanges = newTimeRanges;\n  });\n\n  answer.sort((a, b) => a.startSeconds - b.startSeconds);\n  return answer;\n};\n\nconst CourseSchedule = ({ sections }) => {\n  if (!sections || sections.length === 0) {\n    return null;\n  }\n  const termsOffered = sections.reduce((allTerms, curr) => {\n    if (!allTerms.includes(curr.term)) {\n      allTerms.push(curr.term);\n    }\n    return allTerms;\n  }, []);\n\n  const sectionsCleanedData = sections.map(s => ({\n    section: s.section,\n    class: s.class_number,\n    term: s.term,\n    enrolled: {\n      section: s.section,\n      class: s.class_number,\n      filled: s.enrollment_total,\n      capacity: s.enrollment_capacity,\n    },\n    // Every grouping contains a single time of day, location, and instructor\n    // and the classes that occur with those parameters.\n    infoGroupings: getInfoGroupings(s.meetings),\n  }));\n\n  console.log(sectionsCleanedData);\n\n  const tabList = termsOffered.map(term => {\n    return {\n      title: termCodeToDate(term),\n      render: () =>\n        /*\n        <Table\n          columns={courseScheduleTableColumns}\n          data={sectionsCleanedData.filter(c => c.term === term)}\n        />\n        */\n        null,\n    };\n  });\n\n  return (\n    <CourseScheduleWrapper>\n      <TabContainer\n        initialSelectedTab={0}\n        tabList={tabList}\n        contentPadding={'0'}\n      />\n    </CourseScheduleWrapper>\n  );\n};\n\nCourseSchedule.propTypes = {\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      campus: PropTypes.string,\n      class_number: PropTypes.number,\n      enrollment_capacity: PropTypes.number,\n      enrollment_total: PropTypes.number,\n      meetings: PropTypes.arrayOf(\n        PropTypes.shape({\n          days: PropTypes.arrayOf(PropTypes.string),\n          end_date: PropTypes.string,\n          end_seconds: PropTypes.number,\n          is_cancelled: PropTypes.bool,\n          is_closed: PropTypes.bool,\n          location: PropTypes.string,\n          prof: PropTypes.shape({\n            id: PropTypes.number,\n            name: PropTypes.string,\n          }),\n          start_date: PropTypes.string,\n          start_seconds: PropTypes.number,\n        }),\n      ),\n      section: PropTypes.string,\n      term: PropTypes.number,\n    }),\n  ),\n};\n\nexport default CourseSchedule;\n","import React from 'react';\nimport {\n  SectionCellWrapper,\n  SectionContentWrapper,\n  NormalCellWrapper,\n  ContentWrapper,\n  InstructorLink,\n  ColorBar,\n} from './styles/CourseSchedule';\nimport { getProfPageRoute } from '../../Routes';\n\nexport const LEC = 'LEC';\nexport const LAB = 'LAB';\nexport const TUT = 'TUT';\n\nconst SectionCell = ({ cell }) => (\n  <SectionCellWrapper numRows={cell.value.numRows}>\n    <ColorBar\n      color={\n        cell.value.section.includes(LEC)\n          ? LEC\n          : cell.value.section.includes(LAB)\n          ? LAB\n          : TUT\n      }\n    />\n    <SectionContentWrapper>{cell.value.section}</SectionContentWrapper>\n  </SectionCellWrapper>\n);\n\nconst ClassCell = ({ cell }) => (\n  <NormalCellWrapper>{cell.value}</NormalCellWrapper>\n);\nconst EnrolledCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.filled}/{cell.value.capacity}\n  </NormalCellWrapper>\n);\nconst TimeCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, ind) => {\n      return (\n        <ContentWrapper key={ind}>\n          {cl.time.start} - {cl.time.end}\n        </ContentWrapper>\n      );\n    })}\n  </NormalCellWrapper>\n);\nconst DateCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, ind) => {\n      return (\n        <ContentWrapper key={ind}>\n          {cl.date.reduce((acc, curr, ind) => {\n            return `${acc}${ind === 0 ? curr : ` ${curr}`}`;\n          }, '')}\n        </ContentWrapper>\n      );\n    })}\n  </NormalCellWrapper>\n);\nconst LocationCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, ind) => {\n      return <ContentWrapper key={ind}>{cl.location}</ContentWrapper>;\n    })}\n  </NormalCellWrapper>\n);\nconst InstructorCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, ind) => {\n      if (!cl.instructor) return <ContentWrapper key={ind} />;\n      return (\n        <InstructorLink\n          to={getProfPageRoute(cl.instructor.toString())}\n          key={ind}\n        >\n          {cl.instructor}\n        </InstructorLink>\n      );\n    })}\n  </NormalCellWrapper>\n);\n\nexport const courseScheduleTableColumns = [\n  {\n    Header: 'Section',\n    Cell: SectionCell,\n    accessor: 'section',\n    style: {\n      padding: 0,\n    },\n  },\n  {\n    Header: 'Class',\n    Cell: ClassCell,\n    accessor: 'class_number',\n    style: {\n      'vertical-align': 'top',\n    },\n  },\n  {\n    Header: 'Enrolled',\n    Cell: EnrolledCell,\n    accessor: 'enrolled',\n    style: {\n      'vertical-align': 'top',\n    },\n  },\n  {\n    Header: 'Time',\n    Cell: TimeCell,\n    accessor: 'classes',\n  },\n  {\n    Header: 'Date',\n    Cell: DateCell,\n    accessor: 'classes',\n  },\n  {\n    Header: 'Location',\n    Cell: LocationCell,\n    accessor: 'classes',\n  },\n  {\n    Header: 'Instructor',\n    Cell: InstructorCell,\n    accessor: 'classes',\n  },\n];\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nimport { Card, BoxShadow, Heading4, Heading3, Body } from '../../../constants/Mixins';\n\nexport const ExtraInfoBoxWrapper = styled.div`\n${Card('32px 24px')}\n${BoxShadow}\n${Heading4}\nmargin-bottom: 32px;\n`;\n\nexport const Header = styled.div`\n  ${Heading3}\n  margin-bottom: 16px;\n`;\n\nexport const LineOfText = styled.div`\n  margin-bottom: 16px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CourseText = styled(Link)`\n  ${Body}\n  color: ${({ theme }) => theme.courses};\n`;\n\nexport const GreyText = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.light4};\n`;\n\nexport const PrereqText = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.dark3};\n`;\n\n","import React from 'react';\n\n/* Styled Components */\nimport { \n  Header,\n  LineOfText,\n  CourseText,\n  GreyText,\n  PrereqText,\n  ExtraInfoBoxWrapper\n} from './styles/CourseRequisites';\n\nimport { splitCourseCode, COURSE_CODE_REGEX } from '../../utils/Misc';\nimport { getCoursePageRoute } from '../../Routes';\n\nconst ExtraInfoBox = ({ prereqs, postreqs, courseCode }) => {\n  const parsedPrereqs = () => {\n    if (!prereqs) {\n      return '';\n    }\n\n    prereqs = prereqs.replace(/\\s{2,}/gi, ' ');\n    prereqs = prereqs.replace(/\\(\\s*/gi, '(');\n    prereqs = prereqs.replace(/\\s*\\)/gi, ')');\n    prereqs = prereqs.replace(/\\s*\\\\\\s*/gi, '\\\\');\n    prereqs = prereqs.replace(/\\s*\\/\\s*/gi, '/');\n\n    const splitText = prereqs.split(COURSE_CODE_REGEX);\n    const matches = prereqs.match(COURSE_CODE_REGEX);\n    if (splitText.length <= 1) {\n      return prereqs;\n    }\n\n    return splitText.reduce((arr, element, index) => (matches[index] ? [\n      ...arr,\n      element,\n      <CourseText to={getCoursePageRoute(matches[index])} key={index}>\n        {`${splitCourseCode(matches[index])}`}\n      </CourseText>,\n    ] : [...arr, element]), []);\n  }\n\n  return (\n    <ExtraInfoBoxWrapper>\n      <Header>{`${splitCourseCode(courseCode)} prerequisites`}</Header>\n        {prereqs ? (\n          <PrereqText>\n            {parsedPrereqs()}\n          </PrereqText>\n        ) : (\n          <LineOfText>\n            <GreyText>No prerequisites</GreyText>\n          </LineOfText>\n        )}\n      <br />\n      <Header>{`${splitCourseCode(courseCode)} leads to`}</Header>\n      {postreqs.map((postreq, idx) => (\n        <LineOfText key={idx}>\n          <CourseText to={getCoursePageRoute(postreq.postrequisite.code)}>\n            {`${splitCourseCode(postreq.postrequisite.code)} - ${postreq.postrequisite.name}`}\n          </CourseText>\n        </LineOfText>\n      ))}\n      {postreqs.length === 0 && (\n        <LineOfText>\n          <GreyText>Nothing</GreyText>\n        </LineOfText>\n      )}\n    </ExtraInfoBoxWrapper>\n  );\n};\n\nexport default ExtraInfoBox;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const UPDATE_REVIEW_DATA = 'update_review_data';\nexport const SORT_COURSE_REVIEWS_BY_PROF = 'sort_by_prof';\n\nconst convertInputToState = data => {\n  if (!data) {\n    return {\n      courseReviews: [],\n      reviewsByProf: [],\n      courseReviewProfs: [],\n      profReviewProfs: [],\n    };\n  }\n  const courseReviews = data.course_review.map(r => ({\n    id: r.id,\n    upvotes: r.course_review_votes_aggregate.aggregate.sum.vote,\n    upvote_users: r.course_review_votes.map(voteObj => voteObj.user_id),\n    review: r.text,\n    author: r.author,\n    user: r.user,\n    created_at: r.created_at,\n    metrics: {\n      useful: r.useful,\n      easy: r.easy,\n      liked: r.liked != null,\n    },\n    prof: r.prof ? r.prof.name : '',\n  }));\n\n  const reviewsByProf = data.prof_review.reduce((allProfs, current) => {\n    let profObject;\n    let foundProfObject = false;\n    for (let i of allProfs) {\n      if (current.prof && current.prof.name === i.name) {\n        profObject = i;\n        foundProfObject = true;\n        break;\n      }\n    }\n    if (!foundProfObject) {\n      profObject = {\n        id: current.prof ? current.prof.id : 0,\n        code: current.prof ? current.prof.code : '',\n        name: current.prof ? current.prof.name : '',\n        liked: current.prof\n          ? current.prof.course_reviews_aggregate.aggregate.avg.liked\n          : 0,\n        reviews: [],\n      };\n      allProfs.push(profObject);\n    }\n    profObject.reviews.push({\n      id: current.id,\n      upvotes: current.prof_review_votes_aggregate.aggregate.sum.vote,\n      upvote_users: current.prof_review_votes.map(voteObj => voteObj.user_id),\n      review: current.text,\n      author: current.author,\n      user: current.user,\n      created_at: current.created_at,\n      metrics: {\n        clear: current.clear,\n        engaging: current.engaging,\n      },\n    });\n    return allProfs;\n  }, []);\n\n  const courseReviewProfs = data.course_review.reduce((allProfs, review) => {\n    if (review.prof && !allProfs.includes(review.prof.name)) {\n      allProfs.push(review.prof.name);\n    }\n    return allProfs;\n  }, []);\n\n  const profReviewProfs = reviewsByProf.map(obj => obj.name);\n\n  return {\n    courseReviews,\n    reviewsByProf,\n    courseReviewProfs,\n    profReviewProfs,\n  };\n};\n\nconst processDispatch = (currentState, action) => {\n  switch (action.type) {\n    case UPDATE_REVIEW_DATA:\n      return convertInputToState(action.payload);\n    default:\n      return currentState;\n  }\n};\n\nconst useCourseReviewsReducer = initialState => {\n  const [state, setState] = useState(convertInputToState(initialState));\n\n  const dispatch = action => {\n    const newState = processDispatch(state, action);\n    setState(newState);\n  };\n\n  return [state, dispatch];\n};\n\nuseCourseReviewsReducer.propTypes = {\n  initialState: PropTypes.shape({\n    course_review: PropTypes.arrayOf(\n      PropTypes.shape({\n        course: PropTypes.shape({\n          code: PropTypes.string,\n          id: PropTypes.number,\n        }),\n        course_review_votes_aggregate: PropTypes.shape({\n          aggregate: PropTypes.shape({\n            sum: PropTypes.shape({\n              vote: PropTypes.number,\n            }),\n          }),\n        }),\n        easy: PropTypes.number,\n        id: PropTypes.number,\n        liked: PropTypes.number,\n        prof: PropTypes.shape({\n          id: PropTypes.number,\n          name: PropTypes.string,\n        }),\n        text: PropTypes.string,\n        useful: PropTypes.number,\n        author: PropTypes.shape({\n          full_name: PropTypes.string,\n          program: PropTypes.string,\n          picture_url: PropTypes.string,\n        }),\n        user: PropTypes.shape({\n          user_id: PropTypes.number\n        })\n      }),\n    ),\n    prof_review: PropTypes.arrayOf(\n      PropTypes.shape({\n        clear: PropTypes.number,\n        engaging: PropTypes.number,\n        id: PropTypes.number,\n        prof: PropTypes.shape({\n          course_reviews_aggregate: PropTypes.shape({\n            aggregate: PropTypes.shape({\n              avg: PropTypes.shape({\n                liked: PropTypes.number,\n              }),\n            }),\n          }),\n          id: PropTypes.number,\n          name: PropTypes.string,\n        }),\n        prof_review_votes_aggregate: PropTypes.shape({\n          aggregate: PropTypes.shape({\n            sum: PropTypes.shape({\n              vote: PropTypes.number,\n            }),\n          }),\n        }),\n        text: PropTypes.string,\n        author: PropTypes.shape({\n          full_name: PropTypes.string,\n          program: PropTypes.string,\n          picture_url: PropTypes.string,\n        }),\n        user: PropTypes.shape({\n          user_id: PropTypes.number\n        })\n      }),\n    ),\n  }),\n};\n\nexport default useCourseReviewsReducer;\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  Heading1,\n  Heading4,\n  Heading2,\n  Body,\n  BoxShadow,\n} from '../../../constants/Mixins';\n\nexport const CourseReviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseCourseReviewsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ReviewListWrapper = styled.div`\n  ${breakpoint('tablet')`\n    padding: 32px 32px 0 32px;\n  `}\n`;\n\nexport const ReviewsOptionsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    flex-direction: column;\n    margin: 16px;\n  `}\n`;\n\nexport const DropdownPanelWrapper = styled.div`\n  display: flex;\n  margin-right: 32px;\n  margin-bottom: 8px;\n  align-items: center;\n\n  ${breakpoint('mobile', 'tablet')`\n    :last-child{\n      margin-bottom: 16px;\n    }\n  `}\n`;\n\nexport const ProfDropdownPanelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    padding: 24px 16px;\n    border-bottom: 1px solid ${({ theme }) => theme.light2};\n    background-color: white;\n  `}\n`;\n\nexport const DropdownTableText = styled.div`\n  ${Heading4}\n  white-space: nowrap;\n`;\n\nexport const CourseProfReviewsWrapper = styled.div`\n  background: ${({ theme }) => theme.light1};\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  ${breakpoint('tablet')`\n    margin-top: 32px;\n  `}\n`;\n\nexport const ReviewsForSingleProfWrapper = styled.div`\n  ${Card('0')}\n  ${BoxShadow}\n  margin-bottom: 32px;\n`;\n\nexport const ProfHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 32px;\n  align-items: center;\n\n  ${breakpoint('mobile', 'tablet')`\n    flex-direction: column;\n    justfiy-content: flex-start;\n    align-items: flex-start;\n    margin-bottom: 16px;\n  `}\n`;\n\nexport const ProfName = styled(Link)`\n  ${Heading2}\n  color: ${({ theme }) => theme.professors}\n\n  ${breakpoint('mobile', 'tablet')`\n    margin: 16px;\n  `}\n`;\n\nexport const ProfLikedMetric = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${breakpoint('mobile', 'tablet')`\n    margin: 8px 16px 16px 16px;\n  `}\n`;\n\nexport const ProfLikedPercent = styled.div`\n  ${Heading1}\n\n  ${breakpoint('mobile', 'tablet')`\n    font-size: 32px;\n  `}\n`;\n\nexport const ProfLikedPercentLabel = styled.div`\n  ${Body}\n  width: 64px;\n  margin-left: 12px;\n\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n  `}\n`;\n\nexport const ShowMoreReviewsSection = styled.div`\n  background: ${({ theme }) => theme.light3};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  cursor: pointer;\n`;\n\nexport const ShowMoreReviewsText = styled.div`\n  ${Heading4}\n  cursor: pointer;\n`;\n","import gql from 'graphql-tag';\r\n\r\nconst CourseReviewFragment = {\r\n  courseReviewInfo: gql`\r\n    fragment CourseReviewInfoFragment on course_review {\r\n      id\r\n      easy\r\n      liked\r\n      text\r\n      useful\r\n      created_at\r\n      course {\r\n        id\r\n        code\r\n      }\r\n      prof {\r\n        id\r\n        code\r\n        name\r\n      }\r\n      author {\r\n        full_name\r\n        program\r\n        picture_url\r\n      }\r\n      course_review_votes {\r\n        user_id\r\n      }\r\n      course_review_votes_aggregate {\r\n        aggregate {\r\n          sum {\r\n            vote\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  profReviewInfo: gql`\r\n    fragment ProfReviewInfoFragment on prof_review {\r\n      id\r\n      clear\r\n      engaging\r\n      text\r\n      created_at\r\n      prof {\r\n        id\r\n        code\r\n        name\r\n        course_reviews_aggregate {\r\n          aggregate {\r\n            avg {\r\n              liked\r\n            }\r\n          }\r\n        }\r\n      }\r\n      author {\r\n        full_name\r\n        program\r\n        picture_url\r\n      }\r\n      prof_review_votes {\r\n        user_id\r\n      }\r\n      prof_review_votes_aggregate {\r\n        aggregate {\r\n          sum {\r\n            vote\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\nexport default CourseReviewFragment;\r\n","import gql from 'graphql-tag';\r\n\r\nimport CourseReviewFragment from '../../fragments/course/CourseReviewFragment.jsx';\r\n\r\nexport const GET_COURSE_REVIEW = gql`\r\n  query GET_COURSE_REVIEW($id: Int) {\r\n    course_review(\r\n      where: { course_id: { _eq: $id }, text: { _is_null: false } }\r\n    ) {\r\n      ...CourseReviewInfoFragment\r\n    }\r\n    course_review_aggregate(where: { course_id: { _eq: $id } }) {\r\n      aggregate {\r\n        count(columns: text)\r\n      }\r\n    }\r\n    prof_review(where: { course_id: { _eq: $id }, text: { _is_null: false } }) {\r\n      ...ProfReviewInfoFragment\r\n    }\r\n    prof_review_aggregate(where: { course_id: { _eq: $id } }) {\r\n      aggregate {\r\n        count(columns: text)\r\n      }\r\n    }\r\n  }\r\n  ${CourseReviewFragment.courseReviewInfo}\r\n  ${CourseReviewFragment.profReviewInfo}\r\n`;\r\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useQuery } from 'react-apollo';\nimport { withTheme } from 'styled-components';\nimport moment from 'moment';\n\n/* Constants */\nimport { MIN_REVIEWS_SHOWN } from '../../constants/PageConstants';\n\n/* Custom Hooks */\nimport useCourseReviewsReducer, {\n  UPDATE_REVIEW_DATA,\n} from '../../data/hooks/UseCourseReviewsReducer';\n\n/* Styled Components */\nimport {\n  CourseReviewWrapper,\n  CourseCourseReviewsWrapper,\n  CourseProfReviewsWrapper,\n  ReviewsForSingleProfWrapper,\n  ReviewListWrapper,\n  ReviewsOptionsWrapper,\n  DropdownPanelWrapper,\n  ProfDropdownPanelWrapper,\n  DropdownTableText,\n  ProfHeader,\n  ProfName,\n  ProfLikedMetric,\n  ProfLikedPercent,\n  ProfLikedPercentLabel,\n  ShowMoreReviewsSection,\n  ShowMoreReviewsText,\n} from './styles/CourseReviews';\n\n/* Child Components */\nimport TabContainer from '../../components/display/TabContainer';\nimport Review from '../../components/display/Review';\nimport DropdownList from '../../components/input/DropdownList';\nimport LoadingSpinner from '../../components/display/LoadingSpinner';\nimport CollapseableContainer from '../../components/display/CollapseableContainer';\n\n/* Selectors */\nimport { getIsBrowserDesktop } from '../../data/reducers/BrowserReducer';\n\n/* GraphQL Queries */\nimport { GET_COURSE_REVIEW } from '../../graphql/queries/course/CourseReview.jsx';\nimport { getProfPageRoute } from '../../Routes';\n\nconst CourseCourseReviews = ({\n  reviews,\n  theme,\n  courseSort,\n  setCourseSort,\n  courseProfFilter,\n  courseProfFilterOptions,\n  setCourseProfFilter,\n}) => {\n  const [showingAllReviews, setShowingAllReviews] = useState(false);\n\n  const renderReviews = useMemo(() => reviews.sort((a, b) => {\n    const timeSort = moment(b.created_at).format('YYYYMMDD') - moment(a.created_at).format('YYYYMMDD');\n    return courseSort === 0 ?\n      timeSort : timeSort || a.upvotes - b.upvotes;\n  }).filter((_, i) => {\n    return showingAllReviews || i < MIN_REVIEWS_SHOWN;\n  }).map((review, i) => (\n    <Review key={i} review={review} />\n  )), [reviews, showingAllReviews, courseSort]);\n\n  return (\n    <CourseCourseReviewsWrapper>\n      <ReviewListWrapper>\n        <ReviewsOptionsWrapper>\n          <DropdownPanelWrapper>\n            <DropdownTableText>Sort by: </DropdownTableText>\n            <DropdownList\n              color={theme.primary}\n              selectedIndex={courseSort}\n              options={['most recent', 'most helpful']}\n              onChange={value => setCourseSort(value)}\n            />\n          </DropdownPanelWrapper>\n          <DropdownPanelWrapper>\n            <DropdownTableText>Filter by professor: </DropdownTableText>\n            <DropdownList\n              color={theme.professors}\n              selectedIndex={courseProfFilter}\n              options={courseProfFilterOptions}\n              onChange={value => setCourseProfFilter(value)}\n            />\n          </DropdownPanelWrapper>\n        </ReviewsOptionsWrapper>\n        {renderReviews}\n      </ReviewListWrapper>\n      {reviews.length > MIN_REVIEWS_SHOWN && (\n        <ShowMoreReviewsSection\n          onClick={() => setShowingAllReviews(!showingAllReviews)}\n        >\n          <ShowMoreReviewsText>\n            {showingAllReviews\n              ? `Show less reviews`\n              : `Show all ${reviews.length} reviews`}\n          </ShowMoreReviewsText>\n        </ShowMoreReviewsSection>\n      )}\n    </CourseCourseReviewsWrapper>\n  );\n};\n\nCourseCourseReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      upvotes: PropTypes.number,\n      review: PropTypes.string,\n      author: PropTypes.shape({\n        full_name: PropTypes.string,\n        program: PropTypes.string,\n        picture_url: PropTypes.string\n      }),\n      user: PropTypes.shape({\n        user_id: PropTypes.number\n      }),\n      metrics: PropTypes.shape({\n        useful: PropTypes.number,\n        easy: PropTypes.number,\n        liked: PropTypes.boolean,\n      }),\n    }),\n  ).isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst CourseProfReviews = ({ reviewsByProf, ProfFilterDropdown }) => {\n  const [showingReviewsMap, setShowingReviewsMap] = useState({});\n\n  const reviewList = useMemo(() => reviewsByProf.map((prof, idx) => (\n    <ReviewsForSingleProfWrapper key={idx}>\n      <ReviewListWrapper>\n        <ProfHeader>\n          <ProfName to={getProfPageRoute(prof.code)}>{prof.name}</ProfName>\n          <ProfLikedMetric>\n            <ProfLikedPercent>\n              {Math.round(prof.liked * 100)}%\n            </ProfLikedPercent>\n            <ProfLikedPercentLabel>\n              liked this professor\n            </ProfLikedPercentLabel>\n          </ProfLikedMetric>\n        </ProfHeader>\n        {prof.reviews.sort((a, b) => {\n          return moment(b.created_at).format('YYYYMMDD') - moment(a.created_at).format('YYYYMMDD');\n        }).filter((_, i) => {\n          return i < MIN_REVIEWS_SHOWN || showingReviewsMap[prof.name];\n        }).map((review, i) => (\n          <Review key={i} review={review} />\n        ))}\n      </ReviewListWrapper>\n      {prof.reviews.length > MIN_REVIEWS_SHOWN && (\n        <ShowMoreReviewsSection\n          onClick={() =>\n            setShowingReviewsMap({\n              ...showingReviewsMap,\n              [prof.name]: !showingReviewsMap[prof.name],\n            })\n          }\n        >\n          <ShowMoreReviewsText>\n            {showingReviewsMap[prof.name]\n              ? `Show less reviews`\n              : `Show all ${prof.reviews.length} reviews`}\n          </ShowMoreReviewsText>\n        </ShowMoreReviewsSection>\n      )}\n    </ReviewsForSingleProfWrapper>\n  )), [reviewsByProf, showingReviewsMap]);\n\n  return (\n    <CourseProfReviewsWrapper>\n      {ProfFilterDropdown}\n      {reviewList}\n    </CourseProfReviewsWrapper>\n  );\n};\n\nCourseProfReviews.propTypes = {\n  reviewsByProf: PropTypes.arrayOf(\n    PropTypes.shape({\n      prof: PropTypes.string,\n      likes: PropTypes.number,\n      reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n          upvotes: PropTypes.number,\n          review: PropTypes.string,\n          author: PropTypes.shape({\n            full_name: PropTypes.string,\n            program: PropTypes.string,\n            picture_url: PropTypes.string\n          }).isRequired,\n          user: PropTypes.shape({\n            user_id: PropTypes.number\n          }),\n          metrics: PropTypes.shape({\n            clear: PropTypes.number,\n            engaging: PropTypes.number,\n          }).isRequired,\n        }),\n      ),\n    }),\n  ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isBrowserDesktop: getIsBrowserDesktop(state),\n});\n\nconst CourseReviews = ({ courseID, theme, isBrowserDesktop }) => {\n  const { loading, data } = useQuery(GET_COURSE_REVIEW, {\n    variables: { id: courseID },\n  });\n  const [courseSort, setCourseSort] = useState(0);\n  const [courseProfFilter, setCourseProfFilter] = useState(0);\n  const [profReviewFilter, setProfReviewFilter] = useState(0);\n  const [showingProfReviews, setShowingProfReviews] = useState(false);\n  const [reviewDataState, dispatchReviews] = useCourseReviewsReducer(data);\n\n  useEffect(() => {\n    if (data) {\n      dispatchReviews({\n        type: UPDATE_REVIEW_DATA,\n        payload: data,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  if (loading) {\n    return (\n      <CourseReviewWrapper>\n        <LoadingSpinner />\n      </CourseReviewWrapper>\n    );\n  }\n\n  const courseProfFilterOptions = [\n    'show all professors',\n    ...reviewDataState.courseReviewProfs,\n  ];\n\n  const courseReviewsToShow = reviewDataState.courseReviews.filter(\n    review =>\n      courseProfFilter === 0 ||\n      review.prof === courseProfFilterOptions[courseProfFilter],\n  );\n\n  const profProfFilterOptions = [\n    'show all professors',\n    ...reviewDataState.profReviewProfs,\n  ];\n\n  const profReviewsToShow = reviewDataState.reviewsByProf.filter(\n    review =>\n      profReviewFilter === 0 ||\n      review.name === profProfFilterOptions[profReviewFilter],\n  );\n\n  const numProfReviews = profReviewsToShow.reduce((total, curr) => {\n    total += curr.reviews.length;\n    return total;\n  }, 0);\n\n  const ProfFilterDropdown = (\n    <ProfDropdownPanelWrapper>\n      <DropdownTableText>Filter by professor: </DropdownTableText>\n      <DropdownList\n        color={theme.professors}\n        selectedIndex={profReviewFilter}\n        options={profProfFilterOptions}\n        onChange={value => setProfReviewFilter(value)}\n      />\n    </ProfDropdownPanelWrapper>\n  );\n\n  const tabList = [\n    {\n      title: `Course reviews (${courseReviewsToShow.length})`,\n      render: () => (\n        <CourseCourseReviews\n          reviews={courseReviewsToShow}\n          theme={theme}\n          courseSort={courseSort}\n          setCourseSort={setCourseSort}\n          courseProfFilter={courseProfFilter}\n          courseProfFilterOptions={courseProfFilterOptions}\n          setCourseProfFilter={setCourseProfFilter}\n        />\n      ),\n      onClick: () => setShowingProfReviews(false),\n    },\n    {\n      title: `Professor reviews (${numProfReviews})`,\n      render: () => ProfFilterDropdown,\n      onClick: () => setShowingProfReviews(true),\n    },\n  ];\n\n  return (\n    <CourseReviewWrapper>\n      {isBrowserDesktop && (\n        <TabContainer\n          tabList={tabList}\n          initialSelectedTab={0}\n          contentPadding=\"0\"\n        />\n      )}\n      {showingProfReviews && isBrowserDesktop && (\n        <CourseProfReviews\n          reviewsByProf={profReviewsToShow}\n          ProfFilterDropdown={isBrowserDesktop ? null : ProfFilterDropdown}\n        />\n      )}\n      {!isBrowserDesktop && (\n        <>\n          <CollapseableContainer\n            title={`Course comments (${data.course_review_aggregate.aggregate.count})`}\n          >\n            <CourseCourseReviews\n              reviews={courseReviewsToShow}\n              theme={theme}\n              courseSort={courseSort}\n              setCourseSort={setCourseSort}\n              courseProfFilter={courseProfFilter}\n              courseProfFilterOptions={courseProfFilterOptions}\n              setCourseProfFilter={setCourseProfFilter}\n            />\n          </CollapseableContainer>\n          <CollapseableContainer\n            title={`Professor comments (${data.prof_review_aggregate.aggregate.count})`}\n          >\n            <CourseProfReviews\n              reviewsByProf={profReviewsToShow}\n              ProfFilterDropdown={ProfFilterDropdown}\n            />\n          </CollapseableContainer>\n        </>\n      )}\n    </CourseReviewWrapper>\n  );\n};\n\nCourseReviews.propTypes = {\n  courseID: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withTheme(connect(mapStateToProps)(CourseReviews));\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\n\n/* Mixins */\nimport {\n  PageContent,\n  Card,\n  WideColumn,\n  ThinColumn,\n  BoxShadow,\n  Heading3,\n  PageWrapper\n} from '../../../constants/Mixins';\n\nexport const CoursePageWrapper = styled.div`\n  ${PageWrapper}\n`;\n\nexport const ColumnWrapper = styled.div`\n  ${PageContent}\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nexport const Column1 = styled.div`\n  ${WideColumn}\n\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n    padding: 0;\n    order: 2;\n  `}\n`;\n\nexport const Column2 = styled.div`\n  ${ThinColumn}\n\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n    order: 1;\n  `}\n`;\n\nexport const ScheduleAndReviewWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseReviewQuestionBox = styled.div`\n  ${Card('24px')}\n  ${BoxShadow}\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    flex-direction: column;\n  `}\n`;\n\nexport const CourseQuestionTextAndToggle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n    margin-right: 0;\n    margin-bottom: 16px;\n    justify-content: space-between;\n  `}\n`;\n\nexport const CourseReviewQuestionText = styled.div`\n  ${Heading3}\n  margin-right: 24px;\n\n  ${breakpoint('mobile', 'tablet')`\n    max-width: 60%;\n  `}\n`;\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { useQuery } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport CourseInfoHeader from './CourseInfoHeader';\nimport CourseSchedule from './CourseSchedule';\nimport CourseRequisites from './CourseRequisites';\nimport CourseReviews from './CourseReviews';\nimport CourseReviewCourseBox from '../../components/common/CourseReviewCourseBox';\nimport Button from '../../components/input/Button';\nimport Modal from '../../components/display/Modal';\nimport LikeCourseToggle from '../../components/input/LikeCourseToggle';\nimport LoadingSpinner from '../../components/display/LoadingSpinner';\nimport NotFoundPage from '../../pages/notFoundPage/NotFoundPage';\n\n/* Queries */\nimport { buildCourseQuery } from '../../graphql/queries/course/Course';\nimport { getUserId } from '../../utils/Auth';\n\n/* Styled Components */\nimport {\n  CoursePageWrapper,\n  ColumnWrapper,\n  Column1,\n  Column2,\n  ScheduleAndReviewWrapper,\n  CourseReviewQuestionBox,\n  CourseQuestionTextAndToggle,\n  CourseReviewQuestionText,\n} from './styles/CoursePage';\n\n/* Selectors */\nimport { getIsLoggedIn } from '../../data/reducers/AuthReducer';\nimport { getIsBrowserDesktop } from '../../data/reducers/BrowserReducer';\n\nimport { splitCourseCode } from '../../utils/Misc';\nimport { authModalOpen } from '../../data/actions/AuthActions';\n\nconst mapStateToProps = state => ({\n  isBrowserDesktop: getIsBrowserDesktop(state),\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nconst CoursePageContent = ({\n  course,\n  shortlisted,\n  userCourseReview,\n  userProfReview,\n  userCourseTaken,\n  isLoggedIn,\n  isBrowserDesktop,\n}) => {\n  const dispatch = useDispatch();\n  const [reviewModalOpen, setReviewModalOpen] = useState(false);\n\n  const handleReviewClick = () => {\n    isLoggedIn ? setReviewModalOpen(true) : dispatch(authModalOpen());\n  };\n\n  return (\n    <>\n      <CourseInfoHeader\n        course={course}\n        shortlisted={shortlisted}\n      />\n      <ColumnWrapper>\n        <Column1>\n          <ScheduleAndReviewWrapper>\n            <CourseSchedule sections={course.sections} />\n            {(!isLoggedIn || userCourseTaken) && <CourseReviewQuestionBox>\n              <CourseQuestionTextAndToggle>\n                <CourseReviewQuestionText>\n                  What do you think of {splitCourseCode(course.code)}?\n                </CourseReviewQuestionText>\n                <LikeCourseToggle\n                  courseCode={course.code}\n                  courseID={course.id}\n                  reviewID={userCourseReview && userCourseReview.id}\n                  initialState={userCourseReview ? userCourseReview.liked : null}\n                />\n              </CourseQuestionTextAndToggle>\n              <Button\n                width={isBrowserDesktop ? 'max-content' : '100%'}\n                padding=\"16px 24px\"\n                handleClick={handleReviewClick}\n              >\n                {userCourseReview || userProfReview ? 'Edit your review' : 'Add your review'}\n              </Button>\n            </CourseReviewQuestionBox>}\n          </ScheduleAndReviewWrapper>\n          <CourseReviews courseID={course.id} />\n        </Column1>\n        <Column2>\n          <CourseRequisites\n            courseCode={course.code}\n            prereqs={course.prereqs}\n            postreqs={course.postrequisites}\n          />\n        </Column2>\n      </ColumnWrapper>\n      <Modal\n        isOpen={reviewModalOpen}\n        onRequestClose={() => setReviewModalOpen(false)}\n      >\n        <CourseReviewCourseBox\n          courseList={[{ course: course, courseReview: userCourseReview, profReview: userProfReview }]}\n          onCancel={() => setReviewModalOpen(false)}\n        />\n      </Modal>\n    </>\n  );\n};\n\nconst CoursePage = ({ match, isLoggedIn, isBrowserDesktop }) => {\n  const courseCode = match.params.courseCode.toLowerCase();\n  const query = buildCourseQuery(isLoggedIn, getUserId());\n\n  const { loading, error, data } = useQuery(query, {\n    variables: { code: courseCode },\n  });\n\n  return loading ? (\n    <LoadingSpinner />\n  ) : error || !data || !data.course || data.course.length === 0 ? (\n    <NotFoundPage text=\"Sorry, we couldn't find that course!\" />\n  ) : (\n    <CoursePageWrapper>\n      <CoursePageContent\n        course={data.course[0]}\n        userCourseReview={isLoggedIn && data.course_review.length > 0 ?\n          data.course_review[0] : null}\n        userProfReview={isLoggedIn &&\n          data.prof_review.length > 0 ? data.prof_review[0] : null}\n        userCourseTaken={isLoggedIn && data.user_course_taken.length > 0 ? true : false}\n        shortlisted={isLoggedIn && data.user_shortlist.length > 0}\n        isLoggedIn={isLoggedIn}\n        isBrowserDesktop={isBrowserDesktop}\n      />\n    </CoursePageWrapper>\n  );\n};\n\nCoursePage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default withRouter(connect(mapStateToProps)(CoursePage));\n"],"sourceRoot":""}