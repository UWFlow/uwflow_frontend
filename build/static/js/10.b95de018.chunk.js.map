{"version":3,"sources":["img/course_v1.svg","pages/coursePage/styles/CourseInfoHeader.jsx","pages/coursePage/CourseInfoHeader.jsx","pages/coursePage/styles/CourseSchedule.jsx","pages/coursePage/CourseScheduleTableColumns.jsx","pages/coursePage/CourseSchedule.jsx","pages/coursePage/styles/CourseRequisites.jsx","pages/coursePage/CourseRequisites.jsx","data/hooks/UseCourseReviewsReducer.jsx","pages/coursePage/styles/CourseReviews.jsx","pages/coursePage/CourseReviews.jsx","pages/coursePage/styles/CoursePage.jsx","pages/coursePage/CoursePage.jsx"],"names":["module","exports","CourseInfoHeaderWrapper","styled","div","theme","white","CourseCodeAndNameSection","CourseHeader","primaryExtraDark","breakpoint","CourseCodeAndStar","PageContent","StarAlignmentWrapper","CourseCode","Heading1","ratingBoxWidth","CourseNameWrapper","CourseName","Heading2","light1","CourseDescriptionSection","Description","Body","dark1","RatingsSection","CourseInfoHeader","course","shortlisted","reviews_aggregate","aggregate","avg","liked","course_easy","course_useful","count","course_comment_count","RATING_BOX_WIDTH","splitCourseCode","code","ShortlistStar","size","initialState","courseID","id","name","RatingBox","numRatings","numComments","percentages","displayName","percent","description","CourseScheduleWrapper","SectionCellWrapper","numRows","ColorBar","color","LEC","LAB","dark2","dark3","NormalCellWrapper","SectionContentWrapper","ContentWrapper","InstructorLink","Link","professors","TableWrapper","EnrollmentText","filled","red","FinalExamsText","Heading3","SpaceMargin","contentSpace","spaces","content","i","push","key","courseScheduleTableColumns","Header","Cell","cell","value","includes","accessor","maxWidth","style","padding","capacity","map","cl","idx","time","length","timeRanges","timeRangeIdx","timeRangeContent","date","processedDate","startDate","endDate","processDateString","split","days","join","location","prof","to","getProfPageRoute","sectionOrder","CourseSchedule","sections","courseCode","termsOffered","reduce","allTerms","curr","term","sectionsCleanedData","s","section","campus","class","class_number","enrolled","enrollment_total","enrollment_capacity","meetings","groupedByTimeOfDay","groupings","start_seconds","end_seconds","secsToTime","start_date","end_date","infoGroups","Object","entries","forEach","entry","sort","a","b","daysOfWeek","newTimeRanges","newDays","currRange","nextRange","day","indexOf","numDates","startSeconds","group","times","locations","profs","dates","getInfoGroupings","sectionTypeA","sectionTypeB","localeCompare","courseExams","processSectionExams","tabList","title","termCodeToDate","render","Table","columns","data","filter","c","FinalExamTable","courses","includeCode","TabContainer","initialSelectedTab","contentPadding","LastUpdatedSchedule","ExtraInfoBoxWrapper","Card","BoxShadow","Heading4","LineOfText","CourseText","GreyText","light4","PrereqText","ExtraInfoBox","prereqs","postreqs","splitText","replace","COURSE_CODE_REGEX","matches","match","arr","element","index","getCoursePageRoute","parsedPrereqs","postreq","postrequisite","convertInputToState","courseReviews","reviewsByProf","courseReviewProfs","profReviewProfs","review","r","upvotes","course_review_upvotes_aggregate","upvote_users","course_review_upvotes","vote","Number","user_id","course_comment","author","user","created_at","updated_at","metrics","useful","easy","allProfs","current","profObject","foundProfObject","prof_comment","reviews","prof_review_upvotes_aggregate","prof_review_upvotes","clear","prof_clear","engaging","prof_engaging","obj","useCourseReviewsReducer","useState","state","setState","action","newState","currentState","type","payload","processDispatch","CourseReviewWrapper","CourseCourseReviewsWrapper","ReviewListWrapper","ReviewsOptionsWrapper","DropdownPanelWrapper","ProfDropdownPanelWrapper","light2","DropdownTableText","CourseProfReviewsWrapper","ReviewsForSingleProfWrapper","ProfHeader","ProfName","ProfLikedMetric","ProfLikedPercent","ProfLikedPercentLabel","ShowMoreReviewsSection","light3","ShowMoreReviewsText","CourseCourseReviews","courseSort","setCourseSort","courseProfFilter","courseProfFilterOptions","setCourseProfFilter","showingAllReviews","setShowingAllReviews","renderReviews","useMemo","timeSort","moment","format","_","MIN_REVIEWS_SHOWN","Review","isCourseReview","DropdownList","primary","selectedIndex","options","onChange","onClick","CourseProfReviews","ProfFilterDropdown","showingReviewsMap","setShowingReviewsMap","reviewList","Math","round","withTheme","connect","isBrowserDesktop","getIsBrowserDesktop","useQuery","GET_COURSE_REVIEW","variables","loading","profReviewFilter","setProfReviewFilter","showingProfReviews","setShowingProfReviews","reviewDataState","dispatchReviews","useEffect","LoadingSpinner","courseReviewsToShow","profProfFilterOptions","profReviewsToShow","numProfReviews","total","CollapseableContainer","course_review_aggregate","prof_review_aggregate","CoursePageWrapper","PageWrapper","ColumnWrapper","Column1","WideColumn","Column2","ThinColumn","ScheduleAndReviewWrapper","CourseReviewQuestionBox","CourseQuestionTextAndToggle","CourseReviewQuestionText","CoursePageContent","userReview","userCourseTaken","isLoggedIn","dispatch","useDispatch","reviewModalOpen","setReviewModalOpen","LikeCourseToggle","profID","prof_id","Button","width","handleClick","authModalOpen","CourseRequisites","postrequisites","Modal","isOpen","onRequestClose","CourseReviewCourseBox","courseList","onCancel","withRouter","getIsLoggedIn","params","toLowerCase","query","buildCourseQuery","getUserId","error","user_course_taken","user_shortlist","NotFoundPage","text"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,uC,66FCYpC,IAAMC,EAA0BC,IAAOC,IAAV,KAId,qBAAGC,MAAkBC,SAK9BC,EAA2BJ,IAAOC,IAAV,IAKXI,KACJ,qBAAGH,MAAkBI,mBAMvCC,YAAW,SAAXA,CAZiC,MAiBxBC,EAAoBR,IAAOC,IAAV,IAK1BM,YAAW,SAAXA,CAL0B,IAMxBE,MAKOC,EAAuBV,IAAOC,IAAV,IAI7BM,YAAW,SAAXA,CAJ6B,MASpBI,EAAaX,IAAOC,IAAV,IACnBW,IAIAL,YAAW,SAAU,SAArBA,CALmB,KASnBA,YAAW,SAAXA,CATmB,KAUM,qBAAGM,mBAInBC,EAAoBd,IAAOC,IAAV,IAC1BM,YAAW,SAAXA,CAD0B,IAExBE,MAKOM,EAAaf,IAAOC,IAAV,IACnBe,KACO,qBAAGd,MAAkBe,SAG5BV,YAAW,SAAXA,CALmB,KAMM,qBAAGM,mBAInBK,EAA2BlB,IAAOC,IAAV,IAMjCM,YAAW,SAAXA,CANiC,IAO/BE,MAMOU,EAAcnB,IAAOC,IAAV,IACpBmB,KACO,qBAAGlB,MAAkBmB,QAE5Bd,YAAW,SAAU,SAArBA,CAJoB,KAUpBA,YAAW,SAAXA,CAVoB,KAYK,qBAAGM,mBAInBS,EAAiBtB,IAAOC,IAAV,IACvBM,YAAW,SAAU,SAArBA,CADuB,KAKvBA,YAAW,SAAXA,CALuB,M,0BCnCZgB,EA1DU,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAAkB,EACND,EAAOE,kBAAkBC,UAAUC,IAAzEC,EAD4C,EAC5CA,MAAOC,EADqC,EACrCA,YAAaC,EADwB,EACxBA,cADwB,EAEZP,EAAOE,kBAAkBC,UAAzDK,EAF4C,EAE5CA,MAAOC,EAFqC,EAErCA,qBAEf,OACE,kBAAClC,EAAD,KACE,kBAACK,EAAD,KACE,kBAACI,EAAD,KACE,kBAACG,EAAD,CAAYE,eAAgBqB,KACzBC,YAAgBX,EAAOY,OAE1B,kBAAC1B,EAAD,KACE,kBAAC2B,EAAA,EAAD,CACEC,KAAM,GACNC,aAAcd,EACde,SAAUhB,EAAOiB,OAIvB,kBAAC3B,EAAD,KACE,kBAACC,EAAD,CAAYF,eAAgBqB,KACzBV,EAAOkB,QAId,kBAACxB,EAAD,KACE,kBAACI,EAAD,KACE,kBAACqB,EAAA,EAAD,CACEC,WAAYZ,EACZa,YAAaZ,EACba,YAAa,CACX,CACEC,YAAa,QACbC,QAASnB,GAEX,CACEkB,YAAa,SACbC,QAASjB,EAAgB,GAE3B,CACEgB,YAAa,OACbC,QAASlB,EAAc,OAK/B,kBAACX,EAAD,CAAaN,eAAgBqB,KAC1BV,EAAOyB,gB,0sDClEX,IAAMC,GAAwBlD,IAAOC,IAAV,MAIrBkD,GAAqBnD,IAAOC,IAAV,MAIzB,qBAAGmD,WAA6B,mBAA2B,EAA3B,EAAGA,WAQ5BC,GAAWrD,IAAOC,IAAV,MAMC,gBAAGqD,EAAH,EAAGA,MAAOpD,EAAV,EAAUA,MAAV,OAClBoD,IAAUC,GAAMrD,EAAMmB,MAAQiC,IAAUE,GAAMtD,EAAMuD,MAAQvD,EAAMwD,SAGzDC,GAAoB3D,IAAOC,IAAV,MAMjB2D,GAAwB5D,IAAOC,IAAV,MASrB4D,GAAiB7D,IAAOC,IAAV,MAQd6D,GAAiB9D,YAAO+D,KAAP/D,CAAH,MAChB,qBAAGE,MAAkB8D,cAKnBC,GAAejE,IAAOC,IAAV,MAIZiE,GAAiBlE,IAAOC,IAAV,MAChB,gBAAGC,EAAH,EAAGA,MAAH,SAAUiE,OAAsBjE,EAAMkE,IAAMlE,EAAMuD,SAGhDY,GAAiBrE,IAAOC,IAAV,KAEvBqE,KACO,qBAAGpE,MAAkBmB,QAE5Bd,YAAW,SAAU,SAArBA,CALuB,OAUdgE,GAAcvE,IAAOC,IAAV,M,SCjEXsD,GAAM,MACNC,GAAM,MAGbgB,GAAe,SAACC,GAEpB,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAAQE,KAAK,kBAACf,GAAD,CAAgBgB,IAAKF,KAEpC,OAAOD,GA4GII,GAA6B,CACxC,CACEC,OAAQ,UACRC,KA5GgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,kBAAC9B,GAAD,CAAoBC,QAAS6B,EAAKC,MAAM9B,SACtC,kBAACC,GAAD,CACEC,MACE2B,EAAKC,MAAMC,SAAS5B,IAChBA,GACA0B,EAAKC,MAAMC,SAAS3B,IACpBA,GAjBO,QAqBf,kBAACI,GAAD,KAAwBqB,EAAKC,SAkG7BE,SAAU,UACVC,SAAU,GACVC,MAAO,CACLC,QAAS,IAGb,CACER,OAAQ,QACRC,KAtGc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAACtB,GAAD,KAAoBsB,EAAKC,QAsGvBE,SAAU,QACVC,SAAU,GACVC,MAAO,CACL,cAAiB,QAGrB,CACEP,OAAQ,WACRC,KA3GiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,kBAACtB,GAAD,KACE,kBAACO,GAAD,CAAgBC,OAAQc,EAAKC,MAAMf,QAAUc,EAAKC,MAAMM,UACrDP,EAAKC,MAAMf,OADd,IACuBc,EAAKC,MAAMM,YAwGpCJ,SAAU,WACVC,SAAU,GACVC,MAAO,CACL,cAAiB,QAGrB,CACEP,OAAQ,OACRC,KAtGa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,kBAACtB,GAAD,KACGsB,EAAKC,MAAMO,KAAI,SAACC,EAAIC,GAAL,OACZ,oCACE,kBAAC9B,GAAD,CAAgBgB,IAAKc,GAClBD,EAAGE,MAELpB,GAAakB,EAAGjB,QAChBkB,EAAMV,EAAKC,MAAMW,OAAS,GAAK,kBAACtB,GAAD,YA+FtCa,SAAU,QACVC,SAAU,KAEZ,CACEN,OAAQ,OACRC,KA9Fa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,kBAACtB,GAAD,KACGsB,EAAKC,MAAMO,KAAI,SAACK,EAAYC,GAC3B,IAAIC,EAAmBF,EAAWL,KAAI,SAACQ,EAAMN,GAC3C,IAAMO,EAAgBD,EAAKE,YAAcF,EAAKG,QAC5CC,YAAkBJ,EAAKE,WAAWG,MAAM,MAAM,GAAK,GACrD,OACE,kBAACzC,GAAD,CAAgBgB,IAAKc,GAClBM,EAAKM,KAAKC,KAAK,KADlB,IACyBN,MAO7B,OAHIH,EAAed,EAAKC,MAAMW,OAAS,GACrCG,EAAiBpB,KAAK,kBAACL,GAAD,OAEjByB,OAgFTZ,SAAU,QACVC,SAAU,KAEZ,CACEN,OAAQ,WACRC,KAhFiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnB,kBAACtB,GAAD,KACGsB,EAAKC,MAAMO,KAAI,SAACC,EAAIC,GAAL,OACd,oCACE,kBAAC9B,GAAD,CAAgBgB,IAAKc,GAClBD,EAAGe,UAELjC,GAAakB,EAAGjB,QAChBkB,EAAMV,EAAKC,MAAMW,OAAS,GAAK,kBAACtB,GAAD,YAyEpCa,SAAU,YACVC,SAAU,IAEZ,CACEN,OAAQ,aACRC,KAxEmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACrB,kBAACtB,GAAD,KACGsB,EAAKC,MAAMO,KAAI,SAACC,EAAIC,GAAL,OAAaD,EAAGgB,KAAKtE,KAEjC,oCACE,kBAAC0B,GAAD,CACE6C,GAAIC,aAAiBlB,EAAGgB,KAAKtE,MAC7ByC,IAAKc,GAEJD,EAAGgB,KAAKhE,MAEV8B,GAAakB,EAAGjB,QAChBkB,EAAMV,EAAKC,MAAMW,OAAS,GAAK,kBAACtB,GAAD,OAGlC,oCACGC,GAAakB,EAAGjB,OAAS,GACzBkB,EAAMV,EAAKC,MAAMW,OAAS,GAAK,kBAACtB,GAAD,YAwDtCa,SAAU,QACVC,SAAU,KAEZ,CACEN,OAAQ,SACRC,KAlIe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,kBAACtB,GAAD,KAAoBsB,EAAKC,QAkIvBE,SAAU,SACVC,SAAU,K,yOCtKd,IAAMwB,GAAe,CACnB,IAAO,EACP,IAAO,EACP,IAAO,GAmMMC,GAlGQ,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAClC,IAAKD,GAAgC,IAApBA,EAASlB,OACxB,OAAO,KAET,IAAMoB,EAAeF,EAASG,QAAO,SAACC,EAAUC,GAI9C,OAHKD,EAAShC,SAASiC,EAAKC,OAC1BF,EAASvC,KAAKwC,EAAKC,MAEdF,IACN,IAEGG,EAAsBP,EAAStB,KAAI,SAAA8B,GAAC,O,2VAAA,EACxCC,QAASD,EAAEC,QACXC,OAAQF,EAAEE,OACVC,MAAOH,EAAEI,aACTN,KAAME,EAAEF,KACRO,SAAU,CACRzD,OAAQoD,EAAEM,iBACVrC,SAAU+B,EAAEO,sBArGO,SAAAC,GACvB,IAAIC,EAAqBD,EAASb,QAAO,SAACe,EAAWb,GACnD,IAAMvC,EAAG,UAAMuC,EAAKc,cAAX,YAA4Bd,EAAKe,aAsB1C,OApBKF,EAAUpD,KACboD,EAAUpD,GAAO,CACfe,KAAK,GAAD,OAAKwC,YAAWhB,EAAKc,eAArB,cAAyCE,YAAWhB,EAAKe,cAC7D1B,SAAUW,EAAKX,SACfC,KAAMU,EAAKV,KACP,CACEjE,GAAI2E,EAAKV,KAAKjE,GACdL,KAAMgF,EAAKV,KAAKtE,KAChBM,KAAM0E,EAAKV,KAAKhE,MAElB,GACJoD,WAAY,KAIhBmC,EAAUpD,GAAKiB,WAAWlB,KAAK,CAC7B2B,KAAMa,EAAKb,KACXJ,UAAWiB,EAAKiB,WAChBjC,QAASgB,EAAKkB,WAETL,IACN,IAECM,EAAa,GAGjBC,OAAOC,QAAQT,GAAoBU,SAAQ,SAAAC,GACzCA,EAAM,GAAG7C,WAAW8C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE1C,UAAY2C,EAAE3C,aACnDoC,EAAW3D,KAAK+D,EAAM,OAIxB,IAAMI,EAAa,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,MACnDR,EAAWG,SAAQ,SAAAC,GACjB,IAAIK,EAAgB,GAChBC,EAAU,GACdN,EAAM7C,WAAW4C,SAAQ,SAACQ,EAAWvE,GACnC,GAAIA,EAAIgE,EAAM7C,WAAWD,OAAS,EAAG,CACnC,IAAMsD,EAAYR,EAAM7C,WAAWnB,EAAI,GACvC,GACEuE,EAAU/C,YAAcgD,EAAUhD,WAClC+C,EAAU9C,UAAY+C,EAAU/C,QAChC,CAAC,IAAD,uBACA,YAAgB8C,EAAU3C,KAA1B,+CAAgC,CAAC,IAAxB6C,EAAuB,QACzBH,EAAQ9D,SAASiE,IACpBH,EAAQrE,KAAKwE,IAHjB,kFAMA,QAZqC,2BAgBzC,YAAgBF,EAAU3C,KAA1B,+CAAgC,CAAC,IAAxB6C,EAAuB,SACzBH,EAAQ9D,SAASiE,IAAQL,EAAW5D,SAASiE,IAChDH,EAAQrE,KAAKwE,IAlBwB,kFAqBzCH,EAAQL,MAAK,SAACC,EAAGC,GAAJ,OAAUC,EAAWM,QAAQR,GAAKE,EAAWM,QAAQP,MAClEE,EAAcpE,KAAK,CACjB2B,KAAM0C,EACN9C,UAAW+C,EAAU/C,UACrBC,QAAS8C,EAAU9C,UAErB6C,EAAU,MAEZN,EAAM7C,WAAakD,KAIrB,IAAMM,GADNf,EAAaA,EAAWK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEU,aAAeT,EAAES,iBAC9B9D,KAAI,SAAA+D,GAAK,OAAIA,EAAM1D,WAAWD,UAE1D,MAAO,CACL4D,MAAOlB,EAAW9C,KAAI,SAAC+D,EAAO7E,GAAR,OAAc6D,OAAO,CAAE5C,KAAM4D,EAAM5D,KAAMnB,OAAQ6E,EAAS3E,GAAK,OACrF+E,UAAWnB,EAAW9C,KAAI,SAAC+D,EAAO7E,GAAR,OAAc6D,OAAO,CAAE/B,SAAU+C,EAAM/C,SAAUhC,OAAQ6E,EAAS3E,GAAK,OACjGgF,MAAOpB,EAAW9C,KAAI,SAAC+D,EAAO7E,GAAR,OAAc6D,OAAO,CAAE9B,KAAM8C,EAAM9C,KAAMjC,OAAQ6E,EAAS3E,GAAK,OACrFiF,MAAOrB,EAAW9C,KAAI,SAAC+D,GAAD,OAAWA,EAAM1D,eA0BpC+D,CAAiBtC,EAAEQ,cACpBa,MAAK,SAACC,EAAGC,GACX,IAAMgB,EAAejB,EAAErB,QAAQlB,MAAM,KAAK,GACpCyD,EAAejB,EAAEtB,QAAQlB,MAAM,KAAK,GAC1C,OAAIO,GAAaiD,KAAkBjD,GAAakD,GACvClB,EAAErB,QAAQwC,cAAclB,EAAEtB,SAE1BX,GAAaiD,GAAgBjD,GAAakD,MAI/CE,EAAcC,aAAoBnD,EAAUC,GAE5CmD,EAAUlD,EAAaxB,KAAI,SAAA4B,GAC/B,MAAO,CACL+C,MAAOC,YAAehD,GACtBiD,OAAQ,kBACN,oCACE,kBAACrG,GAAD,KACE,kBAACsG,EAAA,EAAD,CACEC,QAAS1F,GACT2F,KAAMnD,EAAoBoD,QAAO,SAAAC,GAAC,OAAIA,EAAEtD,OAASA,QAGrD,kBAACpD,GAAD,KACE,kBAACI,GAAD,oBACA,kBAACuG,GAAA,EAAD,CAAgBC,QAASZ,EAAaa,aAAa,WAO7D,OACE,oCACE,kBAAC5H,GAAD,KACE,kBAAC6H,EAAA,EAAD,CACEC,mBAAoB,EACpBb,QAASA,EACTc,eAAgB,OAGnBd,EAAQtE,OAAS,GAAK,kBAACqF,GAAA,EAAD,Q,6oBCpLtB,IAAMC,GAAsBnL,IAAOC,IAAV,KAC9BmL,YAAK,aACLC,IACAC,KAIWvG,GAAS/E,IAAOC,IAAV,KACfqE,KAISiH,GAAavL,IAAOC,IAAV,MAQVuL,GAAaxL,YAAO+D,KAAP/D,CAAH,KACnBoB,KACO,qBAAGlB,MAAkB2K,WAGnBY,GAAWzL,IAAOC,IAAV,KACjBmB,KACO,qBAAGlB,MAAkBwL,UAGnBC,GAAa3L,IAAOC,IAAV,KACnBmB,KACO,qBAAGlB,MAAkBwD,SCoCjBkI,GA1DM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,SAAU9E,EAAiB,EAAjBA,WA4BzC,OACE,kBAACmE,GAAD,KACE,kBAACpG,GAAD,eAAY5C,YAAgB6E,GAA5B,mBACG6E,EACC,kBAACF,GAAD,KA/Bc,WACpB,IAAKE,EACH,MAAO,GAST,IAAME,GAFNF,GADAA,GADAA,GADAA,GADAA,EAAUA,EAAQG,QAAQ,WAAY,MACpBA,QAAQ,UAAW,MACnBA,QAAQ,UAAW,MACnBA,QAAQ,aAAc,OACtBA,QAAQ,aAAc,MAEd1F,MAAM2F,KAC1BC,EAAUL,EAAQM,MAAMF,KAE9B,OAAIF,EAAUlG,QAAU,EACfgG,EAGFE,EAAU7E,QAAO,SAACkF,EAAKC,EAASC,GAAf,OAA0BJ,EAAQI,GAAR,uBAC7CF,GAD6C,CAEhDC,EACA,kBAACb,GAAD,CAAY7E,GAAI4F,aAAmBL,EAAQI,IAASzH,IAAKyH,GAAzD,UACMnK,YAAgB+J,EAAQI,QAJkB,uBAM1CF,GAN0C,CAMrCC,MAAW,IAQfG,IAGH,kBAACjB,GAAD,KACE,kBAACE,GAAD,0BAGN,6BACA,kBAAC1G,GAAD,eAAY5C,YAAgB6E,GAA5B,cACC8E,EAASrG,KAAI,SAACgH,EAAS9G,GAAV,OACZ,kBAAC4F,GAAD,CAAY1G,IAAKc,GACf,kBAAC6F,GAAD,CAAY7E,GAAI4F,aAAmBE,EAAQC,cAActK,OAAzD,UACMD,YAAgBsK,EAAQC,cAActK,MAD5C,cACuDqK,EAAQC,cAAchK,WAI5D,IAApBoJ,EAASjG,QACR,kBAAC0F,GAAD,KACE,kBAACE,GAAD,mB,8BC7DJkB,GAAsB,SAAAlC,GAC1B,IAAKA,EACH,MAAO,CACLmC,cAAe,GACfC,cAAe,GACfC,kBAAmB,GACnBC,gBAAiB,IAIrB,IAAMH,EAAgBnC,EAAKuC,OAAOvH,KAAI,SAAAwH,GAAC,MAAK,CAC1CxK,GAAIwK,EAAExK,GACNyK,QAASD,EAAEE,gCAAgCxL,UAAUK,MACrDoL,aAAcH,EAAEI,sBAAsB5H,KAAI,SAAA6H,GAAI,OAAIC,OAAOD,EAAKE,YAC9DR,OAAQC,EAAEQ,eACVC,OAAQT,EAAES,OACVC,KAAMV,EAAEU,KACRC,WAAYX,EAAEW,WACdC,WAAYZ,EAAEY,WACdC,QAAS,CACPC,OAAQd,EAAElL,cACViM,KAAMf,EAAEnL,YACRD,MAAkB,MAAXoL,EAAEpL,OAEX6E,KAAMuG,EAAEvG,KAAOuG,EAAEvG,KAAKhE,KAAO,OAGzBmK,EAAgBpC,EAAKuC,OAAO9F,QAAO,SAAC+G,EAAUC,GAClD,IAAIC,EACAC,GAAkB,EAEtB,IAAKF,EAAQxH,OAASwH,EAAQG,aAC5B,OAAOJ,EALqD,2BAQ9D,YAAcA,EAAd,+CAAwB,CAAC,IAAhBtJ,EAAe,QACtB,GAAIuJ,EAAQxH,MAAQwH,EAAQxH,KAAKhE,OAASiC,EAAEjC,KAAM,CAChDyL,EAAaxJ,EACbyJ,GAAkB,EAClB,QAZ0D,kFAyC9D,OA1BKA,IACHD,EAAa,CACX1L,GAAIyL,EAAQxH,KAAOwH,EAAQxH,KAAKjE,GAAK,EACrCL,KAAM8L,EAAQxH,KAAOwH,EAAQxH,KAAKtE,KAAO,GACzCM,KAAMwL,EAAQxH,KAAOwH,EAAQxH,KAAKhE,KAAO,GACzCb,MAAOqM,EAAQxH,KACXwH,EAAQxH,KAAKhF,kBAAkBC,UAAUC,IAAIC,MAC7C,EACJyM,QAAS,IAEXL,EAASrJ,KAAKuJ,IAEhBA,EAAWG,QAAQ1J,KAAK,CACtBnC,GAAIyL,EAAQzL,GACZyK,QAASgB,EAAQK,8BAA8B5M,UAAUK,MACzDoL,aAAcc,EAAQM,oBAAoB/I,KAAI,SAAA6H,GAAI,OAAIC,OAAOD,EAAKE,YAClER,OAAQkB,EAAQG,aAChBX,OAAQQ,EAAQR,OAChBC,KAAMO,EAAQP,KACdC,WAAYM,EAAQN,WACpBC,WAAYK,EAAQL,WACpBC,QAAS,CACPW,MAAOP,EAAQQ,WACfC,SAAUT,EAAQU,iBAGfX,IACN,IAEGnB,EAAoBrC,EAAKuC,OAAO9F,QAAO,SAAC+G,EAAUjB,GAItD,OAHIA,EAAOtG,OAASuH,EAAS9I,SAAS6H,EAAOtG,KAAKhE,OAChDuL,EAASrJ,KAAKoI,EAAOtG,KAAKhE,MAErBuL,IACN,IAEGlB,EAAkBF,EAAcpH,KAAI,SAAAoJ,GAAG,OAAIA,EAAInM,QAErD,MAAO,CACLkK,gBACAC,gBACAC,oBACAC,oBAwBW+B,GAXiB,SAAAvM,GAAiB,IAAD,EACpBwM,mBAASpC,GAAoBpK,IADT,mBACvCyM,EADuC,KAChCC,EADgC,KAQ9C,MAAO,CAACD,EALS,SAAAE,GACf,IAAMC,EAbc,SAACC,EAAcF,GACrC,OAAQA,EAAOG,MACb,IA7F8B,qBA8F5B,OAAO1C,GAAoBuC,EAAOI,SACpC,QACE,OAAOF,GAQQG,CAAgBP,EAAOE,GACxCD,EAASE,M,muGC/FN,IAAMK,GAAsBxP,IAAOC,IAAV,MAKnBwP,GAA6BzP,IAAOC,IAAV,MAK1ByP,GAAoB1P,IAAOC,IAAV,KAC1BM,YAAW,SAAXA,CAD0B,OAMjBoP,GAAwB3P,IAAOC,IAAV,KAK9BM,YAAW,SAAU,SAArBA,CAL8B,OAWrBqP,GAAuB5P,IAAOC,IAAV,KAM7BM,YAAW,SAAU,SAArBA,CAN6B,OAapBsP,GAA2B7P,IAAOC,IAAV,KAKjCM,YAAW,SAAU,SAArBA,CALiC,MAON,qBAAGL,MAAkB4P,WAKvCC,GAAoB/P,IAAOC,IAAV,KAC1BqL,KAIS0E,GAA2BhQ,IAAOC,IAAV,MACrB,qBAAGC,MAAkBe,SAKjCV,YAAW,SAAXA,CANiC,OAWxB0P,GAA8BjQ,IAAOC,IAAV,KACpCmL,YAAK,KACLC,KAIS6E,GAAalQ,IAAOC,IAAV,KAMnBM,YAAW,SAAU,SAArBA,CANmB,OAcV4P,GAAWnQ,YAAO+D,KAAP/D,CAAH,KACjBgB,KACO,qBAAGd,MAAkB8D,aAE5BzD,YAAW,SAAU,SAArBA,CAJiB,OASR6P,GAAkBpQ,IAAOC,IAAV,KAIxBM,YAAW,SAAU,SAArBA,CAJwB,OASf8P,GAAmBrQ,IAAOC,IAAV,KACzBW,IAEAL,YAAW,SAAU,SAArBA,CAHyB,OAQhB+P,GAAwBtQ,IAAOC,IAAV,KAC9BmB,IAIAb,YAAW,SAAU,SAArBA,CAL8B,OAUrBgQ,GAAyBvQ,IAAOC,IAAV,MACnB,qBAAGC,MAAkBsQ,UASxBC,GAAsBzQ,IAAOC,IAAV,KAC5BqL,K,wRClGJ,IAAMoF,GAAsB,SAAC,GAQtB,IAPLpC,EAOI,EAPJA,QACApO,EAMI,EANJA,MACAyQ,EAKI,EALJA,WACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,wBACAC,EACI,EADJA,oBACI,EAC8ChC,oBAAS,GADvD,mBACGiC,EADH,KACsBC,EADtB,KAGEC,EAAgBC,mBAAQ,kBAAM7C,EAAQ1F,MAAK,SAACC,EAAGC,GACnD,IAAMsI,EAAWC,KAAOvI,EAAE8E,YAAY0D,OAAO,YAAcD,KAAOxI,EAAE+E,YAAY0D,OAAO,YACvF,OAAsB,IAAfX,EACLS,EAAWtI,EAAEoE,UAAYrE,EAAEqE,QAAUkE,EAAWtI,EAAEoE,QAAUrE,EAAEqE,WAC/DxC,QAAO,SAAC6G,EAAG5M,GACZ,OAAOqM,GAAqBrM,EAAI6M,QAC/B/L,KAAI,SAACuH,GAAD,OACL,kBAACyE,GAAA,EAAD,CAAQ5M,IAAKmI,EAAOvK,GAAIuK,OAAQA,EAAQ0E,gBAAc,SACpD,CAACpD,EAAS0C,EAAmBL,IAEjC,OACE,kBAAClB,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACG,GAAD,kBACA,kBAAC4B,GAAA,EAAD,CACErO,MAAOpD,EAAM0R,QACbC,cAAelB,EACfmB,QAAS,CAAC,cAAe,gBACzBC,SAAU,SAAA7M,GAAK,OAAI0L,EAAc1L,OAGrC,kBAAC0K,GAAD,KACE,kBAACG,GAAD,8BACA,kBAAC4B,GAAA,EAAD,CACErO,MAAOpD,EAAM8D,WACb6N,cAAehB,EACfiB,QAAShB,EACTiB,SAAU,SAAA7M,GAAK,OAAI6L,EAAoB7L,QAI5CgM,GAEF5C,EAAQzI,OAAS2L,MAChB,kBAACjB,GAAD,CACEyB,QAAS,kBAAMf,GAAsBD,KAErC,kBAACP,GAAD,KACGO,EAAiB,uCAEF1C,EAAQzI,OAFN,gBAiCxBoM,GAAoB,SAAC,GAA2C,IAAzCpF,EAAwC,EAAxCA,cAAeqF,EAAyB,EAAzBA,mBAAyB,EACjBnD,mBAAS,IADQ,mBAC5DoD,EAD4D,KACzCC,EADyC,KAG7DC,EAAalB,mBAAQ,kBAAMtE,EAAcpH,KAAI,SAACiB,EAAMf,GAAP,OACjD,kBAACsK,GAAD,CAA6BpL,IAAKc,GAChC,kBAAC+J,GAAD,KACE,kBAACQ,GAAD,KACE,kBAACC,GAAD,CAAUxJ,GAAIC,aAAiBF,EAAKtE,OAAQsE,EAAKhE,MACjD,kBAAC0N,GAAD,KACE,kBAACC,GAAD,KACGiC,KAAKC,MAAmB,IAAb7L,EAAK7E,OADnB,KAGA,kBAACyO,GAAD,+BAKH5J,EAAK4H,QAAQ1F,MAAK,SAACC,EAAGC,GACrB,OAAOuI,KAAOvI,EAAE8E,YAAY0D,OAAO,YAAcD,KAAOxI,EAAE+E,YAAY0D,OAAO,eAC5E5G,QAAO,SAAC6G,EAAG5M,GACZ,OAAOA,EAAI6M,MAAqBW,EAAkBzL,EAAKhE,SACtD+C,KAAI,SAACuH,EAAQrI,GAAT,OACL,kBAAC8M,GAAA,EAAD,CAAQ5M,IAAKF,EAAGqI,OAAQA,EAAQ0E,gBAAgB,QAGnDhL,EAAK4H,QAAQzI,OAAS2L,MACrB,kBAACjB,GAAD,CACEyB,QAAS,kBACPI,E,2VAAqB,IAChBD,EADe,eAEjBzL,EAAKhE,MAAQyP,EAAkBzL,EAAKhE,WAIzC,kBAAC+N,GAAD,KACG0B,EAAkBzL,EAAKhE,MAAvB,uCAEegE,EAAK4H,QAAQzI,OAF5B,oBAOP,CAACgH,EAAesF,IAEpB,OACE,kBAACnC,GAAD,KACGkC,EACAG,IA+KQG,eAAUC,aA/ID,SAAAzD,GAAK,MAAK,CAChC0D,iBAAkBC,aAAoB3D,MA8IfyD,EA3IH,SAAC,GAA2C,IAAzCjQ,EAAwC,EAAxCA,SAAUtC,EAA8B,EAA9BA,MAAOwS,EAAuB,EAAvBA,iBAAuB,EACrCE,YAASC,KAAmB,CACpDC,UAAW,CAAErQ,GAAID,KADXuQ,EADuD,EACvDA,QAAStI,EAD8C,EAC9CA,KAD8C,EAI3BsE,mBAAS,GAJkB,mBAIxD4B,EAJwD,KAI5CC,EAJ4C,OAKf7B,mBAAS,GALM,mBAKxD8B,EALwD,KAKtCE,EALsC,OAMfhC,mBAAS,GANM,mBAMxDiE,EANwD,KAMtCC,EANsC,OAOXlE,oBAAS,GAPE,mBAOxDmE,EAPwD,KAOpCC,EAPoC,OAQpBrE,GAAwBrE,GARJ,mBAQxD2I,EARwD,KAQvCC,EARuC,KAoB/D,GAVAC,qBAAU,WACJ7I,GACF4I,EAAgB,CACdhE,KFnO0B,qBEoO1BC,QAAS7E,MAIZ,CAACA,IAEAsI,EACF,OACE,kBAACvD,GAAD,KACE,kBAAC+D,GAAA,EAAD,OAKN,IAAMzC,EAAuB,CAC3B,uBAD2B,oBAExBsC,EAAgBtG,oBAGf0G,EAAsBJ,EAAgBxG,cAAclC,QACxD,SAAAsC,GAAM,OACiB,IAArB6D,GACA7D,EAAOtG,OAASoK,EAAwBD,MAGtC4C,EAAqB,CACzB,uBADyB,oBAEtBL,EAAgBrG,kBAGf2G,EAAoBN,EAAgBvG,cAAcnC,QACtD,SAAAsC,GAAM,OACiB,IAArBgG,GACAhG,EAAOtK,OAAS+Q,EAAsBT,MAGpCW,EAAiBD,EAAkBxM,QAAO,SAAC0M,EAAOxM,GAEtD,OADAwM,GAASxM,EAAKkH,QAAQzI,SAErB,GAEGqM,EACJ,kBAACrC,GAAD,KACE,kBAACE,GAAD,8BACA,kBAAC4B,GAAA,EAAD,CACErO,MAAOpD,EAAM8D,WACb6N,cAAemB,EACflB,QAAS2B,EACT1B,SAAU,SAAA7M,GAAK,OAAI+N,EAAoB/N,OAKvCiF,EAAU,CACd,CACEC,MAAM,mBAAD,OAAqBoJ,EAAoB3N,OAAzC,KACLyE,OAAQ,kBACN,kBAAC,GAAD,CACEgE,QAASkF,EACTtT,MAAOA,EACPyQ,WAAYA,EACZC,cAAeA,EACfC,iBAAkBA,EAClBC,wBAAyBA,EACzBC,oBAAqBA,KAGzBiB,QAAS,kBAAMmB,GAAsB,KAEvC,CACE/I,MAAM,sBAAD,OAAwBuJ,EAAxB,KACLrJ,OAAQ,kBAAM4H,GACdF,QAAS,kBAAMmB,GAAsB,MAIzC,OACE,kBAAC3D,GAAD,KACGkD,GACC,kBAAC3H,EAAA,EAAD,CACEZ,QAASA,EACTa,mBAAoB,EACpBC,eAAe,MAGlBiI,GAAsBR,GACrB,kBAAC,GAAD,CACE7F,cAAe6G,EACfxB,mBAAoBQ,EAAmB,KAAOR,KAGhDQ,GACA,oCACE,kBAACmB,GAAA,EAAD,CACEzJ,MAAK,2BAAsBK,EAAKqJ,wBAAwBnS,UAAUK,MAA7D,MAEL,kBAAC,GAAD,CACEsM,QAASkF,EACTtT,MAAOA,EACPyQ,WAAYA,EACZC,cAAeA,EACfC,iBAAkBA,EAClBC,wBAAyBA,EACzBC,oBAAqBA,KAGzB,kBAAC8C,GAAA,EAAD,CACEzJ,MAAK,8BAAyBK,EAAKsJ,sBAAsBpS,UAAUK,MAA9D,MAEL,kBAAC,GAAD,CACE6K,cAAe6G,EACfxB,mBAAoBA,W,snDCvU3B,IAAM8B,GAAoBhU,IAAOC,IAAV,KAC1BgU,KAGSC,GAAgBlU,IAAOC,IAAV,KACtBQ,KAKS0T,GAAUnU,IAAOC,IAAV,KAChBmU,IAEA7T,YAAW,SAAU,SAArBA,CAHgB,OAUP8T,GAAUrU,IAAOC,IAAV,KAChBqU,IAEA/T,YAAW,SAAU,SAArBA,CAHgB,OASPgU,GAA2BvU,IAAOC,IAAV,MAMxBuU,GAA0BxU,IAAOC,IAAV,KAChCmL,YAAK,QACLC,IAMA9K,YAAW,SAAU,SAArBA,CARgC,OAavBkU,GAA8BzU,IAAOC,IAAV,KAKpCM,YAAW,SAAU,SAArBA,CALoC,OAa3BmU,GAA2B1U,IAAOC,IAAV,KACjCqE,IAGA/D,YAAW,SAAU,SAArBA,CAJiC,O,kBC7B/BoU,GAAoB,SAAC,GAOpB,IANLnT,EAMI,EANJA,OACAC,EAKI,EALJA,YACAmT,EAII,EAJJA,WACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,WACApC,EACI,EADJA,iBAEMqC,EAAWC,cADb,EAE0CjG,oBAAS,GAFnD,mBAEGkG,EAFH,KAEoBC,EAFpB,KAQJ,OACE,oCACE,kBAAC,EAAD,CACE1T,OAAQA,EACRC,YAAaA,IAEf,kBAACyS,GAAD,KACE,kBAACC,GAAD,KACE,kBAACI,GAAD,KACE,kBAAC,GAAD,CAAgBxN,SAAUvF,EAAOuF,SAAUC,WAAYxF,EAAOY,SAC3D0S,GAAcD,IAAoB,kBAACL,GAAD,KACnC,kBAACC,GAAD,KACE,kBAACC,GAAD,6BACwBvS,YAAgBX,EAAOY,MAD/C,KAGA,kBAAC+S,GAAA,EAAD,CACEnO,WAAYxF,EAAOY,KACnBI,SAAUhB,EAAOiB,GACjB2S,OAAQR,EAAaA,EAAWS,QAAU,KAC1C9S,aAAcqS,EAAaA,EAAW/S,MAAQ,QAGlD,kBAACyT,GAAA,EAAD,CACEC,MAAO7C,EAAmB,cAAgB,OAC1CnN,QAAQ,YACRiQ,YA7BY,WACxBV,EAAaI,GAAmB,GAAQH,EAASU,kBA8BpCb,EAAa,mBAAqB,qBAIzC,kBAAC,GAAD,CAAepS,SAAUhB,EAAOiB,MAElC,kBAAC4R,GAAD,KACE,kBAACqB,GAAD,CACE1O,WAAYxF,EAAOY,KACnByJ,QAASrK,EAAOqK,QAChBC,SAAUtK,EAAOmU,mBAIvB,kBAACC,GAAA,EAAD,CACEC,OAAQZ,EACRa,eAAgB,kBAAMZ,GAAmB,KAEzC,kBAACa,GAAA,EAAD,CACEC,WAAY,CAAC,CAAExU,OAAQA,EAAQwL,OAAQ4H,IACvCqB,SAAU,kBAAMf,GAAmB,SAuC9BgB,sBAAWzD,aA1GF,SAAAzD,GAAK,MAAK,CAChC0D,iBAAkBC,aAAoB3D,GACtC8F,WAAYqB,aAAcnH,MAwGFyD,EAhCP,SAAC,GAA6C,IAA3CtG,EAA0C,EAA1CA,MAAO2I,EAAmC,EAAnCA,WAAYpC,EAAuB,EAAvBA,iBACjC1L,EAAamF,EAAMiK,OAAOpP,WAAWqP,cACrCC,EAAQC,aAAiBzB,EAAY0B,gBAFmB,EAI7B5D,YAAS0D,EAAO,CAC/CxD,UAAW,CAAE1Q,KAAM4E,KADb+L,EAJsD,EAItDA,QAAS0D,EAJ6C,EAI7CA,MAAOhM,EAJsC,EAItCA,KAIxB,OAAOsI,EACL,kBAACiB,GAAD,KACE,kBAACT,GAAA,EAAD,QAEAkD,GAAUhM,GAASA,EAAKjJ,QAAiC,IAAvBiJ,EAAKjJ,OAAOqE,OAGhD,kBAACmO,GAAD,KACE,kBAAC,GAAD,CACExS,OAAQiJ,EAAKjJ,OAAO,GACpBoT,WAAYE,GAAcrK,EAAKuC,OAAOnH,OAAS,EAAI4E,EAAKuC,OAAO,GAAK,KACpE6H,mBAAiBC,GAAcrK,EAAKiM,kBAAkB7Q,OAAS,GAC/DpE,YAAaqT,GAAcrK,EAAKkM,eAAe9Q,OAAS,EACxDiP,WAAYA,EACZpC,iBAAkBA,KATtB,kBAACkE,GAAA,QAAD,CAAcC,KAAK","file":"static/js/10.b95de018.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/course_v1.3daa38cd.svg\";","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport CourseHeader from '../../../img/course_v1.svg';\n\n/* Mixins */\nimport {\n  Heading1,\n  Heading2,\n  Body,\n  PageContent,\n} from '../../../constants/Mixins';\n\nexport const CourseInfoHeaderWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 32px;\n  display: flex;\n  background-color: ${({ theme }) => theme.white};\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const CourseCodeAndNameSection = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  background-image: url(${CourseHeader});\n  background-color: ${({ theme }) => theme.primaryExtraDark};\n  background-size: cover;\n  position: relative;\n  min-height: 160px;\n  padding: 16px;\n\n  ${breakpoint('tablet')`\n    min-height: 320px;\n  `}\n`;\n\nexport const CourseCodeAndStar = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n\n  ${breakpoint('tablet')`\n    ${PageContent}\n    margin: 0 auto;\n  `}\n`;\n\nexport const StarAlignmentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${breakpoint('tablet')`\n    margin-left: 16px;\n  `}\n`;\n\nexport const CourseCode = styled.div`\n  ${Heading1}\n  color: white;\n  text-transform: uppercase;\n\n  ${breakpoint('mobile', 'tablet')`\n    margin-right: 16px;\n  `}\n\n  ${breakpoint('tablet')`\n    max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  `}\n`;\n\nexport const CourseNameWrapper = styled.div`\n  ${breakpoint('tablet')`\n    ${PageContent}\n    margin: 16px auto 0 auto;\n  `}\n`;\n\nexport const CourseName = styled.div`\n  ${Heading2}\n  color: ${({ theme }) => theme.light1};\n  font-weight: 400;\n\n  ${breakpoint('tablet')`\n    max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  `}\n`;\n\nexport const CourseDescriptionSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  position: relative;\n\n  ${breakpoint('tablet')`\n    ${PageContent}\n    padding-bottom: 48px;\n    margin: auto;\n  `}\n`;\n\nexport const Description = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.dark1};\n\n  ${breakpoint('mobile', 'tablet')`\n    margin-bottom: 16px;\n    padding: 0 16px;\n    min-width: 100%;\n  `}\n\n  ${breakpoint('tablet')`\n    margin-top: 48px;\n    max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  `}\n`;\n\nexport const RatingsSection = styled.div`\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n  `}\n\n  ${breakpoint('tablet')`\n    position: absolute;\n    right: 0;\n    bottom: 32px;\n  `}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  CourseInfoHeaderWrapper,\n  CourseCodeAndNameSection,\n  CourseDescriptionSection,\n  CourseCode,\n  CourseNameWrapper,\n  CourseName,\n  Description,\n  RatingsSection,\n  CourseCodeAndStar,\n  StarAlignmentWrapper,\n} from './styles/CourseInfoHeader';\n\n/* Child Components */\nimport RatingBox, {\n  RATING_BOX_WIDTH,\n} from '../../components/display/RatingBox';\nimport ShortlistStar from '../../components/input/ShortlistStar';\n\nimport { splitCourseCode } from '../../utils/Misc';\n\nconst CourseInfoHeader = ({ course, shortlisted }) => {\n  const { liked, course_easy, course_useful } = course.reviews_aggregate.aggregate.avg;\n  const { count, course_comment_count } = course.reviews_aggregate.aggregate;\n\n  return (\n    <CourseInfoHeaderWrapper>\n      <CourseCodeAndNameSection>\n        <CourseCodeAndStar>\n          <CourseCode ratingBoxWidth={RATING_BOX_WIDTH}>\n            {splitCourseCode(course.code)}\n          </CourseCode>\n          <StarAlignmentWrapper>\n            <ShortlistStar\n              size={36}\n              initialState={shortlisted}\n              courseID={course.id}\n            />\n          </StarAlignmentWrapper>\n        </CourseCodeAndStar>\n        <CourseNameWrapper>\n          <CourseName ratingBoxWidth={RATING_BOX_WIDTH}>\n            {course.name}\n          </CourseName>\n        </CourseNameWrapper>\n      </CourseCodeAndNameSection>\n      <CourseDescriptionSection>\n        <RatingsSection>\n          <RatingBox\n            numRatings={count}\n            numComments={course_comment_count}\n            percentages={[\n              {\n                displayName: 'Likes',\n                percent: liked,\n              },\n              {\n                displayName: 'Useful',\n                percent: course_useful / 5,\n              },\n              {\n                displayName: 'Easy',\n                percent: course_easy / 5,\n              },\n            ]}\n          />\n        </RatingsSection>\n        <Description ratingBoxWidth={RATING_BOX_WIDTH}>\n          {course.description}\n        </Description>\n      </CourseDescriptionSection>\n    </CourseInfoHeaderWrapper>\n  );\n};\n\nCourseInfoHeader.propTypes = {\n  course: PropTypes.object.isRequired,\n};\n\nexport default CourseInfoHeader;\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { Link } from 'react-router-dom';\nimport { LEC, LAB } from '../CourseScheduleTableColumns';\nimport { Heading3 } from '../../../constants/Mixins';\n\nexport const CourseScheduleWrapper = styled.div`\n  margin-bottom: 32px;\n`;\n\nexport const SectionCellWrapper = styled.div`\n  display: flex;\n  position: relative;\n  height: calc(\n    ${({ numRows }) => numRows}em + ${({ numRows }) => numRows * 4}px + 60px\n  );\n  height: 100%;\n  width: 100%;\n  align-items: flex-begin;\n  padding-left: 32px;\n`;\n\nexport const ColorBar = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 8px;\n  background-color: ${({ color, theme }) =>\n    color === LEC ? theme.dark1 : color === LAB ? theme.dark2 : theme.dark3};\n`;\n\nexport const NormalCellWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-begin;\n`;\n\nexport const SectionContentWrapper = styled.div`\n  margin: 18px 0 4px 0;\n  height: 1em;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  font-weight: 600;\n`;\n\nexport const ContentWrapper = styled.div`\n  margin: 4px 0;\n  height: 1em;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const InstructorLink = styled(Link)`\n  color: ${({ theme }) => theme.professors};\n  margin: 4px 0 4px 0;\n  height: 1em;\n`;\n\nexport const TableWrapper = styled.div`\n  overflow-x: auto;\n`;\n\nexport const EnrollmentText = styled.div`\n  color: ${({ theme, filled }) => filled ? theme.red : theme.dark2};\n`;\n\nexport const FinalExamsText = styled.div`\n  padding: 24px 32px 16px 32px;\n  ${Heading3}\n  color: ${({ theme }) => theme.dark1};\n\n  ${breakpoint('mobile', 'tablet')`\n    padding: 16px;\n  `}\n`;\n\nexport const SpaceMargin = styled.div`\n  margin-bottom: 8px;\n  content: '';\n`;","import React from 'react';\nimport {\n  SectionCellWrapper,\n  SectionContentWrapper,\n  NormalCellWrapper,\n  ContentWrapper,\n  InstructorLink,\n  ColorBar,\n  EnrollmentText,\n  SpaceMargin\n} from './styles/CourseSchedule';\nimport { getProfPageRoute } from '../../Routes';\nimport { processDateString } from '../../utils/Misc';\n\nexport const LEC = 'LEC';\nexport const LAB = 'LAB';\nexport const TUT = 'TUT';\n\nconst contentSpace = (spaces) => {\n  let content = [];\n  for (let i = 0; i < spaces; i++) {\n    content.push(<ContentWrapper key={i}></ContentWrapper>);\n  }\n  return content;\n}\n\nconst SectionCell = ({ cell }) => (\n  <SectionCellWrapper numRows={cell.value.numRows}>\n    <ColorBar\n      color={\n        cell.value.includes(LEC)\n          ? LEC\n          : cell.value.includes(LAB)\n          ? LAB\n          : TUT\n      }\n    />\n    <SectionContentWrapper>{cell.value}</SectionContentWrapper>\n  </SectionCellWrapper>\n);\n\nconst ClassCell = ({ cell }) => (\n  <NormalCellWrapper>{cell.value}</NormalCellWrapper>\n);\n\nconst EnrolledCell = ({ cell }) => {\n  return (\n    <NormalCellWrapper>\n      <EnrollmentText filled={cell.value.filled >= cell.value.capacity}>\n        {cell.value.filled}/{cell.value.capacity}\n      </EnrollmentText>\n    </NormalCellWrapper>\n  );\n}\n\nconst CampusCell = ({ cell }) => (\n  <NormalCellWrapper>{cell.value}</NormalCellWrapper>\n);\n\nconst TimeCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, idx) => (\n        <>\n          <ContentWrapper key={idx}>\n            {cl.time}\n          </ContentWrapper>\n          {contentSpace(cl.spaces)}\n          {idx < cell.value.length - 1 && <SpaceMargin />}\n        </>\n    ))}\n  </NormalCellWrapper>\n);\n\nconst DateCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((timeRanges, timeRangeIdx) => {\n      let timeRangeContent = timeRanges.map((date, idx) => {\n        const processedDate = date.startDate === date.endDate ?\n          processDateString(date.startDate).split(', ')[1] : '';\n        return (\n          <ContentWrapper key={idx}>\n            {date.days.join(' ')} {processedDate}\n          </ContentWrapper>\n        );\n      });\n      if (timeRangeIdx < cell.value.length - 1) {\n        timeRangeContent.push(<SpaceMargin />);\n      }\n      return timeRangeContent;\n    })}\n  </NormalCellWrapper>\n);\n\nconst LocationCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, idx) => (\n      <>\n        <ContentWrapper key={idx}>\n          {cl.location}\n        </ContentWrapper>\n        {contentSpace(cl.spaces)}\n        {idx < cell.value.length - 1 && <SpaceMargin />}\n      </>\n    ))}\n  </NormalCellWrapper>\n);\n\nconst InstructorCell = ({ cell }) => (\n  <NormalCellWrapper>\n    {cell.value.map((cl, idx) => cl.prof.code ?\n      (\n        <>\n          <InstructorLink\n            to={getProfPageRoute(cl.prof.code)}\n            key={idx}\n          >\n            {cl.prof.name}\n          </InstructorLink>\n          {contentSpace(cl.spaces)}\n          {idx < cell.value.length - 1 && <SpaceMargin />}\n        </>\n      ) : (\n        <>\n          {contentSpace(cl.spaces + 1)}\n          {idx < cell.value.length - 1 && <SpaceMargin />}\n        </>\n      )\n    )}\n  </NormalCellWrapper>\n);\n\nexport const courseScheduleTableColumns = [\n  {\n    Header: 'Section',\n    Cell: SectionCell,\n    accessor: 'section',\n    maxWidth: 96,\n    style: {\n      padding: 0,\n    },\n  },\n  {\n    Header: 'Class',\n    Cell: ClassCell,\n    accessor: 'class',\n    maxWidth: 48,\n    style: {\n      'verticalAlign': 'top',\n    },\n  },\n  {\n    Header: 'Enrolled',\n    Cell: EnrolledCell,\n    accessor: 'enrolled',\n    maxWidth: 96,\n    style: {\n      'verticalAlign': 'top',\n    },\n  },\n  {\n    Header: 'Time',\n    Cell: TimeCell,\n    accessor: 'times',\n    maxWidth: 136,\n  },\n  {\n    Header: 'Date',\n    Cell: DateCell,\n    accessor: 'dates',\n    maxWidth: 104,\n  },\n  {\n    Header: 'Location',\n    Cell: LocationCell,\n    accessor: 'locations',\n    maxWidth: 72,\n  },\n  {\n    Header: 'Instructor',\n    Cell: InstructorCell,\n    accessor: 'profs',\n    maxWidth: 160\n  },\n  {\n    Header: 'Campus',\n    Cell: CampusCell,\n    accessor: 'campus',\n    maxWidth: 80\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport TabContainer from '../../components/display/TabContainer';\nimport Table from '../../components/display/Table';\nimport FinalExamTable from '../../components/common/FinalExamTable';\nimport LastUpdatedSchedule from '../../components/common/LastUpdatedSchedule';\nimport { courseScheduleTableColumns } from './CourseScheduleTableColumns';\n\n/* Styled Components */\nimport {\n  CourseScheduleWrapper,\n  TableWrapper,\n  FinalExamsText\n} from './styles/CourseSchedule';\n\n/* Utils */\nimport { termCodeToDate, secsToTime } from '../../utils/Misc';\nimport { processSectionExams } from '../../utils/FinalExams';\n\nconst sectionOrder = {\n  'LEC': 0,\n  'LAB': 1,\n  'TUT': 2\n};\n\n/*\n* We first group the data by time of day range (start and end time) Now, each group should have\n* a time of day range, location, instructor, and all the more specific 'timeranges' the classes occur in.\n* Each timerange contains days of the week the class occurs as well as the start and end dates\n* of the weeks that timerange applies. We assume that, if the start and end dates are the same,\n* the time range is valid for the week beginning on that date and otherwise, the time range is\n* valid for the whole term. We order the timeranges for each grouping as follows:\n* the time range valid for the whole term, if it exists, comes first and everything else\n* is sorted by date.\n*/\n\nconst getInfoGroupings = meetings => {\n  let groupedByTimeOfDay = meetings.reduce((groupings, curr) => {\n    const key = `${curr.start_seconds} ${curr.end_seconds}`;\n\n    if (!groupings[key]) {\n      groupings[key] = {\n        time: `${secsToTime(curr.start_seconds)} - ${secsToTime(curr.end_seconds)}`,\n        location: curr.location,\n        prof: curr.prof\n          ? {\n              id: curr.prof.id,\n              code: curr.prof.code,\n              name: curr.prof.name,\n            }\n          : {},\n        timeRanges: [],\n      };\n    }\n\n    groupings[key].timeRanges.push({\n      days: curr.days,\n      startDate: curr.start_date,\n      endDate: curr.end_date,\n    });\n    return groupings;\n  }, {});\n\n  let infoGroups = [];\n\n  // Sort timeRanges for each group\n  Object.entries(groupedByTimeOfDay).forEach(entry => {\n    entry[1].timeRanges.sort((a, b) => a.startDate > b.startDate);\n    infoGroups.push(entry[1]);\n  });\n\n  // Merge and sort days of week for timeRanges that occur in the same date range\n  const daysOfWeek = ['M', 'T', 'W', 'Th', 'F', 'S', 'Su']; //not too sure about saturday and sunday\n  infoGroups.forEach(entry => {\n    let newTimeRanges = [];\n    let newDays = [];\n    entry.timeRanges.forEach((currRange, i) => {\n      if (i < entry.timeRanges.length - 1) {\n        const nextRange = entry.timeRanges[i + 1];\n        if (\n          currRange.startDate === nextRange.startDate &&\n          currRange.endDate === nextRange.endDate\n        ) {\n          for (let day of currRange.days) {\n            if (!newDays.includes(day)) {\n              newDays.push(day);\n            }\n          }\n          return;\n        }\n      }\n\n      for (let day of currRange.days) {\n        if (!newDays.includes(day) && daysOfWeek.includes(day)) {\n          newDays.push(day);\n        }\n      }\n      newDays.sort((a, b) => daysOfWeek.indexOf(a) - daysOfWeek.indexOf(b));\n      newTimeRanges.push({\n        days: newDays,\n        startDate: currRange.startDate,\n        endDate: currRange.endDate,\n      });\n      newDays = [];\n    });\n    entry.timeRanges = newTimeRanges;\n  });\n\n  infoGroups = infoGroups.sort((a, b) => a.startSeconds - b.startSeconds);\n  const numDates = infoGroups.map(group => group.timeRanges.length);\n\n  return {\n    times: infoGroups.map((group, i) => Object({ time: group.time, spaces: numDates[i] - 1})),\n    locations: infoGroups.map((group, i) => Object({ location: group.location, spaces: numDates[i] - 1})),\n    profs: infoGroups.map((group, i) => Object({ prof: group.prof, spaces: numDates[i] - 1})),\n    dates: infoGroups.map((group) => group.timeRanges),\n  };\n};\n\nconst CourseSchedule = ({ sections, courseCode }) => {\n  if (!sections || sections.length === 0) {\n    return null;\n  }\n  const termsOffered = sections.reduce((allTerms, curr) => {\n    if (!allTerms.includes(curr.term)) {\n      allTerms.push(curr.term);\n    }\n    return allTerms;\n  }, []);\n\n  const sectionsCleanedData = sections.map(s => ({\n    section: s.section,\n    campus: s.campus,\n    class: s.class_number,\n    term: s.term,\n    enrolled: {\n      filled: s.enrollment_total,\n      capacity: s.enrollment_capacity,\n    },\n    // Every grouping contains a single time of day, location, and instructor\n    // and the classes that occur with those parameters.\n    ...getInfoGroupings(s.meetings),\n  })).sort((a, b) => {\n    const sectionTypeA = a.section.split(' ')[0];\n    const sectionTypeB = b.section.split(' ')[0];\n    if (sectionOrder[sectionTypeA] === sectionOrder[sectionTypeB]) {\n      return a.section.localeCompare(b.section);\n    } else {\n      return sectionOrder[sectionTypeA] - sectionOrder[sectionTypeB];\n    }\n  });\n\n  const courseExams = processSectionExams(sections, courseCode);\n\n  const tabList = termsOffered.map(term => {\n    return {\n      title: termCodeToDate(term),\n      render: () => (\n        <>\n          <TableWrapper>\n            <Table\n              columns={courseScheduleTableColumns}\n              data={sectionsCleanedData.filter(c => c.term === term)}\n            />\n          </TableWrapper>\n          <TableWrapper>\n            <FinalExamsText>Final Exams</FinalExamsText>\n            <FinalExamTable courses={courseExams} includeCode={false} />\n          </TableWrapper>\n        </>\n      )\n    };\n  });\n\n  return (\n    <>\n      <CourseScheduleWrapper>\n        <TabContainer\n          initialSelectedTab={0}\n          tabList={tabList}\n          contentPadding={'0'}\n        />\n      </CourseScheduleWrapper>\n      {tabList.length > 0 && <LastUpdatedSchedule />}\n    </>\n  );\n};\n\nCourseSchedule.propTypes = {\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      campus: PropTypes.string,\n      class_number: PropTypes.number,\n      enrollment_capacity: PropTypes.number,\n      enrollment_total: PropTypes.number,\n      meetings: PropTypes.arrayOf(\n        PropTypes.shape({\n          days: PropTypes.arrayOf(PropTypes.string),\n          end_date: PropTypes.string,\n          end_seconds: PropTypes.number,\n          is_cancelled: PropTypes.bool,\n          is_closed: PropTypes.bool,\n          location: PropTypes.string,\n          prof: PropTypes.shape({\n            id: PropTypes.number,\n            name: PropTypes.string,\n          }),\n          start_date: PropTypes.string,\n          start_seconds: PropTypes.number,\n        }),\n      ),\n      section: PropTypes.string,\n      term: PropTypes.number,\n    }),\n  ),\n};\n\nexport default CourseSchedule;\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nimport { Card, BoxShadow, Heading4, Heading3, Body } from '../../../constants/Mixins';\n\nexport const ExtraInfoBoxWrapper = styled.div`\n${Card('32px 24px')}\n${BoxShadow}\n${Heading4}\nmargin-bottom: 32px;\n`;\n\nexport const Header = styled.div`\n  ${Heading3}\n  margin-bottom: 16px;\n`;\n\nexport const LineOfText = styled.div`\n  margin-bottom: 16px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CourseText = styled(Link)`\n  ${Body}\n  color: ${({ theme }) => theme.courses};\n`;\n\nexport const GreyText = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.light4};\n`;\n\nexport const PrereqText = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.dark3};\n`;\n\n","import React from 'react';\n\n/* Styled Components */\nimport { \n  Header,\n  LineOfText,\n  CourseText,\n  GreyText,\n  PrereqText,\n  ExtraInfoBoxWrapper\n} from './styles/CourseRequisites';\n\nimport { splitCourseCode, COURSE_CODE_REGEX } from '../../utils/Misc';\nimport { getCoursePageRoute } from '../../Routes';\n\nconst ExtraInfoBox = ({ prereqs, postreqs, courseCode }) => {\n  const parsedPrereqs = () => {\n    if (!prereqs) {\n      return '';\n    }\n\n    prereqs = prereqs.replace(/\\s{2,}/gi, ' ');\n    prereqs = prereqs.replace(/\\(\\s*/gi, '(');\n    prereqs = prereqs.replace(/\\s*\\)/gi, ')');\n    prereqs = prereqs.replace(/\\s*\\\\\\s*/gi, '\\\\');\n    prereqs = prereqs.replace(/\\s*\\/\\s*/gi, '/');\n\n    const splitText = prereqs.split(COURSE_CODE_REGEX);\n    const matches = prereqs.match(COURSE_CODE_REGEX);\n\n    if (splitText.length <= 1) {\n      return prereqs;\n    }\n\n    return splitText.reduce((arr, element, index) => (matches[index] ? [\n      ...arr,\n      element,\n      <CourseText to={getCoursePageRoute(matches[index])} key={index}>\n        {`${splitCourseCode(matches[index])}`}\n      </CourseText>,\n    ] : [...arr, element]), []);\n  }\n\n  return (\n    <ExtraInfoBoxWrapper>\n      <Header>{`${splitCourseCode(courseCode)} prerequisites`}</Header>\n        {prereqs ? (\n          <PrereqText>\n            {parsedPrereqs()}\n          </PrereqText>\n        ) : (\n          <LineOfText>\n            <GreyText>No prerequisites</GreyText>\n          </LineOfText>\n        )}\n      <br />\n      <Header>{`${splitCourseCode(courseCode)} leads to`}</Header>\n      {postreqs.map((postreq, idx) => (\n        <LineOfText key={idx}>\n          <CourseText to={getCoursePageRoute(postreq.postrequisite.code)}>\n            {`${splitCourseCode(postreq.postrequisite.code)} - ${postreq.postrequisite.name}`}\n          </CourseText>\n        </LineOfText>\n      ))}\n      {postreqs.length === 0 && (\n        <LineOfText>\n          <GreyText>Nothing</GreyText>\n        </LineOfText>\n      )}\n    </ExtraInfoBoxWrapper>\n  );\n};\n\nexport default ExtraInfoBox;\n","import { useState } from 'react';\n\nexport const UPDATE_REVIEW_DATA = 'update_review_data';\nexport const SORT_COURSE_REVIEWS_BY_PROF = 'sort_by_prof';\n\nconst convertInputToState = data => {\n  if (!data) {\n    return {\n      courseReviews: [],\n      reviewsByProf: [],\n      courseReviewProfs: [],\n      profReviewProfs: [],\n    };\n  }\n\n  const courseReviews = data.review.map(r => ({\n    id: r.id,\n    upvotes: r.course_review_upvotes_aggregate.aggregate.count,\n    upvote_users: r.course_review_upvotes.map(vote => Number(vote.user_id)),\n    review: r.course_comment,\n    author: r.author,\n    user: r.user,\n    created_at: r.created_at,\n    updated_at: r.updated_at,\n    metrics: {\n      useful: r.course_useful,\n      easy: r.course_easy,\n      liked: r.liked != null,\n    },\n    prof: r.prof ? r.prof.name : '',\n  }));\n\n  const reviewsByProf = data.review.reduce((allProfs, current) => {\n    let profObject;\n    let foundProfObject = false;\n\n    if (!current.prof || !current.prof_comment) {\n      return allProfs;\n    }\n\n    for (let i of allProfs) {\n      if (current.prof && current.prof.name === i.name) {\n        profObject = i;\n        foundProfObject = true;\n        break;\n      }\n    }\n    if (!foundProfObject) {\n      profObject = {\n        id: current.prof ? current.prof.id : 0,\n        code: current.prof ? current.prof.code : '',\n        name: current.prof ? current.prof.name : '',\n        liked: current.prof\n          ? current.prof.reviews_aggregate.aggregate.avg.liked\n          : 0,\n        reviews: [],\n      };\n      allProfs.push(profObject);\n    }\n    profObject.reviews.push({\n      id: current.id,\n      upvotes: current.prof_review_upvotes_aggregate.aggregate.count,\n      upvote_users: current.prof_review_upvotes.map(vote => Number(vote.user_id)),\n      review: current.prof_comment,\n      author: current.author,\n      user: current.user,\n      created_at: current.created_at,\n      updated_at: current.updated_at,\n      metrics: {\n        clear: current.prof_clear,\n        engaging: current.prof_engaging,\n      },\n    });\n    return allProfs;\n  }, []);\n\n  const courseReviewProfs = data.review.reduce((allProfs, review) => {\n    if (review.prof && !allProfs.includes(review.prof.name)) {\n      allProfs.push(review.prof.name);\n    }\n    return allProfs;\n  }, []);\n\n  const profReviewProfs = reviewsByProf.map(obj => obj.name);\n\n  return {\n    courseReviews,\n    reviewsByProf,\n    courseReviewProfs,\n    profReviewProfs,\n  };\n};\n\nconst processDispatch = (currentState, action) => {\n  switch (action.type) {\n    case UPDATE_REVIEW_DATA:\n      return convertInputToState(action.payload);\n    default:\n      return currentState;\n  }\n};\n\nconst useCourseReviewsReducer = initialState => {\n  const [state, setState] = useState(convertInputToState(initialState));\n\n  const dispatch = action => {\n    const newState = processDispatch(state, action);\n    setState(newState);\n  };\n\n  return [state, dispatch];\n};\n\nexport default useCourseReviewsReducer;\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  Heading1,\n  Heading4,\n  Heading2,\n  Body,\n  BoxShadow,\n} from '../../../constants/Mixins';\n\nexport const CourseReviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseCourseReviewsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ReviewListWrapper = styled.div`\n  ${breakpoint('tablet')`\n    padding: 32px 32px 0 32px;\n  `}\n`;\n\nexport const ReviewsOptionsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    flex-direction: column;\n    margin: 16px;\n  `}\n`;\n\nexport const DropdownPanelWrapper = styled.div`\n  display: flex;\n  margin-right: 32px;\n  margin-bottom: 8px;\n  align-items: center;\n\n  ${breakpoint('mobile', 'tablet')`\n    :last-child{\n      margin-bottom: 16px;\n    }\n  `}\n`;\n\nexport const ProfDropdownPanelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    padding: 24px 16px;\n    border-bottom: 1px solid ${({ theme }) => theme.light2};\n    background-color: white;\n  `}\n`;\n\nexport const DropdownTableText = styled.div`\n  ${Heading4}\n  white-space: nowrap;\n`;\n\nexport const CourseProfReviewsWrapper = styled.div`\n  background: ${({ theme }) => theme.light1};\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  ${breakpoint('tablet')`\n    margin-top: 32px;\n  `}\n`;\n\nexport const ReviewsForSingleProfWrapper = styled.div`\n  ${Card('0')}\n  ${BoxShadow}\n  margin-bottom: 32px;\n`;\n\nexport const ProfHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 32px;\n  align-items: center;\n\n  ${breakpoint('mobile', 'tablet')`\n    flex-direction: column;\n    justfiy-content: flex-start;\n    align-items: flex-start;\n    margin-bottom: 16px;\n  `}\n`;\n\nexport const ProfName = styled(Link)`\n  ${Heading2}\n  color: ${({ theme }) => theme.professors}\n\n  ${breakpoint('mobile', 'tablet')`\n    margin: 16px;\n  `}\n`;\n\nexport const ProfLikedMetric = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${breakpoint('mobile', 'tablet')`\n    margin: 8px 16px 16px 16px;\n  `}\n`;\n\nexport const ProfLikedPercent = styled.div`\n  ${Heading1}\n\n  ${breakpoint('mobile', 'tablet')`\n    font-size: 32px;\n  `}\n`;\n\nexport const ProfLikedPercentLabel = styled.div`\n  ${Body}\n  width: 64px;\n  margin-left: 12px;\n\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n  `}\n`;\n\nexport const ShowMoreReviewsSection = styled.div`\n  background: ${({ theme }) => theme.light3};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  cursor: pointer;\n`;\n\nexport const ShowMoreReviewsText = styled.div`\n  ${Heading4}\n  cursor: pointer;\n`;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useQuery } from 'react-apollo';\nimport { withTheme } from 'styled-components';\nimport moment from 'moment';\n\n/* Constants */\nimport { MIN_REVIEWS_SHOWN } from '../../constants/PageConstants';\n\n/* Custom Hooks */\nimport useCourseReviewsReducer, {\n  UPDATE_REVIEW_DATA,\n} from '../../data/hooks/UseCourseReviewsReducer';\n\n/* Styled Components */\nimport {\n  CourseReviewWrapper,\n  CourseCourseReviewsWrapper,\n  CourseProfReviewsWrapper,\n  ReviewsForSingleProfWrapper,\n  ReviewListWrapper,\n  ReviewsOptionsWrapper,\n  DropdownPanelWrapper,\n  ProfDropdownPanelWrapper,\n  DropdownTableText,\n  ProfHeader,\n  ProfName,\n  ProfLikedMetric,\n  ProfLikedPercent,\n  ProfLikedPercentLabel,\n  ShowMoreReviewsSection,\n  ShowMoreReviewsText,\n} from './styles/CourseReviews';\n\n/* Child Components */\nimport TabContainer from '../../components/display/TabContainer';\nimport Review from '../../components/display/Review';\nimport DropdownList from '../../components/input/DropdownList';\nimport LoadingSpinner from '../../components/display/LoadingSpinner';\nimport CollapseableContainer from '../../components/display/CollapseableContainer';\n\n/* Selectors */\nimport { getIsBrowserDesktop } from '../../data/reducers/BrowserReducer';\n\n/* GraphQL Queries */\nimport { GET_COURSE_REVIEW } from '../../graphql/queries/course/CourseReview.jsx';\nimport { getProfPageRoute } from '../../Routes';\n\nconst CourseCourseReviews = ({\n  reviews,\n  theme,\n  courseSort,\n  setCourseSort,\n  courseProfFilter,\n  courseProfFilterOptions,\n  setCourseProfFilter,\n}) => {\n  const [showingAllReviews, setShowingAllReviews] = useState(false);\n\n  const renderReviews = useMemo(() => reviews.sort((a, b) => {\n    const timeSort = moment(b.created_at).format('YYYYMMDD') - moment(a.created_at).format('YYYYMMDD');\n    return courseSort === 0 ?\n      timeSort : b.upvotes === a.upvotes ? timeSort : b.upvotes - a.upvotes;\n  }).filter((_, i) => {\n    return showingAllReviews || i < MIN_REVIEWS_SHOWN;\n  }).map((review) => (\n    <Review key={review.id} review={review} isCourseReview />\n  )), [reviews, showingAllReviews, courseSort]);\n\n  return (\n    <CourseCourseReviewsWrapper>\n      <ReviewListWrapper>\n        <ReviewsOptionsWrapper>\n          <DropdownPanelWrapper>\n            <DropdownTableText>Sort by: </DropdownTableText>\n            <DropdownList\n              color={theme.primary}\n              selectedIndex={courseSort}\n              options={['most recent', 'most helpful']}\n              onChange={value => setCourseSort(value)}\n            />\n          </DropdownPanelWrapper>\n          <DropdownPanelWrapper>\n            <DropdownTableText>Filter by professor: </DropdownTableText>\n            <DropdownList\n              color={theme.professors}\n              selectedIndex={courseProfFilter}\n              options={courseProfFilterOptions}\n              onChange={value => setCourseProfFilter(value)}\n            />\n          </DropdownPanelWrapper>\n        </ReviewsOptionsWrapper>\n        {renderReviews}\n      </ReviewListWrapper>\n      {reviews.length > MIN_REVIEWS_SHOWN && (\n        <ShowMoreReviewsSection\n          onClick={() => setShowingAllReviews(!showingAllReviews)}\n        >\n          <ShowMoreReviewsText>\n            {showingAllReviews\n              ? `Show less reviews`\n              : `Show all ${reviews.length} reviews`}\n          </ShowMoreReviewsText>\n        </ShowMoreReviewsSection>\n      )}\n    </CourseCourseReviewsWrapper>\n  );\n};\n\nCourseCourseReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      upvotes: PropTypes.number,\n      review: PropTypes.string,\n      author: PropTypes.shape({\n        full_name: PropTypes.string,\n        program: PropTypes.string,\n        picture_url: PropTypes.string\n      }),\n      user: PropTypes.shape({\n        user_id: PropTypes.number\n      }),\n      metrics: PropTypes.shape({\n        useful: PropTypes.number,\n        easy: PropTypes.number,\n        liked: PropTypes.boolean,\n      }),\n    }),\n  ).isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst CourseProfReviews = ({ reviewsByProf, ProfFilterDropdown }) => {\n  const [showingReviewsMap, setShowingReviewsMap] = useState({});\n\n  const reviewList = useMemo(() => reviewsByProf.map((prof, idx) => (\n    <ReviewsForSingleProfWrapper key={idx}>\n      <ReviewListWrapper>\n        <ProfHeader>\n          <ProfName to={getProfPageRoute(prof.code)}>{prof.name}</ProfName>\n          <ProfLikedMetric>\n            <ProfLikedPercent>\n              {Math.round(prof.liked * 100)}%\n            </ProfLikedPercent>\n            <ProfLikedPercentLabel>\n              liked this professor\n            </ProfLikedPercentLabel>\n          </ProfLikedMetric>\n        </ProfHeader>\n        {prof.reviews.sort((a, b) => {\n          return moment(b.created_at).format('YYYYMMDD') - moment(a.created_at).format('YYYYMMDD');\n        }).filter((_, i) => {\n          return i < MIN_REVIEWS_SHOWN || showingReviewsMap[prof.name];\n        }).map((review, i) => (\n          <Review key={i} review={review} isCourseReview={false} />\n        ))}\n      </ReviewListWrapper>\n      {prof.reviews.length > MIN_REVIEWS_SHOWN && (\n        <ShowMoreReviewsSection\n          onClick={() =>\n            setShowingReviewsMap({\n              ...showingReviewsMap,\n              [prof.name]: !showingReviewsMap[prof.name],\n            })\n          }\n        >\n          <ShowMoreReviewsText>\n            {showingReviewsMap[prof.name]\n              ? `Show less reviews`\n              : `Show all ${prof.reviews.length} reviews`}\n          </ShowMoreReviewsText>\n        </ShowMoreReviewsSection>\n      )}\n    </ReviewsForSingleProfWrapper>\n  )), [reviewsByProf, showingReviewsMap]);\n\n  return (\n    <CourseProfReviewsWrapper>\n      {ProfFilterDropdown}\n      {reviewList}\n    </CourseProfReviewsWrapper>\n  );\n};\n\nCourseProfReviews.propTypes = {\n  reviewsByProf: PropTypes.arrayOf(\n    PropTypes.shape({\n      prof: PropTypes.string,\n      likes: PropTypes.number,\n      reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n          upvotes: PropTypes.number,\n          review: PropTypes.string,\n          author: PropTypes.shape({\n            full_name: PropTypes.string,\n            program: PropTypes.string,\n            picture_url: PropTypes.string\n          }).isRequired,\n          user: PropTypes.shape({\n            user_id: PropTypes.number\n          }),\n          metrics: PropTypes.shape({\n            clear: PropTypes.number,\n            engaging: PropTypes.number,\n          }).isRequired,\n        }),\n      ),\n    }),\n  ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isBrowserDesktop: getIsBrowserDesktop(state),\n});\n\nconst CourseReviews = ({ courseID, theme, isBrowserDesktop }) => {\n  const { loading, data } = useQuery(GET_COURSE_REVIEW, {\n    variables: { id: courseID },\n  });\n  const [courseSort, setCourseSort] = useState(0);\n  const [courseProfFilter, setCourseProfFilter] = useState(0);\n  const [profReviewFilter, setProfReviewFilter] = useState(0);\n  const [showingProfReviews, setShowingProfReviews] = useState(false);\n  const [reviewDataState, dispatchReviews] = useCourseReviewsReducer(data);\n\n  useEffect(() => {\n    if (data) {\n      dispatchReviews({\n        type: UPDATE_REVIEW_DATA,\n        payload: data,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  if (loading) {\n    return (\n      <CourseReviewWrapper>\n        <LoadingSpinner />\n      </CourseReviewWrapper>\n    );\n  }\n\n  const courseProfFilterOptions = [\n    'show all professors',\n    ...reviewDataState.courseReviewProfs,\n  ];\n\n  const courseReviewsToShow = reviewDataState.courseReviews.filter(\n    review =>\n      courseProfFilter === 0 ||\n      review.prof === courseProfFilterOptions[courseProfFilter],\n  );\n\n  const profProfFilterOptions = [\n    'show all professors',\n    ...reviewDataState.profReviewProfs,\n  ];\n\n  const profReviewsToShow = reviewDataState.reviewsByProf.filter(\n    review =>\n      profReviewFilter === 0 ||\n      review.name === profProfFilterOptions[profReviewFilter],\n  );\n\n  const numProfReviews = profReviewsToShow.reduce((total, curr) => {\n    total += curr.reviews.length;\n    return total;\n  }, 0);\n\n  const ProfFilterDropdown = (\n    <ProfDropdownPanelWrapper>\n      <DropdownTableText>Filter by professor: </DropdownTableText>\n      <DropdownList\n        color={theme.professors}\n        selectedIndex={profReviewFilter}\n        options={profProfFilterOptions}\n        onChange={value => setProfReviewFilter(value)}\n      />\n    </ProfDropdownPanelWrapper>\n  );\n\n  const tabList = [\n    {\n      title: `Course reviews (${courseReviewsToShow.length})`,\n      render: () => (\n        <CourseCourseReviews\n          reviews={courseReviewsToShow}\n          theme={theme}\n          courseSort={courseSort}\n          setCourseSort={setCourseSort}\n          courseProfFilter={courseProfFilter}\n          courseProfFilterOptions={courseProfFilterOptions}\n          setCourseProfFilter={setCourseProfFilter}\n        />\n      ),\n      onClick: () => setShowingProfReviews(false),\n    },\n    {\n      title: `Professor reviews (${numProfReviews})`,\n      render: () => ProfFilterDropdown,\n      onClick: () => setShowingProfReviews(true),\n    },\n  ];\n\n  return (\n    <CourseReviewWrapper>\n      {isBrowserDesktop && (\n        <TabContainer\n          tabList={tabList}\n          initialSelectedTab={0}\n          contentPadding=\"0\"\n        />\n      )}\n      {showingProfReviews && isBrowserDesktop && (\n        <CourseProfReviews\n          reviewsByProf={profReviewsToShow}\n          ProfFilterDropdown={isBrowserDesktop ? null : ProfFilterDropdown}\n        />\n      )}\n      {!isBrowserDesktop && (\n        <>\n          <CollapseableContainer\n            title={`Course comments (${data.course_review_aggregate.aggregate.count})`}\n          >\n            <CourseCourseReviews\n              reviews={courseReviewsToShow}\n              theme={theme}\n              courseSort={courseSort}\n              setCourseSort={setCourseSort}\n              courseProfFilter={courseProfFilter}\n              courseProfFilterOptions={courseProfFilterOptions}\n              setCourseProfFilter={setCourseProfFilter}\n            />\n          </CollapseableContainer>\n          <CollapseableContainer\n            title={`Professor comments (${data.prof_review_aggregate.aggregate.count})`}\n          >\n            <CourseProfReviews\n              reviewsByProf={profReviewsToShow}\n              ProfFilterDropdown={ProfFilterDropdown}\n            />\n          </CollapseableContainer>\n        </>\n      )}\n    </CourseReviewWrapper>\n  );\n};\n\nCourseReviews.propTypes = {\n  courseID: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withTheme(connect(mapStateToProps)(CourseReviews));\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\n\n/* Mixins */\nimport {\n  PageContent,\n  Card,\n  WideColumn,\n  ThinColumn,\n  BoxShadow,\n  Heading3,\n  PageWrapper\n} from '../../../constants/Mixins';\n\nexport const CoursePageWrapper = styled.div`\n  ${PageWrapper}\n`;\n\nexport const ColumnWrapper = styled.div`\n  ${PageContent}\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nexport const Column1 = styled.div`\n  ${WideColumn}\n\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n    padding: 0;\n    order: 2;\n  `}\n`;\n\nexport const Column2 = styled.div`\n  ${ThinColumn}\n\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n    order: 1;\n  `}\n`;\n\nexport const ScheduleAndReviewWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseReviewQuestionBox = styled.div`\n  ${Card('24px')}\n  ${BoxShadow}\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    flex-direction: column;\n  `}\n`;\n\nexport const CourseQuestionTextAndToggle = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n\n  ${breakpoint('mobile', 'tablet')`\n    width: 100%;\n    margin-right: 0;\n    margin-bottom: 16px;\n    justify-content: space-between;\n  `}\n`;\n\nexport const CourseReviewQuestionText = styled.div`\n  ${Heading3}\n  margin-right: 24px;\n\n  ${breakpoint('mobile', 'tablet')`\n    max-width: 60%;\n  `}\n`;\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { useQuery } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport CourseInfoHeader from './CourseInfoHeader';\nimport CourseSchedule from './CourseSchedule';\nimport CourseRequisites from './CourseRequisites';\nimport CourseReviews from './CourseReviews';\nimport CourseReviewCourseBox from '../../components/common/CourseReviewCourseBox';\nimport Button from '../../components/input/Button';\nimport Modal from '../../components/display/Modal';\nimport LikeCourseToggle from '../../components/input/LikeCourseToggle';\nimport LoadingSpinner from '../../components/display/LoadingSpinner';\nimport NotFoundPage from '../../pages/notFoundPage/NotFoundPage';\n\n/* Queries */\nimport { buildCourseQuery } from '../../graphql/queries/course/Course';\nimport { getUserId } from '../../utils/Auth';\n\n/* Styled Components */\nimport {\n  CoursePageWrapper,\n  ColumnWrapper,\n  Column1,\n  Column2,\n  ScheduleAndReviewWrapper,\n  CourseReviewQuestionBox,\n  CourseQuestionTextAndToggle,\n  CourseReviewQuestionText,\n} from './styles/CoursePage';\n\n/* Selectors */\nimport { getIsLoggedIn } from '../../data/reducers/AuthReducer';\nimport { getIsBrowserDesktop } from '../../data/reducers/BrowserReducer';\n\nimport { splitCourseCode } from '../../utils/Misc';\nimport { authModalOpen } from '../../data/actions/AuthActions';\n\nconst mapStateToProps = state => ({\n  isBrowserDesktop: getIsBrowserDesktop(state),\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nconst CoursePageContent = ({\n  course,\n  shortlisted,\n  userReview,\n  userCourseTaken,\n  isLoggedIn,\n  isBrowserDesktop,\n}) => {\n  const dispatch = useDispatch();\n  const [reviewModalOpen, setReviewModalOpen] = useState(false);\n\n  const handleReviewClick = () => {\n    isLoggedIn ? setReviewModalOpen(true) : dispatch(authModalOpen());\n  };\n\n  return (\n    <>\n      <CourseInfoHeader\n        course={course}\n        shortlisted={shortlisted}\n      />\n      <ColumnWrapper>\n        <Column1>\n          <ScheduleAndReviewWrapper>\n            <CourseSchedule sections={course.sections} courseCode={course.code} />\n            {(!isLoggedIn || userCourseTaken) && <CourseReviewQuestionBox>\n              <CourseQuestionTextAndToggle>\n                <CourseReviewQuestionText>\n                  What do you think of {splitCourseCode(course.code)}?\n                </CourseReviewQuestionText>\n                <LikeCourseToggle\n                  courseCode={course.code}\n                  courseID={course.id}\n                  profID={userReview ? userReview.prof_id : null}\n                  initialState={userReview ? userReview.liked : null}\n                />\n              </CourseQuestionTextAndToggle>\n              <Button\n                width={isBrowserDesktop ? 'max-content' : '100%'}\n                padding=\"16px 24px\"\n                handleClick={handleReviewClick}\n              >\n                {userReview ? 'Edit your review' : 'Add your review'}\n              </Button>\n            </CourseReviewQuestionBox>}\n          </ScheduleAndReviewWrapper>\n          <CourseReviews courseID={course.id} />\n        </Column1>\n        <Column2>\n          <CourseRequisites\n            courseCode={course.code}\n            prereqs={course.prereqs}\n            postreqs={course.postrequisites}\n          />\n        </Column2>\n      </ColumnWrapper>\n      <Modal\n        isOpen={reviewModalOpen}\n        onRequestClose={() => setReviewModalOpen(false)}\n      >\n        <CourseReviewCourseBox\n          courseList={[{ course: course, review: userReview }]}\n          onCancel={() => setReviewModalOpen(false)}\n        />\n      </Modal>\n    </>\n  );\n};\n\nconst CoursePage = ({ match, isLoggedIn, isBrowserDesktop }) => {\n  const courseCode = match.params.courseCode.toLowerCase();\n  const query = buildCourseQuery(isLoggedIn, getUserId());\n\n  const { loading, error, data } = useQuery(query, {\n    variables: { code: courseCode },\n  });\n\n  return loading ? (\n    <CoursePageWrapper>\n      <LoadingSpinner />\n    </CoursePageWrapper>\n  ) : error || !data || !data.course || data.course.length === 0 ? (\n    <NotFoundPage text=\"Sorry, we couldn't find that course!\" />\n  ) : (\n    <CoursePageWrapper>\n      <CoursePageContent\n        course={data.course[0]}\n        userReview={isLoggedIn && data.review.length > 0 ? data.review[0] : null}\n        userCourseTaken={isLoggedIn && data.user_course_taken.length > 0 ? true : false}\n        shortlisted={isLoggedIn && data.user_shortlist.length > 0}\n        isLoggedIn={isLoggedIn}\n        isBrowserDesktop={isBrowserDesktop}\n      />\n    </CoursePageWrapper>\n  );\n};\n\nCoursePage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default withRouter(connect(mapStateToProps)(CoursePage));\n"],"sourceRoot":""}