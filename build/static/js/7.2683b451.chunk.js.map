{"version":3,"sources":["../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/cross.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/range.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-array/src/index.js","components/display/styles/ProgressBar.jsx","components/display/ProgressBar.jsx","desktop/components/notFoundPage/styles/NotFoundPage.jsx","desktop/components/notFoundPage/NotFoundPage.jsx","components/statistics/styles/CircularPercentage.jsx","components/statistics/CircularPercentage.jsx","components/input/styles/BubbleRatings.jsx","components/input/BubbleRatings.jsx","graphql/fragments/prof/ProfFragment.jsx","desktop/components/common/styles/RatingBox.jsx","desktop/components/common/RatingBox.jsx","desktop/components/common/styles/Review.jsx","desktop/components/common/Review.jsx","mobile/components/common/styles/RatingBox.jsx","mobile/components/common/RatingBox.jsx","mobile/components/common/styles/Review.jsx","mobile/components/common/Review.jsx","desktop/components/profPage/styles/ProfPage.jsx","desktop/components/profPage/styles/ProfInfoHeader.jsx","desktop/components/profPage/ProfInfoHeader.jsx","data/custom_hooks/UseProfReviewsReducer.jsx","desktop/components/profPage/styles/ProfReviews.jsx","graphql/fragments/prof/ProfReviewFragment.jsx","graphql/queries/prof/ProfReview.jsx","desktop/components/profPage/ProfReviews.jsx","desktop/components/profPage/ProfPage.jsx","mobile/components/profPage/styles/ProfPage.jsx","mobile/components/profPage/styles/ProfInfoHeader.jsx","mobile/components/profPage/ProfInfoHeader.jsx","mobile/components/profPage/styles/ProfReviews.jsx","mobile/components/profPage/ProfReviews.jsx","mobile/components/profPage/ProfPage.jsx","graphql/queries/prof/Prof.jsx","pageSwitches/ProfPageSwitch.jsx"],"names":["a","b","NaN","f","compare","length","d","x","ascending","left","lo","hi","mid","right","ascendingBisect","bisector","bisectRight","bisect","Array","prototype","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","e10","sqrt","e5","e2","reverse","ticks","count","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","valueof","number","values","p","i0","value0","ProgressBarWrapper","styled","div","width","Number","isInteger","height","theme","light3","Complete","span","primary","ProgressBar","percentComplete","percentWidth","round","NotFoundPageWrapper","PageContent","NotFoundText","Heading2","withRouter","text","history","displayText","Button","handleClick","push","LANDING_PAGE_ROUTE","CircleWrapper","NumbersInCircle","LargePercentage","Heading1","GreyText","dark2","Small","withTheme","percent","barThickness","label","dataKey","data","value","cx","cy","outerRadius","innerRadius","fill","BubbleRatingsWrapper","UnitCircle","diameter","filledColor","emptyColor","filled","primaryDark","light4","BoxShadow","ThumbsWrapper","Thumb","Body","colored","Thumbs","boolRating","Squares","rating","total","apply","_","ind","key","ProfFragment","profInfo","gql","profProfReviewsAggregate","profCourseReviewsAggregate","profCoursesTaught","RatingBoxWrapper","ratingBoxWidth","ratingBoxHeight","PAGE_CONTENT_WIDTH","LikesColumn","ProgressBarColumn","ProgressBarColumnWrapper","ProgressWrapper","ProgressTextLabel","ProgressNumberLabel","NumCommentsAndRatingsWrapper","NumCommentsWrapper","dark3","NumRatingsWrapper","RATING_BOX_HEIGHT","RATING_BOX_WIDTH","RatingBox","percentages","numRatings","numComments","likedPercent","CircularPercentage","metric","displayName","ReviewWrapper","Card","light1","ReviewPictureWrapper","ReviewPicture","ReviewUpvotes","selected","ReviewTextWrapper","ReviewText","ReviewAuthor","dark1","ReviewMetricsWrapper","table","ReviewMetricsBody","tbody","SingleMetricWrapper","tr","SingleMetricSquares","td","SingleMetricLabel","UpvoteNumber","MetricIfExists","metrics","undefined","BubbleRatings","charAt","toUpperCase","upvotes","review","reviewer","color","size","strokeWidth","full_name","program","CircularPercentageWrapper","RatingBarsColumn","ReviewsAndGraphButtonWrapper","connect","state","getWidth","min","ReviewPictureAndMetricsRow","ReviewPictureAndUpvotesWrapper","ProfPageWrapper","ColumnWrapper","Column1","WideColumn","Column2","ThinColumn","ProfInfoHeaderWrapper","ProfNameSection","primaryExtraDark","ProfDescriptionSection","ProfNameWrapper","ProfName","white","Description","Heading3","RatingsSection","ProfInfoHeader","prof","percentClear","prof_reviews_aggregate","aggregate","avg","clear","percentEngaging","engaging","profCourses","prof_courses","course","splitCourseCode","code","name","text_count","course_reviews_aggregate","liked","join","convertInputToState","reviewsByCourse","courses","prof_review","reduce","allCourses","current","courseObject","foundCourseObject","id","reviews","prof_review_votes_aggregate","sum","vote","user","obj","useProfReviewsReducer","initialState","useState","setState","action","newState","currentState","type","payload","processDispatch","propTypes","PropTypes","arrayOf","shape","string","ProfCourseReviewWrapper","ProfCourseFilterWrapper","NoReviewsBox","ReviewsForSingleCourseWrapper","ReviewListWrapper","CourseHeader","CourseNameAndCode","CourseCode","Link","CourseName","DropdownPanelWrapper","DropdownTableText","Heading4","CourseLikedMetric","CourseLikedPercent","CourseLikedPercentLabel","ShowMoreReviewsSection","ShowMoreReviewsText","ProfReviewFragment","profCoursesReviewInfo","GET_PROF_REVIEW","profID","selectedFilter","setSelectedFilter","selectedSort","setSelectedSort","useQuery","variables","loading","reviewDataState","dispatch","showingReviewsMap","setShowingReviewsMap","useEffect","LoadingSpinner","courseFilterOptions","courseFilterDisplayOptions","reviewsByCourseToShow","filter","DropdownList","selectedIndex","options","onChange","zIndex","idx","to","getCoursePageRoute","MIN_REVIEWS_SHOWN","Review","onClick","ProfPageContent","console","ProfPage","ProfCoursesText","light2","GET_PROF","ProfPageSwitch","isDesktopPage","profCode","match","params","toLowerCase","NotFoundPage","getIsBrowserDesktop"],"mappings":"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","file":"static/js/7.2683b451.chunk.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","export default function (x) {\n  return x === null ? NaN : +x;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","import number from \"./number\";\nexport default function (values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}","export { default as bisect, bisectRight, bisectLeft } from \"./bisect\";\nexport { default as ascending } from \"./ascending\";\nexport { default as bisector } from \"./bisector\";\nexport { default as cross } from \"./cross\";\nexport { default as descending } from \"./descending\";\nexport { default as deviation } from \"./deviation\";\nexport { default as extent } from \"./extent\";\nexport { default as histogram } from \"./histogram\";\nexport { default as thresholdFreedmanDiaconis } from \"./threshold/freedmanDiaconis\";\nexport { default as thresholdScott } from \"./threshold/scott\";\nexport { default as thresholdSturges } from \"./threshold/sturges\";\nexport { default as max } from \"./max\";\nexport { default as mean } from \"./mean\";\nexport { default as median } from \"./median\";\nexport { default as merge } from \"./merge\";\nexport { default as min } from \"./min\";\nexport { default as pairs } from \"./pairs\";\nexport { default as permute } from \"./permute\";\nexport { default as quantile } from \"./quantile\";\nexport { default as range } from \"./range\";\nexport { default as scan } from \"./scan\";\nexport { default as shuffle } from \"./shuffle\";\nexport { default as sum } from \"./sum\";\nexport { default as ticks, tickIncrement, tickStep } from \"./ticks\";\nexport { default as transpose } from \"./transpose\";\nexport { default as variance } from \"./variance\";\nexport { default as zip } from \"./zip\";","import styled from 'styled-components';\n\nexport const ProgressBarWrapper = styled.div`\n  width: ${({ width }) => (Number.isInteger(width) ? `${width}px` : width)};\n  height: ${({ height }) => height}px;\n  display: flex;\n  margin: 10px 8px 10px 0;\n  background-color: ${({ theme }) => theme.light3};\n  border-radius: 4px;\n  box-shadow: 0px 2px 5px rgba(236, 237, 237, 0.5),\n    0px 0px 5px rgba(142, 147, 148, 0.2);\n`;\n\nexport const Complete = styled.span`\n  border-radius: ${({ width }) => (width >= 100 ? '4px' : '4px 0 0 4px')};\n  width: ${({ width }) => width}%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.primary};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ProgressBarWrapper, Complete } from './styles/ProgressBar';\n\nconst ProgressBar = ({ percentComplete, width = 188, height = 16 }) => {\n  const percentWidth = Math.round(percentComplete * 100);\n  return (\n    <ProgressBarWrapper width={width} height={height}>\n      <Complete width={percentWidth} />\n    </ProgressBarWrapper>\n  );\n};\n\nProgressBar.propTypes = {\n  percentComplete: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default ProgressBar;\n","import styled from 'styled-components';\n\nimport { Heading2 , PageContent} from '../../../../constants/Mixins';\n\nexport const NotFoundPageWrapper = styled.div`\n  min-height: 100%;\n  padding-top: 200px;\n  margin: auto;\n  ${PageContent}\n`;\n\nexport const NotFoundText = styled.div`\n  ${Heading2}\n  margin-bottom: 40px;\n`;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Button from '../../../components/input/Button';\nimport { LANDING_PAGE_ROUTE } from '../../../Routes';\n\nimport { NotFoundPageWrapper, NotFoundText } from './styles/NotFoundPage';\n\nconst NotFoundPage = ({ text, history }) => {\n  const handleClick = () => {\n    history.push(LANDING_PAGE_ROUTE);\n  };\n\n  const displayText = text ? text : `Sorry, this page doesn't exist!`;\n\n  return (\n    <NotFoundPageWrapper>\n      <NotFoundText>{displayText}</NotFoundText>\n      <Button handleClick={handleClick}>Home</Button>\n    </NotFoundPageWrapper>\n  );\n};\n\nNotFoundPage.propTypes = {\n  text: PropTypes.string,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(NotFoundPage);\n","import styled from 'styled-components';\nimport { Heading1, Small } from '../../../constants/Mixins';\n\nexport const CircleWrapper = styled.div`\n  position: relative;\n`;\n\nexport const NumbersInCircle = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  bottom: 0;\n  left: 0;\n  height: ${({ height }) => height}px;\n  width: ${({ height }) => height}px;\n  justify-content: center;\n  align-items: center;\n  transform: scale(${({ height }) => height / 212});\n`;\n// Transform: scale is iffy hard code but this seems to be the most veratile way to resize the inner text\n// Or else we'll have to change the font types with if statements\n\nexport const LargePercentage = styled.div`\n  ${Heading1};\n`;\nexport const GreyText = styled.div`\n  color: ${({ theme }) => theme.dark2};\n  ${Small};\n`;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { PieChart, Pie, Cell } from 'recharts';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  CircleWrapper,\n  NumbersInCircle,\n  LargePercentage,\n  GreyText,\n} from './styles/CircularPercentage';\n\n//Contained within a square tho\nconst CircularPercentage = ({\n  theme,\n  height,\n  percent,\n  barThickness,\n  label,\n}) => (\n  <CircleWrapper>\n    <PieChart width={height} height={height}>\n      <Pie\n        dataKey=\"value\"\n        data={[{ value: percent }, { value: 100 - percent }]}\n        cx=\"50%\"\n        cy=\"50%\"\n        outerRadius={height / 2}\n        innerRadius={height / 2 - barThickness}\n      >\n        <Cell fill={theme.primary} />\n        <Cell fill={theme.light3} />\n      </Pie>\n    </PieChart>\n    <NumbersInCircle height={height}>\n      <LargePercentage>{percent}%</LargePercentage>\n      <GreyText>{label}</GreyText>\n    </NumbersInCircle>\n  </CircleWrapper>\n);\n\nCircularPercentage.propTypes = {\n  height: PropTypes.number,\n  percent: PropTypes.number, //Out of 100, not as a decimal\n  barThickness: PropTypes.number,\n  label: PropTypes.string,\n};\n\nexport default withTheme(CircularPercentage);\n","import styled from 'styled-components';\nimport { Body, BoxShadow } from '../../../constants/Mixins';\n\nexport const BubbleRatingsWrapper = styled.div`\n  display: flex;\n  padding-bottom: 16px;\n\n  @media only screen and (max-width: 800px) {\n    padding-bottom: 8px\n  }\n`;\n\nexport const UnitCircle = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${({ diameter }) => diameter}px;\n  height: ${({ diameter }) => diameter}px;\n  border-radius: ${({ diameter }) => diameter / 2}px;\n  background-color: ${({ filledColor, emptyColor, theme, filled }) =>\n    filled\n      ? filledColor\n        ? filledColor\n        : theme.primary\n      : emptyColor\n      ? emptyColor\n      : 'white'};\n  border: 2px solid ${({ filled, theme }) => (filled ? theme.primaryDark : theme.light4)};\n  margin: 0 1px;\n  ${({ filled }) => (filled ? '' : BoxShadow)}\n`;\n\nexport const ThumbsWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Thumb = styled.div`\n  ${Body}\n  color: ${({theme, colored}) => colored ? theme.primary : theme.light4};\n  margin-left: 4px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThumbsUp, ThumbsDown } from 'react-feather';\nimport { withTheme } from 'styled-components';\n\n/* Styled Components */\nimport {\n  BubbleRatingsWrapper,\n  UnitCircle,\n  ThumbsWrapper,\n  Thumb\n} from './styles/BubbleRatings';\n\nconst Thumbs = ({ boolRating }) => (\n  <ThumbsWrapper>\n    <Thumb colored={boolRating === true}>\n      <ThumbsUp width={20} height={20} />\n    </Thumb>\n    <Thumb colored={boolRating === false}>\n      <ThumbsDown width={20} height={20} />\n    </Thumb>\n  </ThumbsWrapper>\n);\n\nconst Squares = ({ rating, total }) => (\n  <>\n    {Array.apply(null, Array(total)).map((_, ind) => {\n      return (\n        <UnitCircle\n          key={ind}\n          filled={ind < rating}\n          diameter={16}\n        />\n      );\n    })}\n  </>\n);\n\n/*\n  Provides either a row of circles indicating a rating out of 5 or \n  a Y and N block indicating a rating for yes or no (for the liked it rating for courses)\n*/\nconst BubbleRatings = ({ total = 5, rating, boolRating, theme }) => {\n  return (\n    <BubbleRatingsWrapper>\n      {boolRating === true || boolRating === false ? (\n        <Thumbs boolRating={boolRating} />\n      ) : (\n        <Squares rating={rating} total={total} />\n      )}\n    </BubbleRatingsWrapper>\n  );\n};\n\nBubbleRatings.propTypes = {\n  total: PropTypes.number, //int total that the rating is out of (5 for us rn)\n  rating: PropTypes.number, // int rating that is given (out of 5)\n  boolRating: PropTypes.bool, //This will be not null/undefined if we want to use this intead of a number out of 5\n  theme: PropTypes.object,\n};\n\nexport default withTheme(BubbleRatings);\n","import gql from 'graphql-tag';\n\nconst ProfFragment = {\n  profInfo: gql`\n    fragment ProfInfoFragment on prof {\n      id\n      name\n      code\n    }\n  `,\n  profProfReviewsAggregate: gql`\n    fragment ProfProfReviewsAggregateFragment on prof {\n      prof_reviews_aggregate {\n        aggregate {\n          avg {\n            clear\n            engaging\n          }\n          count\n          text_count: count(columns: text)\n        }\n      }\n    }\n  `,\n  profCourseReviewsAggregate: gql`\n    fragment ProfCourseReviewsAggregateFragment on prof {\n      course_reviews_aggregate {\n        aggregate {\n          avg {\n            liked\n          }\n        }\n      }\n    }\n  `,\n  profCoursesTaught: gql`\n    fragment ProfCoursesTaughtFragment on prof {\n      prof_courses {\n        course {\n          code\n        }\n      }\n    }\n  `\n};\n\nexport default ProfFragment;\n","import styled from 'styled-components';\nimport { Body, BoxShadow } from '../../../../constants/Mixins';\nimport { PAGE_CONTENT_WIDTH } from '../../../../constants/PageConstants';\n\nexport const RatingBoxWrapper = styled.div`\n  width: ${({ ratingBoxWidth }) => ratingBoxWidth}px;\n  height: ${({ ratingBoxHeight }) => ratingBoxHeight}px;\n  background-color: white;\n  display: flex;\n  border-radius: ${({ ratingBoxHeight }) => ratingBoxHeight / 2}px 5px 5px\n    ${({ ratingBoxHeight }) => ratingBoxHeight / 2}px;\n  justify-content: space-between;\n  position: relative;\n  ${BoxShadow}\n\n  @media only screen and (max-width: ${PAGE_CONTENT_WIDTH + 32}px) {\n    margin-right: 32px;\n  }\n`;\n\nexport const LikesColumn = styled.div`\n  margin: 16px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const ProgressBarColumn = styled.div`\n  margin: 16px 0 16px 16px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ProgressBarColumnWrapper = styled.div`\n  margin: auto;\n`;\n\nexport const ProgressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 8px;\n`;\n\nexport const ProgressTextLabel = styled.div``;\n\nexport const ProgressBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProgressNumberLabel = styled.div`\n  ${Body};\n  margin: 8px;\n`;\n\nexport const NumCommentsAndRatingsWrapper = styled.div`\n  display: flex;\n  margin: 8px;\n`;\n\nexport const NumCommentsWrapper = styled.div`\n  ${Body};\n  color: ${({ theme }) => theme.dark3};\n`;\n\nexport const NumRatingsWrapper = styled.div`\n  ${Body};\n  margin-left: 24px;\n  color: ${({ theme }) => theme.dark3};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  RatingBoxWrapper,\n  LikesColumn,\n  ProgressBarColumn,\n  ProgressBarColumnWrapper,\n  ProgressWrapper,\n  ProgressTextLabel,\n  ProgressBarWrapper,\n  ProgressNumberLabel,\n  NumCommentsAndRatingsWrapper,\n  NumCommentsWrapper,\n  NumRatingsWrapper,\n} from './styles/RatingBox';\n\n/* Child Components */\nimport ProgressBar from '../../../components/display/ProgressBar';\nimport CircularPercentage from '../../../components/statistics/CircularPercentage';\n\nexport const RATING_BOX_HEIGHT = 244;\nexport const RATING_BOX_WIDTH = 512;\n\n/*\n  NOTE DATA FOR \"LIKED\" MUST BE PERCENTAGES[0]\n*/\nconst RatingBox = ({ percentages, numRatings, numComments }) => {\n  const likedPercent = Math.round(percentages[0].percent * 100);\n\n  return (\n    <RatingBoxWrapper\n      ratingBoxHeight={RATING_BOX_HEIGHT}\n      ratingBoxWidth={RATING_BOX_WIDTH}\n    >\n      <LikesColumn>\n        <CircularPercentage\n          height={RATING_BOX_HEIGHT - 32}\n          percent={likedPercent}\n          barThickness={16}\n          label=\"liked\"\n        />\n      </LikesColumn>\n      <ProgressBarColumn>\n        <ProgressBarColumnWrapper>\n          {percentages.map((metric, ind) =>\n            ind === 0 ? null : (\n              <ProgressWrapper key={metric.displayName}>\n                <ProgressTextLabel>{metric.displayName}</ProgressTextLabel>\n                <ProgressBarWrapper>\n                  <ProgressBar percentComplete={metric.percent} />\n                  <ProgressNumberLabel>\n                    {Math.round(metric.percent * 100)}%\n                  </ProgressNumberLabel>\n                </ProgressBarWrapper>\n              </ProgressWrapper>\n            ),\n          )}\n          <NumCommentsAndRatingsWrapper>\n            <NumCommentsWrapper>\n              {numComments} {numComments === 1 ? 'comment' : 'comments'}\n            </NumCommentsWrapper>\n            <NumRatingsWrapper>\n              {numRatings}\n              {numRatings === 1 ? ' rating' : ' ratings'}\n            </NumRatingsWrapper>\n          </NumCommentsAndRatingsWrapper>\n        </ProgressBarColumnWrapper>\n      </ProgressBarColumn>\n    </RatingBoxWrapper>\n  );\n};\n\nRatingBox.propTypes = {\n  percentages: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayName: PropTypes.string,\n      percent: PropTypes.number,\n    }),\n  ),\n  numRatings: PropTypes.number,\n  numComments: PropTypes.number,\n  theme: PropTypes.object,\n};\n\nexport default RatingBox;\n","import styled from 'styled-components';\nimport { Card, BoxShadow, Body } from '../../../../constants/Mixins';\n\nexport const ReviewWrapper = styled.div`\n  ${Card('24px 32px')}\n  ${BoxShadow}\n  margin-bottom: 32px;\n  background-color: ${({ theme }) => theme.light1};\n  justify-content: space-between;\n  flex-direction: row;\n`;\n\nexport const ReviewPictureWrapper = styled.div`\n  display: flex;\n  margin-bottom: 32px;\n  margin-right: 32px;\n  position: relative;\n`;\n\nexport const ReviewPicture = styled.div`\n  width: 64px;\n  height: 64px;\n  background-color: ${({ theme }) => theme.dark3};\n  border-radius: 32px 32px 32px 32px;\n`;\n\nexport const ReviewUpvotes = styled.div`\n  position: absolute;\n  top: 36px;\n  right: -16px;\n  width: 40px;\n  height: 40px;\n  ${({ selected, theme }) =>\n    selected ? `background-color:${theme.primary};` : ''}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  border-radius: 20px 20px 20px 20px;\n  cursor: pointer;\n  border: 2px solid ${({ theme }) => theme.light3};\n\n  &:hover {\n    ${({ selected, theme }) =>\n      `background-color:${selected ? theme.primaryDark : theme.light3};`\n  }\n`;\n\nexport const ReviewTextWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  word-wrap: break-word;\n`;\n\nexport const ReviewText = styled.div`\n  word-break: break-word;\n  ${Body}\n`;\n\nexport const ReviewAuthor = styled.div`\n  ${Body}\n  margin-top: 16px;\n  color: ${({ theme }) => theme.dark1};\n`;\n\nexport const ReviewMetricsWrapper = styled.table`\n  min-width: 168px;\n  margin-left: 16px;\n`;\n\nexport const ReviewMetricsBody = styled.tbody``;\n\nexport const SingleMetricWrapper = styled.tr``;\n\nexport const SingleMetricSquares = styled.td`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const SingleMetricLabel = styled.td`\n  ${Body}\n  color: ${({theme}) => theme.dark2};\n  padding-left: 8px;\n  vertical-align: top;\n`;\n\nexport const UpvoteNumber = styled.div`\n  ${Body}\n  color: ${({ selected, theme }) => (selected ? 'white' : theme.dark3)}\n  margin-left: 4px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { ThumbsUp } from 'react-feather';\n\n/* Styled Components */\nimport {\n  ReviewWrapper,\n  ReviewTextWrapper,\n  ReviewMetricsWrapper,\n  ReviewMetricsBody,\n  ReviewPictureWrapper,\n  ReviewPicture,\n  ReviewUpvotes,\n  ReviewText,\n  ReviewAuthor,\n  UpvoteNumber,\n  SingleMetricWrapper,\n  SingleMetricSquares,\n  SingleMetricLabel,\n} from './styles/Review';\n\n/* Child Components */\nimport BubbleRatings from '../../../components/input/BubbleRatings';\n\nconst MetricIfExists = (metrics, metric) => {\n  if (metrics[metric] !== null && metrics[metric] !== undefined) {\n    if (metrics[metric] === true || metrics[metric] === false) {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings boolRating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {metric === 'liked' ? 'Liked' : metric}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    } else {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings total={5} rating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {' '}\n            {metric.charAt(0).toUpperCase() + metric.slice(1)}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    }\n  }\n};\n\nconst Review = ({ upvotes, review, reviewer, metrics, theme }) => {\n  const userUpvoted = true;\n  return (\n    <ReviewWrapper>\n      <ReviewPictureWrapper>\n        <ReviewPicture />\n        <ReviewUpvotes selected={userUpvoted}>\n          <ThumbsUp\n            color={userUpvoted ? 'white' : theme.dark3}\n            size={16}\n            strokeWidth={2}\n          />\n          <UpvoteNumber selected={userUpvoted}>\n            {upvotes ? upvotes : 0}\n          </UpvoteNumber>\n        </ReviewUpvotes>\n      </ReviewPictureWrapper>\n      <ReviewTextWrapper>\n        <ReviewText>{review}</ReviewText>\n        <ReviewAuthor>\n          -{reviewer.full_name}, a {review.program} student\n        </ReviewAuthor>\n      </ReviewTextWrapper>\n      <ReviewMetricsWrapper>\n        <ReviewMetricsBody>\n          {MetricIfExists(metrics, 'clear')}\n          {MetricIfExists(metrics, 'engaging')}\n          {MetricIfExists(metrics, 'useful')}\n          {MetricIfExists(metrics, 'easy')}\n          {MetricIfExists(metrics, 'liked')}\n        </ReviewMetricsBody>\n      </ReviewMetricsWrapper>\n    </ReviewWrapper>\n  );\n};\n\nReview.propTypes = {\n  upvotes: PropTypes.number,\n  review: PropTypes.string,\n  reviewer: PropTypes.shape({\n    name: PropTypes.string,\n    program: PropTypes.string,\n  }),\n  metrics: PropTypes.shape({\n    useful: PropTypes.number, //not all these metrics have to exist, we should only display the ones that do\n    easy: PropTypes.number, //for example course review only has useful, easy liked,\n    liked: PropTypes.bool, //prof review only has liked, clear and engagin\n    clear: PropTypes.number,\n    engaging: PropTypes.number,\n  }),\n};\n\nexport default withTheme(Review);\n","import styled from 'styled-components';\nimport { Body, BoxShadow } from '../../../../constants/Mixins';\n\nexport const RatingBoxWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CircularPercentageWrapper = styled.div`\n  padding: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RatingBarsColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 360px;\n`;\n\nexport const ProgressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 8px 8px 0;\n\n  &:first-child {\n    margin-top: 16px;\n  }\n`;\n\nexport const ProgressTextLabel = styled.div``;\n\nexport const ProgressBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProgressNumberLabel = styled.div`\n  ${Body};\n  margin: 8px;\n`;\n\nexport const ReviewsAndGraphButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const NumCommentsAndRatingsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 0 16px 0;\n`;\n\nexport const NumCommentsWrapper = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.dark3};\n  margin-bottom: 8px;\n`;\n\nexport const NumRatingsWrapper = styled.div`\n  ${Body};\n  color: ${({ theme }) => theme.dark3};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n/* Selectors */\nimport { getWidth } from '../../../data/reducers/BrowserReducer';\n\n/* Child Components */\nimport CircularPercentage from '../../../components/statistics/CircularPercentage';\nimport ProgressBar from '../../../components/display/ProgressBar';\n\n/* Styled Components */\nimport {\n  RatingBoxWrapper,\n  CircularPercentageWrapper,\n  RatingBarsColumn,\n  ProgressWrapper,\n  ProgressTextLabel,\n  ProgressBarWrapper,\n  ProgressNumberLabel,\n  ReviewsAndGraphButtonWrapper,\n  NumCommentsAndRatingsWrapper,\n  NumCommentsWrapper,\n  NumRatingsWrapper,\n} from './styles/RatingBox';\n\nconst mapStateToProps = state => ({\n  width: getWidth(state),\n});\n\nconst RatingBox = ({ percentages, numRatings, numComments, width }) => {\n  const likedPercent = Math.round(percentages[0].percent * 100);\n  return (\n    <RatingBoxWrapper>\n      <CircularPercentageWrapper>\n        <CircularPercentage\n          height={Math.min(width / 2 - 32, 200)}\n          percent={likedPercent}\n          barThickness={16}\n          label=\"liked\"\n        />\n      </CircularPercentageWrapper>\n      <RatingBarsColumn>\n        {percentages.map((metric, ind) =>\n          ind === 0 ? null : (\n            <ProgressWrapper key={metric.displayName}>\n              <ProgressTextLabel>{metric.displayName}</ProgressTextLabel>\n              <ProgressBarWrapper>\n                <ProgressBar percentComplete={metric.percent} width=\"100%\" />\n                <ProgressNumberLabel>\n                  {Math.round(metric.percent * 100)}%\n                </ProgressNumberLabel>\n              </ProgressBarWrapper>\n            </ProgressWrapper>\n          ),\n        )}\n        <ReviewsAndGraphButtonWrapper>\n          <NumCommentsAndRatingsWrapper>\n            <NumCommentsWrapper>\n              {numComments} {numComments === 1 ? 'comment' : 'comments'}\n            </NumCommentsWrapper>\n            <NumRatingsWrapper>\n              {numRatings} {numRatings === 1 ? 'rating' : 'ratings'}\n            </NumRatingsWrapper>\n          </NumCommentsAndRatingsWrapper>\n        </ReviewsAndGraphButtonWrapper>\n      </RatingBarsColumn>\n    </RatingBoxWrapper>\n  );\n};\n\nRatingBox.propTypes = {\n  percentages: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayName: PropTypes.string,\n      percent: PropTypes.number,\n    }),\n  ),\n  numRatings: PropTypes.number,\n  numComments: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(RatingBox);\n","import styled from 'styled-components';\nimport { BoxShadow, Body } from '../../../../constants/Mixins';\n\nexport const ReviewWrapper = styled.div`\n  ${BoxShadow}\n  padding: 16px;\n  margin-bottom: 32px;\n  background-color: ${({ theme }) => theme.light1};\n  align-content: center;\n`;\n\nexport const ReviewPictureAndMetricsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ReviewPictureAndUpvotesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 32px;\n`;\n\nexport const ReviewPicture = styled.div`\n  width: 64px;\n  height: 64px;\n  background-color: ${({ theme }) => theme.dark3};\n  border-radius: 32px 32px 32px 32px;\n  margin-right: 16px;\n\n  @media only screen and (max-width: 320px) {\n    margin-right: 8px\n  }\n`;\n\nexport const ReviewUpvotes = styled.div`\n  width: 40px;\n  height: 40px;\n  ${({ selected, theme }) =>\n    selected ? `background-color:${theme.primary};` : ''}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  border-radius: 20px 20px 20px 20px;\n  border: 2px solid ${({ theme }) => theme.light3};\n`;\n\nexport const UpvoteNumber = styled.div`\n  ${Body}\n  color: ${({ selected, theme }) => (selected ? 'white' : theme.dark3)}\n  margin-left: 4px;\n`;\n\nexport const ReviewMetricsWrapper = styled.table`\n  min-width: 158px;\n  margin-left: 8px;\n`;\n\nexport const ReviewMetricsBody = styled.tbody``;\n\nexport const SingleMetricWrapper = styled.tr``;\n\nexport const SingleMetricSquares = styled.td`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const SingleMetricLabel = styled.td`\n  ${Body}\n  vertical-align: top;\n`;\n\nexport const ReviewTextWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  word-wrap: break-word;\n`;\n\nexport const ReviewText = styled.div`\n  word-break: break-word;\n  ${Body}\n`;\n\nexport const ReviewAuthor = styled.div`\n  ${Body}\n  margin-top: 16px;\n  color: ${({ theme }) => theme.dark1};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { ThumbsUp } from 'react-feather';\n\n/* Styled Components */\nimport {\n  ReviewWrapper,\n  ReviewPictureAndMetricsRow,\n  ReviewTextWrapper,\n  ReviewMetricsWrapper,\n  ReviewMetricsBody,\n  ReviewPictureAndUpvotesWrapper,\n  ReviewPicture,\n  ReviewUpvotes,\n  UpvoteNumber,\n  ReviewText,\n  ReviewAuthor,\n  SingleMetricWrapper,\n  SingleMetricSquares,\n  SingleMetricLabel,\n} from './styles/Review';\n\n/* Child Components */\nimport BubbleRatings from '../../../components/input/BubbleRatings';\n\nconst MetricIfExists = (metrics, metric) => {\n  if (metrics[metric] !== null && metrics[metric] !== undefined) {\n    if (metrics[metric] === true || metrics[metric] === false) {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings boolRating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {metric === 'liked' ? 'Liked' : metric}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    } else {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings total={5} rating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {' '}\n            {metric.charAt(0).toUpperCase() + metric.slice(1)}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    }\n  }\n};\n\nconst Review = ({ upvotes, review, reviewer, metrics, theme }) => {\n  const userUpvoted = true;\n  return (\n    <ReviewWrapper>\n      <ReviewPictureAndMetricsRow>\n        <ReviewPictureAndUpvotesWrapper>\n          <ReviewPicture />\n          <ReviewUpvotes selected={userUpvoted}>\n            <ThumbsUp\n              color={userUpvoted ? 'white' : theme.dark3}\n              size={16}\n              strokeWidth={2}\n            />\n            <UpvoteNumber selected={userUpvoted}>\n              {upvotes ? upvotes : 0}\n            </UpvoteNumber>\n          </ReviewUpvotes>\n        </ReviewPictureAndUpvotesWrapper>\n        <ReviewMetricsWrapper>\n          <ReviewMetricsBody>\n            {MetricIfExists(metrics, 'clear')}\n            {MetricIfExists(metrics, 'engaging')}\n            {MetricIfExists(metrics, 'useful')}\n            {MetricIfExists(metrics, 'easy')}\n            {MetricIfExists(metrics, 'liked')}\n          </ReviewMetricsBody>\n        </ReviewMetricsWrapper>\n      </ReviewPictureAndMetricsRow>\n      <ReviewTextWrapper>\n        <ReviewText>{review}</ReviewText>\n        <ReviewAuthor>\n          -{reviewer.full_name}, a {review.program} student\n        </ReviewAuthor>\n      </ReviewTextWrapper>\n    </ReviewWrapper>\n  );\n};\n\nReview.propTypes = {\n  upvotes: PropTypes.number,\n  review: PropTypes.string,\n  reviewer: PropTypes.shape({\n    name: PropTypes.string,\n    program: PropTypes.string,\n  }),\n  prof: PropTypes.string,\n  metrics: PropTypes.shape({\n    useful: PropTypes.number, //not all these metrics have to exist, we should only display the ones that do\n    easy: PropTypes.number, //for example course review only has useful, easy liked,\n    liked: PropTypes.bool, //prof review only has liked, clear and engagin\n    clear: PropTypes.number,\n    engaging: PropTypes.number,\n  }),\n};\n\nexport default withTheme(Review);\n","import styled from 'styled-components';\n\n/* Mixins */\nimport { WideColumn, ThinColumn, PageContent } from '../../../../constants/Mixins';\n\nexport const ProfPageWrapper = styled.div`\n  width: 100%;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.light1};\n`;\n\nexport const ColumnWrapper = styled.div`\n  ${PageContent}\n  margin: auto;\n  display: flex;\n`;\n\nexport const Column1 = styled.div`\n  ${WideColumn}\n`;\n\nexport const Column2 = styled.div`\n  ${ThinColumn}\n`;\n","import styled from 'styled-components';\n\n/* Mixins */\nimport { Heading1, Heading3, PageContent } from '../../../../constants/Mixins';\n\nexport const ProfInfoHeaderWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 32px;\n  display: flex;\n  background-color: white;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const ProfNameSection = styled.div`\n  width: 100%;\n  min-height: 350px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background-color: ${({ theme }) => theme.primaryExtraDark};\n  position: relative;\n`;\n\nexport const ProfDescriptionSection = styled.div`\n  position: relative;\n  ${PageContent}\n  min-height: 80px;\n  margin: auto;\n  vertical-align: middle;\n  display: flex;\n`;\n\nexport const ProfNameWrapper = styled.div`\n  ${PageContent}\n  margin: auto;\n  margin-bottom: 48px;\n`;\n\nexport const ProfName = styled.div`\n  max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  color: ${({ theme }) => theme.white};\n  ${Heading1}\n`;\n\nexport const Description = styled.div`\n  ${Heading3}\n  position: relative;\n  margin: auto 0;\n  max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  line-height: 1.5;\n  vertical-align: middle;\n  color: ${({ theme }) => theme.dark2};\n`;\n\nexport const RatingsSection = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: 40px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  ProfInfoHeaderWrapper,\n  ProfNameSection,\n  ProfNameWrapper,\n  ProfDescriptionSection,\n  ProfName,\n  Description,\n  RatingsSection,\n} from './styles/ProfInfoHeader';\n\n/* Child Components */\nimport RatingBox, {\n  RATING_BOX_HEIGHT,\n  RATING_BOX_WIDTH,\n} from '../common/RatingBox';\n\nimport { splitCourseCode } from '../../../utils/Misc';\n\nconst ProfInfoHeader = ({ prof }) => {\n  const percentClear = prof.prof_reviews_aggregate.aggregate.avg.clear / 5;\n  const percentEngaging =\n    prof.prof_reviews_aggregate.aggregate.avg.engaging / 5;\n  const profCourses = prof.prof_courses.map(course =>\n    splitCourseCode(course.code),\n  );\n\n  return (\n    <ProfInfoHeaderWrapper>\n      <ProfNameSection>\n        <ProfNameWrapper>\n          <ProfName ratingBoxWidth={RATING_BOX_WIDTH}>{prof.name}</ProfName>\n        </ProfNameWrapper>\n      </ProfNameSection>\n      <ProfDescriptionSection>\n        <RatingsSection ratingBoxHeight={RATING_BOX_HEIGHT}>\n          <RatingBox\n            numRatings={prof.prof_reviews_aggregate.aggregate.count}\n            numComments={prof.prof_reviews_aggregate.aggregate.text_count}\n            percentages={[\n              {\n                displayName: 'Likes',\n                percent: prof.course_reviews_aggregate.aggregate.avg.liked,\n              },\n              {\n                displayName: 'Clear',\n                percent: percentClear,\n              },\n              {\n                displayName: 'Engaging',\n                percent: percentEngaging,\n              },\n            ]}\n          />\n        </RatingsSection>\n        <Description ratingBoxWidth={RATING_BOX_WIDTH}>\n          {profCourses.length > 0\n            ? `Currently teaches ${profCourses.join(', ')}`\n            : 'Not currently teaching anything'}\n        </Description>\n      </ProfDescriptionSection>\n    </ProfInfoHeaderWrapper>\n  );\n};\n\nProfInfoHeader.propTypes = {\n  prof: PropTypes.object,\n};\n\nexport default ProfInfoHeader;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const UPDATE_REVIEW_DATA = 'update review data';\n\nconst convertInputToState = data => {\n  if (!data) {\n    return {\n      reviewsByCourse: [],\n      courses: [],\n    };\n  }\n  const reviewsByCourse = data.prof_review.reduce((allCourses, current) => {\n    let courseObject;\n    let foundCourseObject = false;\n    for (let i of allCourses) {\n      if (current.course && current.course.id === i.id) {\n        courseObject = i;\n        foundCourseObject = true;\n        break;\n      }\n    }\n    if (!foundCourseObject) {\n      courseObject = {\n        id: current.course ? current.course.id : -1,\n        name: current.course ? current.course.name : '',\n        code: current.course ? current.course.code : '',\n        liked: current.course\n          ? current.course.course_reviews_aggregate.aggregate.avg.liked\n          : 0,\n        reviews: [],\n      };\n      allCourses.push(courseObject);\n    }\n    courseObject.reviews.push({\n      upvotes: current.prof_review_votes_aggregate.aggregate.sum.vote,\n      review: current.text,\n      reviewer: current.user,\n      metrics: {\n        clear: current.clear,\n        engaging: current.engaging,\n      },\n    });\n    return allCourses;\n  }, []);\n\n  const courses = reviewsByCourse.map(obj => obj.code);\n\n  return {\n    reviewsByCourse,\n    courses,\n  };\n};\n\nconst processDispatch = (currentState, action) => {\n  switch (action.type) {\n    case UPDATE_REVIEW_DATA:\n      return convertInputToState(action.payload);\n    default:\n      return currentState;\n  }\n};\n\nconst useProfReviewsReducer = initialState => {\n  const [state, setState] = useState(convertInputToState(initialState));\n\n  const dispatch = action => {\n    const newState = processDispatch(state, action);\n    setState(newState);\n  };\n\n  return [state, dispatch];\n};\n\nuseProfReviewsReducer.propTypes = {\n  prof_review: PropTypes.arrayOf(\n    PropTypes.shape({\n      clear: PropTypes.number,\n      course: PropTypes.shape({\n        code: PropTypes.string,\n        course_reviews_aggregate: PropTypes.shape({\n          aggregate: PropTypes.shape({\n            avg: PropTypes.shape({\n              liked: PropTypes.number,\n            }),\n          }),\n        }),\n        id: PropTypes.number,\n        name: PropTypes.string,\n      }),\n      prof_review_votes_aggregate: PropTypes.shape({\n        aggregate: PropTypes.shape({\n          sum: PropTypes.shape({\n            vote: PropTypes.number,\n          }),\n        }),\n      }),\n      text: PropTypes.string,\n      user: PropTypes.shape({\n        full_name: PropTypes.string,\n        id: PropTypes.number,\n        program: PropTypes.string,\n      }),\n    }),\n  ),\n};\n\nexport default useProfReviewsReducer;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Card,\n  Heading2,\n  Body,\n  Heading4,\n  Heading1,\n  BoxShadow,\n  Heading3,\n} from '../../../../constants/Mixins';\n\nexport const ProfCourseReviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${({ theme }) => theme.dark2};\n`;\n\nexport const ProfCourseFilterWrapper = styled.div`\n  ${Card()}\n  ${BoxShadow}\n  padding-bottom: 0;\n  padding-top: 16px;\n  margin-bottom: 32px;\n`;\n\nexport const NoReviewsBox = styled.div`\n  display: flex;\n  padding: 32px;\n  background: white;\n  align-items: center;\n  justify-content: flex-start;\n  ${Heading3}\n  color: ${({ theme }) => theme.dark2}\n`;\n\nexport const ReviewsForSingleCourseWrapper = styled.div`\n  ${Card('0')}\n  ${BoxShadow}\n  padding-bottom: 0;\n  margin-bottom: 32px;\n`;\n\nexport const ReviewListWrapper = styled.div`\n  padding: 32px 32px 0 32px;\n`;\n\nexport const CourseRatings = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  margin-right: 24px;\n`;\n\nexport const CourseNameAndCode = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CourseCode = styled(Link)`\n  ${Heading2}\n  color: ${({ theme }) => theme.courses};\n  margin-bottom: 16px;\n`;\n\nexport const CourseName = styled.div`\n  ${Heading2}\n  font-size: 24px;\n`;\n\nexport const DropdownPanelWrapper = styled.div`\n  display: flex;\n  margin: 16px 32px 32px 0;\n  align-items: center;\n`;\n\nexport const DropdownTableText = styled.div`\n  ${Heading4}\n  color: ${({ theme }) => theme.dark1};\n`;\n\nexport const CourseLikedMetric = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CourseLikedPercent = styled.div`\n  ${Heading1}\n`;\n\nexport const CourseLikedPercentLabel = styled.div`\n  ${Body}\n  width: 64px;\n  margin-left: 16px;\n`;\n\nexport const ShowMoreReviewsSection = styled.div`\n  background: ${({ theme }) => theme.light3};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  cursor: pointer;\n`;\n\nexport const ShowMoreReviewsText = styled.div`\n  ${Heading4}\n  cursor: pointer;\n`;\n","import gql from 'graphql-tag';\n\nconst ProfReviewFragment = {\n  profCoursesReviewInfo: gql`\n    fragment ProfReviewInfoFragment on prof_review {\n      text\n      course {\n        id\n        name\n        code\n        course_reviews_aggregate {\n          aggregate {\n            avg {\n              liked\n            }\n          }\n        }\n      }\n      engaging\n      clear\n      user {\n        id\n        full_name\n        program\n      }\n      prof_review_votes_aggregate {\n        aggregate {\n          sum {\n            vote\n          }\n        }\n      }\n    }\n  `,\n};\n\nexport default ProfReviewFragment;\n","import gql from 'graphql-tag';\n\nimport ProfReviewFragment from '../../fragments/prof/ProfReviewFragment.jsx';\n\nexport const GET_PROF_REVIEW = gql`\n  query GET_PROF_REVIEW($id: Int) {\n    prof_review(where: { prof_id: { _eq: $id }, text: { _is_null: false } }) {\n      ...ProfReviewInfoFragment\n    }\n  }\n  ${ProfReviewFragment.profCoursesReviewInfo}\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from 'react-apollo';\nimport { withTheme } from 'styled-components';\n\n/* Custom Reducers */\nimport useProfReviewsReducer, {\n  UPDATE_REVIEW_DATA,\n} from '../../../data/custom_hooks/UseProfReviewsReducer';\n\n/* Styled Components */\nimport {\n  ProfCourseReviewWrapper,\n  ReviewsForSingleCourseWrapper,\n  ReviewListWrapper,\n  NoReviewsBox,\n  CourseHeader,\n  CourseNameAndCode,\n  CourseCode,\n  CourseName,\n  DropdownPanelWrapper,\n  DropdownTableText,\n  CourseLikedMetric,\n  CourseLikedPercent,\n  CourseLikedPercentLabel,\n  ProfCourseFilterWrapper,\n  ShowMoreReviewsSection,\n  ShowMoreReviewsText,\n} from './styles/ProfReviews';\n\n/* Child Components */\nimport Review from '../common/Review';\nimport DropdownList from '../../../components/input/DropdownList';\nimport LoadingSpinner from '../../../components/display/LoadingSpinner';\n\n/* GraphQL Queries */\nimport { GET_PROF_REVIEW } from '../../../graphql/queries/prof/ProfReview.jsx';\n\nimport { splitCourseCode } from '../../../utils/Misc';\nimport { getCoursePageRoute } from '../../../Routes';\nimport { MIN_REVIEWS_SHOWN } from '../../../constants/PageConstants';\n\nconst ProfReviews = ({ profID, theme }) => {\n  const [selectedFilter, setSelectedFilter] = useState(0);\n  const [selectedSort, setSelectedSort] = useState(0);\n  const { loading, data } = useQuery(GET_PROF_REVIEW, {\n    variables: { id: profID },\n  });\n  const [reviewDataState, dispatch] = useProfReviewsReducer(data);\n  const [showingReviewsMap, setShowingReviewsMap] = useState({});\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_REVIEW_DATA,\n        payload: data,\n      });\n    }\n  }, [data]);\n\n  if (loading) {\n    return (\n      <ProfCourseReviewWrapper>\n        <LoadingSpinner />\n      </ProfCourseReviewWrapper>\n    );\n  }\n\n  const courseFilterOptions = ['show all courses', ...reviewDataState.courses];\n  const courseFilterDisplayOptions = [\n    'show all courses',\n    ...reviewDataState.courses.map(code => splitCourseCode(code)),\n  ];\n\n  const reviewsByCourseToShow = reviewDataState.reviewsByCourse.filter(\n    reviews =>\n      selectedFilter === 0 ||\n      reviews.code === courseFilterOptions[selectedFilter],\n  );\n\n  if (reviewDataState.courses.length == 0) {\n    return <NoReviewsBox>No Reviews</NoReviewsBox>;\n  }\n\n  return (\n    <ProfCourseReviewWrapper>\n      <ProfCourseFilterWrapper>\n        <DropdownPanelWrapper>\n          <DropdownTableText>Filter by course: </DropdownTableText>\n          <DropdownList\n            color={theme.courses}\n            selectedIndex={selectedFilter}\n            options={courseFilterDisplayOptions}\n            onChange={value => setSelectedFilter(value)}\n            zIndex={5}\n          />\n        </DropdownPanelWrapper>\n      </ProfCourseFilterWrapper>\n      {reviewsByCourseToShow.map((course, idx) => {\n        return (\n          <ReviewsForSingleCourseWrapper key={idx}>\n            <ReviewListWrapper>\n              <CourseHeader key={course.id}>\n                <CourseNameAndCode>\n                  <CourseCode to={getCoursePageRoute(course.code)}>\n                    {splitCourseCode(course.code)}\n                  </CourseCode>\n                  <CourseName>{course.name}</CourseName>\n                </CourseNameAndCode>\n                <CourseLikedMetric>\n                  <CourseLikedPercent>\n                    {Math.round(course.liked * 100)}%\n                  </CourseLikedPercent>\n                  <CourseLikedPercentLabel>\n                    liked this course\n                  </CourseLikedPercentLabel>\n                </CourseLikedMetric>\n              </CourseHeader>\n              <DropdownPanelWrapper>\n                <DropdownTableText>Sort by: </DropdownTableText>\n                <DropdownList\n                  color={theme.primary}\n                  selectedIndex={selectedSort}\n                  options={['most helpful', 'most recent']}\n                  onChange={value => setSelectedSort(value)}\n                />\n              </DropdownPanelWrapper>\n              {course.reviews.map((review, i) => {\n                if (i < MIN_REVIEWS_SHOWN || showingReviewsMap[course.code])\n                  return (\n                    <Review\n                      key={review.reviewer.full_name}\n                      upvotes={review.upvotes}\n                      review={review.review}\n                      reviewer={review.reviewer}\n                      metrics={review.metrics}\n                    />\n                  );\n              })}\n            </ReviewListWrapper>\n            {course.reviews.length > MIN_REVIEWS_SHOWN && (\n              <ShowMoreReviewsSection\n                onClick={() =>\n                  setShowingReviewsMap({\n                    ...showingReviewsMap,\n                    [course.code]: !showingReviewsMap[course.code],\n                  })\n                }\n              >\n                <ShowMoreReviewsText>\n                  {showingReviewsMap[idx]\n                    ? `Show less reviews`\n                    : `Show all ${course.reviews.length} reviews`}\n                </ShowMoreReviewsText>\n              </ShowMoreReviewsSection>\n            )}\n          </ReviewsForSingleCourseWrapper>\n        );\n      })}\n    </ProfCourseReviewWrapper>\n  );\n};\n\nProfReviews.propTypes = {\n  profID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withTheme(ProfReviews);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  ProfPageWrapper,\n  ColumnWrapper,\n  Column1,\n  Column2,\n} from './styles/ProfPage';\n\n/* Child Components */\nimport ProfInfoHeader from './ProfInfoHeader';\nimport ProfReviews from './ProfReviews';\n\nconst ProfPageContent = ({ prof }) => {\n  console.log(prof);\n  return (\n    <>\n      <ProfInfoHeader prof={prof} />\n      <ColumnWrapper>\n        <Column1>\n          <ProfReviews profID={prof.id} />\n        </Column1>\n        <Column2 />\n      </ColumnWrapper>\n    </>\n  );\n};\n\nconst ProfPage = ({ data }) => (\n  <ProfPageWrapper>\n    <ProfPageContent prof={data.prof[0]} />\n  </ProfPageWrapper>\n);\n\nProfPage.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default ProfPage;\n","import styled from 'styled-components';\n\nexport const ProfPageWrapper = styled.div`\n  width: 100%;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.light1};\n`;\n","import styled from 'styled-components';\n\n/* Mixins */\nimport { Heading1, Heading3 } from '../../../../constants/Mixins';\n\nexport const ProfInfoHeaderWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 32px;\n  display: flex;\n  background-color: white;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const ProfNameSection = styled.div`\n  width: 100%;\n  padding-top: 48px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  background-color: ${({ theme }) => theme.primaryExtraDark};\n  position: relative;\n  padding: 16px;\n`;\n\nexport const ProfName = styled.div`\n  max-width: calc(100% - ${({ ratingBoxWidth }) => ratingBoxWidth}px);\n  color: ${({ theme }) => theme.white};\n  ${Heading1}\n`;\n\nexport const ProfCoursesText = styled.div`\n  ${Heading3}\n  color: ${({ theme }) => theme.dark2};\n  padding: 16px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Child Components */\nimport RatingBox from '../common/RatingBox';\n\n/* Styled Components */\nimport {\n  ProfInfoHeaderWrapper,\n  ProfNameSection,\n  ProfName,\n  ProfCoursesText,\n} from './styles/ProfInfoHeader';\n\nimport { splitCourseCode } from '../../../utils/Misc';\n\nconst ProfInfoHeader = ({ prof }) => {\n  const percentClear = prof.prof_reviews_aggregate.aggregate.avg.clear / 5;\n  const percentEngaging =\n    prof.prof_reviews_aggregate.aggregate.avg.engaging / 5;\n  const profCourses = prof.prof_courses.map(course =>\n    splitCourseCode(course.code),\n  );\n\n  return (\n    <ProfInfoHeaderWrapper>\n      <ProfNameSection>\n        <ProfName>{prof.name}</ProfName>\n      </ProfNameSection>\n      <RatingBox\n        numRatings={prof.prof_reviews_aggregate.aggregate.count}\n        numComments={prof.prof_reviews_aggregate.aggregate.text_count}\n        percentages={[\n          {\n            displayName: 'Likes',\n            percent: prof.course_reviews_aggregate.aggregate.avg.liked,\n          },\n          {\n            displayName: 'Clear',\n            percent: percentClear,\n          },\n          {\n            displayName: 'Engaging',\n            percent: percentEngaging,\n          },\n        ]}\n      />\n      <ProfCoursesText>\n        {profCourses.length > 0\n          ? `Currently teaches ${profCourses.join(', ')}`\n          : 'Not currently teaching anything'}\n      </ProfCoursesText>\n    </ProfInfoHeaderWrapper>\n  );\n};\n\nProfInfoHeader.propTypes = {\n  prof: PropTypes.object,\n};\n\nexport default ProfInfoHeader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  Heading2,\n  Heading3,\n  Heading4,\n  Body,\n  BoxShadow,\n} from '../../../../constants/Mixins';\n\nexport const ProfCourseReviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const NoReviewsBox = styled.div`\n  display: flex;\n  padding: 16px;\n  background: white;\n  align-items: center;\n  justify-content: flex-start;\n  ${Heading3}\n  color: ${({ theme }) => theme.dark2}\n`;\n\nexport const DropdownPanelWrapper = styled.div`\n  display: flex;\n  padding: 16px;\n  background: white;\n  ${BoxShadow}\n  margin-bottom: 32px;\n`;\n\nexport const DropdownTableText = styled.div`\n  ${Heading4}\n  white-space: nowrap;\n`;\n\nexport const ReviewsForSingleCourseWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: white;\n  margin-bottom: 48px;\n  ${BoxShadow}\n`;\n\nexport const CourseCode = styled(Link)`\n  ${Heading2}\n  color: ${({ theme }) => theme.courses}\n  margin: 16px;\n`;\n\nexport const CourseLikedMetric = styled.div`\n  display: flex;\n  margin: 8px 16px 16px 16px;\n  align-items: center;\n`;\n\nexport const CourseLikedPercent = styled.div`\n  ${Heading2}\n  margin-right: 16px;\n`;\n\nexport const CourseLikedPercentLabel = styled.div`\n  ${Body}\n`;\n\nexport const ProfDropdownPanelWrapper = styled.div`\n  display: flex;\n  padding: 24px 16px;\n  border-bottom: 2px solid ${({ theme }) => theme.light2};\n`;\n\nexport const ShowMoreReviewsSection = styled.div`\n  background: ${({ theme }) => theme.light3};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  cursor: pointer;\n`;\n\nexport const ShowMoreReviewsText = styled.div`\n  ${Heading4}\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\n\n/* Custom Reducers */\nimport useProfReviewsReducer, {\n  UPDATE_REVIEW_DATA,\n} from '../../../data/custom_hooks/UseProfReviewsReducer';\n\n/* GraphQL Queries */\nimport { GET_PROF_REVIEW } from '../../../graphql/queries/prof/ProfReview.jsx';\n\n/* Styled Components */\nimport {\n  ProfCourseReviewWrapper,\n  NoReviewsBox,\n  DropdownPanelWrapper,\n  DropdownTableText,\n  ReviewsForSingleCourseWrapper,\n  CourseCode,\n  CourseLikedMetric,\n  CourseLikedPercent,\n  CourseLikedPercentLabel,\n  ShowMoreReviewsSection,\n  ShowMoreReviewsText,\n} from './styles/ProfReviews';\n\n/* Child Components */\nimport DropdownList from '../../../components/input/DropdownList.jsx';\nimport Review from '../common/Review.jsx';\nimport LoadingSpinner from '../../../components/display/LoadingSpinner.jsx';\n\nimport { splitCourseCode } from '../../../utils/Misc';\nimport { getCoursePageRoute } from '../../../Routes.jsx';\nimport { MIN_REVIEWS_SHOWN } from '../../../constants/PageConstants';\n\nconst ProfReviews = ({ profID, theme }) => {\n  const [selectedFilter, setSelectedFilter] = useState(0);\n  const { loading, data } = useQuery(GET_PROF_REVIEW, {\n    variables: { id: profID },\n  });\n  const [reviewDataState, dispatch] = useProfReviewsReducer(data);\n  const [showingReviewsMap, setShowingReviewsMap] = useState({});\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_REVIEW_DATA,\n        payload: data,\n      });\n    }\n  }, [data]);\n\n  if (loading) {\n    return (\n      <ProfCourseReviewWrapper>\n        <LoadingSpinner />\n      </ProfCourseReviewWrapper>\n    );\n  }\n\n  const courseFilterOptions = ['show all courses', ...reviewDataState.courses];\n  const courseFilterDisplayOptions = [\n    'show all courses',\n    ...reviewDataState.courses.map(code => splitCourseCode(code)),\n  ];\n\n  const reviewsByCourseToShow = reviewDataState.reviewsByCourse.filter(\n    reviews =>\n      selectedFilter === 0 ||\n      reviews.code === courseFilterOptions[selectedFilter],\n  );\n\n  if (reviewDataState.courses.length == 0) {\n    return <NoReviewsBox>No Reviews</NoReviewsBox>;\n  }\n\n  return (\n    <>\n      <DropdownPanelWrapper>\n        <DropdownTableText>Filter by course: </DropdownTableText>\n        <DropdownList\n          color={theme.courses}\n          selectedIndex={selectedFilter}\n          options={courseFilterDisplayOptions}\n          onChange={value => setSelectedFilter(value)}\n        />\n      </DropdownPanelWrapper>\n      <ProfCourseReviewWrapper>\n        {reviewsByCourseToShow.map((course, idx) => {\n          return (\n            <ReviewsForSingleCourseWrapper key={idx}>\n              <CourseCode to={getCoursePageRoute(course.code)}>\n                {splitCourseCode(course.code)}\n              </CourseCode>\n              <CourseLikedMetric>\n                <CourseLikedPercent>\n                  {Math.round(course.liked * 100)}%\n                </CourseLikedPercent>\n                <CourseLikedPercentLabel>\n                  liked this course\n                </CourseLikedPercentLabel>\n              </CourseLikedMetric>\n              {course.reviews.map((review, i) => {\n                if (i < MIN_REVIEWS_SHOWN || showingReviewsMap[course.code])\n                  return (\n                    <Review\n                      key={review.reviewer.full_name}\n                      upvotes={review.upvotes}\n                      review={review.review}\n                      reviewer={review.reviewer}\n                      metrics={review.metrics}\n                    />\n                  );\n              })}\n              {course.reviews.length > MIN_REVIEWS_SHOWN && (\n                <ShowMoreReviewsSection\n                  onClick={() =>\n                    setShowingReviewsMap({\n                      ...showingReviewsMap,\n                      [course.code]: !showingReviewsMap[course.code],\n                    })\n                  }\n                >\n                  <ShowMoreReviewsText>\n                    {showingReviewsMap[course.code]\n                      ? `Show less reviews`\n                      : `Show all ${course.reviews.length} reviews`}\n                  </ShowMoreReviewsText>\n                </ShowMoreReviewsSection>\n              )}\n            </ReviewsForSingleCourseWrapper>\n          );\n        })}\n      </ProfCourseReviewWrapper>\n    </>\n  );\n};\n\nProfReviews.propTypes = {\n  profID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withTheme(ProfReviews);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport { ProfPageWrapper } from './styles/ProfPage';\n\n/* Child Components */\nimport ProfInfoHeader from './ProfInfoHeader';\nimport ProfReviews from './ProfReviews';\n\nconst ProfPageContent = ({ prof }) => {\n  return (\n    <>\n      <ProfInfoHeader prof={prof} />\n      <ProfReviews profID={prof.id} />\n    </>\n  );\n};\n\nconst ProfPage = ({ data }) => (\n  <ProfPageWrapper>\n    <ProfPageContent prof={data.prof[0]} />\n  </ProfPageWrapper>\n);\n\nProfPage.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default ProfPage;\n","import gql from 'graphql-tag';\n\nimport ProfFragment from '../../fragments/prof/ProfFragment.jsx';\n\nexport const GET_PROF = gql`\n  query GET_PROF($code: String) {\n    prof(where: { code: { _eq: $code } }) {\n      ...ProfInfoFragment\n      ...ProfProfReviewsAggregateFragment\n      ...ProfCourseReviewsAggregateFragment\n      ...ProfCoursesTaughtFragment\n    }\n  }\n  ${ProfFragment.profInfo}\n  ${ProfFragment.profProfReviewsAggregate}\n  ${ProfFragment.profCourseReviewsAggregate}\n  ${ProfFragment.profCoursesTaught}\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useQuery } from 'react-apollo';\nimport PropTypes from 'prop-types';\n\n/* Selectors */\nimport { getIsBrowserDesktop } from '../data/reducers/BrowserReducer';\n\n/* Child Components */\nimport DesktopProfPage from '../desktop/components/profPage/ProfPage';\nimport MobileProfPage from '../mobile/components/profPage/ProfPage';\nimport LoadingSpinner from '../components/display/LoadingSpinner';\nimport NotFoundPage from '../desktop/components/notFoundPage/NotFoundPage';\n\n/* Queries */\nimport { GET_PROF } from '../graphql/queries/prof/Prof';\n\nconst mapStateToProps = state => ({\n  isDesktopPage: getIsBrowserDesktop(state),\n});\n\nexport const ProfPageSwitch = ({ isDesktopPage, match }) => {\n  const profCode = match.params.profCode.toLowerCase();\n  const { loading, error, data } = useQuery(GET_PROF, {\n    variables: { code: profCode },\n  });\n\n  return loading ? (\n    <LoadingSpinner />\n  ) : error || !data || data.prof.length === 0 ? (\n    <NotFoundPage text=\"Sorry, we couldn't find that professor!\" />\n  ) : isDesktopPage ? (\n    <DesktopProfPage data={data} />\n  ) : (\n    <MobileProfPage data={data} />\n  );\n};\n\nProfPageSwitch.propTypes = {\n  isDesktopPage: PropTypes.bool,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ profCode: PropTypes.string }),\n  }),\n};\n\nexport default withRouter(connect(mapStateToProps)(ProfPageSwitch));\n"],"sourceRoot":""}