{"version":3,"sources":["graphql/queries/course/CourseReview.jsx","graphql/queries/prof/ProfReview.jsx","components/display/styles/RatingBox.jsx","components/display/styles/ProgressBar.jsx","components/display/ProgressBar.jsx","components/statistics/styles/CircularPercentage.jsx","components/statistics/CircularPercentage.jsx","components/display/RatingBox.jsx","components/display/styles/Review.jsx","components/input/styles/BubbleRatings.jsx","components/input/BubbleRatings.jsx","graphql/mutations/Upvote.jsx","components/display/Review.jsx"],"names":["GET_COURSE_REVIEW","gql","ReviewFragment","reviewInfo","courseReviewVotes","profReviewVotes","reviewAggregate","REFETCH_COURSE_REVIEW_UPVOTE","GET_PROF_REVIEW","REFETCH_PROF_REVIEW_UPVOTE","RatingBoxWrapper","styled","div","breakpoint","ratingBoxWidth","ratingBoxHeight","BoxShadow","CircularPercentageWrapper","RatingBarsColumn","ProgressWrapper","ProgressTextLabel","ProgressBarWrapper","ProgressNumberLabel","Body","ReviewsAndGraphButtonWrapper","NumCommentsAndRatingsWrapper","NumCommentsWrapper","theme","dark3","NumRatingsWrapper","width","Number","isInteger","height","light3","Complete","span","primary","ProgressBar","percentComplete","percentWidth","Math","round","CircleWrapper","NumbersInCircle","LargePercentage","Heading1","GreyText","dark2","Small","withTheme","percent","barThickness","label","dataKey","data","value","cx","cy","outerRadius","innerRadius","fill","RATING_BOX_HEIGHT","RATING_BOX_WIDTH","connect","state","getWidth","isBrowserDesktop","getIsBrowserDesktop","percentages","numRatings","numComments","likedPercent","min","map","metric","ind","key","displayName","ReviewWrapper","light1","Card","ReviewPictureAndMetricsRow","ReviewPictureAndUpvotesWrapper","ReviewPicture","ReviewUpvotes","button","selected","primaryDark","light2","ReviewTextWrapper","ReviewText","ReviewAuthor","dark1","ReviewMetricsWrapper","table","ReviewMetricsBody","tbody","SingleMetricWrapper","tr","SingleMetricSquares","td","SingleMetricLabel","UpvoteNumber","BubbleRatingsWrapper","UnitCircle","diameter","filledColor","emptyColor","filled","light4","ThumbsWrapper","Thumb","colored","Thumbs","boolRating","Squares","rating","total","Array","apply","_","INSERT_COURSE_REVIEW_VOTE","DELETE_COURSE_REVIEW_VOTE","INSERT_PROF_REVIEW_VOTE","DELETE_PROF_REVIEW_VOTE","MetricIfExists","metrics","undefined","charAt","toUpperCase","slice","isLoggedIn","getIsLoggedIn","review","isCourseReview","upvotes","upvote_users","reviewText","author","created_at","userID","localStorage","getItem","refetchQueries","query","variables","review_id","id","dispatch","useDispatch","useState","includes","userUpvoted","setUserUpvoted","useMutation","insertReviewVote","deleteReviewVote","authorNameText","full_name","reviewContent","program","moment","fromNow","onClick","user_id","authModalOpen","color","size","strokeWidth"],"mappings":"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","file":"static/js/3.afed6401.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nimport ReviewFragment from '../../fragments/ReviewFragment';\r\n\r\nexport const GET_COURSE_REVIEW = gql`\r\n  query GET_COURSE_REVIEW($id: Int) {\r\n    review(where: {\r\n      course_id: { _eq: $id },\r\n      course_comment: { _is_null: false }\r\n    }) {\r\n      ...ReviewInfoFragment\r\n      ...CourseReviewVotesFragment\r\n      ...ProfReviewVotesFragment\r\n    }\r\n    review_aggregate(where: { course_id: { _eq: $id } }) {\r\n      ...ReviewAggregateFragment\r\n    }\r\n  }\r\n  ${ReviewFragment.reviewInfo}\r\n  ${ReviewFragment.courseReviewVotes}\r\n  ${ReviewFragment.profReviewVotes}\r\n  ${ReviewFragment.reviewAggregate}\r\n`;\r\n\r\nexport const REFETCH_COURSE_REVIEW_UPVOTE = gql`\r\n  query REFETCH_COURSE_REVIEW_UPVOTE($review_id: Int) {\r\n    review(where: {id: {_eq: $review_id}}) {\r\n      ...CourseReviewVotesFragment\r\n    }\r\n  }\r\n  ${ReviewFragment.courseReviewVotes}\r\n`;\r\n","import gql from 'graphql-tag';\n\nimport ReviewFragment from '../../fragments/ReviewFragment';\n\nexport const GET_PROF_REVIEW = gql`\n  query GET_PROF_REVIEW($id: Int) {\n    review(where: { prof_id: { _eq: $id }, prof_comment: { _is_null: false } }) {\n      ...ReviewInfoFragment\n      ...ProfReviewVotesFragment\n    }\n  }\n  ${ReviewFragment.reviewInfo}\n  ${ReviewFragment.profReviewVotes}\n`;\n\nexport const REFETCH_PROF_REVIEW_UPVOTE = gql`\n  query REFETCH_PROF_REVIEW_UPVOTE($review_id: Int) {\n    review(where: {id: {_eq: $review_id}}) {\n      ...ProfReviewVotesFragment\n    }\n  }\n  ${ReviewFragment.profReviewVotes}\n`;\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { Body, BoxShadow } from '../../../constants/Mixins';\n\nexport const RatingBoxWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  ${breakpoint('tablet')`\n    width: ${({ ratingBoxWidth }) => ratingBoxWidth}px;\n    height: ${({ ratingBoxHeight }) => ratingBoxHeight}px;\n    background-color: white;\n    border-radius: ${({ ratingBoxHeight }) => ratingBoxHeight / 2}px 5px 5px\n      ${({ ratingBoxHeight }) => ratingBoxHeight / 2}px;\n    position: relative;\n    ${BoxShadow}\n    margin-right: 32px;\n  `}\n`;\n\nexport const CircularPercentageWrapper = styled.div`\n  padding: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RatingBarsColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: flex-begin;\n  justify-content: center;\n`;\n\nexport const ProgressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 8px;\n\n  &:first-child {\n    margin-top: 16px;\n  }\n\n  ${breakpoint('mobile', 'desktop')`\n    margin: 0 8px 8px 0;\n  `}\n`;\n\nexport const ProgressTextLabel = styled.div``;\n\nexport const ProgressBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProgressNumberLabel = styled.div`\n  ${Body};\n  margin: 8px;\n`;\n\nexport const ReviewsAndGraphButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const NumCommentsAndRatingsWrapper = styled.div`\n  display: flex;\n  margin: 8px;\n\n  ${breakpoint('mobile', 'desktop')`\n    flex-direction: column;\n    margin: 0 0 16px 0;\n  `}\n`;\n\nexport const NumCommentsWrapper = styled.div`\n  ${Body}\n  color: ${({ theme }) => theme.dark3};\n`;\n\nexport const NumRatingsWrapper = styled.div`\n  ${Body};\n  color: ${({ theme }) => theme.dark3};\n\n  ${breakpoint('desktop')`\n    margin-left: 24px;\n  `}\n`;\n","import styled from 'styled-components';\n\nexport const ProgressBarWrapper = styled.div`\n  width: ${({ width }) => (Number.isInteger(width) ? `${width}px` : width)};\n  height: ${({ height }) => height}px;\n  display: flex;\n  margin: 10px 8px 10px 0;\n  background-color: ${({ theme }) => theme.light3};\n  border-radius: 4px;\n  box-shadow: 0px 2px 5px rgba(236, 237, 237, 0.5),\n    0px 0px 5px rgba(142, 147, 148, 0.2);\n`;\n\nexport const Complete = styled.span`\n  border-radius: ${({ width }) => (width >= 100 ? '4px' : '4px 0 0 4px')};\n  width: ${({ width }) => width}%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.primary};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ProgressBarWrapper, Complete } from './styles/ProgressBar';\n\nconst ProgressBar = ({ percentComplete, width = 188, height = 16 }) => {\n  const percentWidth = Math.round(percentComplete * 100);\n  return (\n    <ProgressBarWrapper width={width} height={height}>\n      <Complete width={percentWidth} />\n    </ProgressBarWrapper>\n  );\n};\n\nProgressBar.propTypes = {\n  percentComplete: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.number,\n};\n\nexport default ProgressBar;\n","import styled from 'styled-components';\nimport { Heading1, Small } from '../../../constants/Mixins';\n\nexport const CircleWrapper = styled.div`\n  position: relative;\n`;\n\nexport const NumbersInCircle = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  bottom: 0;\n  left: 0;\n  height: ${({ height }) => height}px;\n  width: ${({ height }) => height}px;\n  justify-content: center;\n  align-items: center;\n  transform: scale(${({ height }) => height / 212});\n`;\n// Transform: scale is iffy hard code but this seems to be the most veratile way to resize the inner text\n// Or else we'll have to change the font types with if statements\n\nexport const LargePercentage = styled.div`\n  ${Heading1};\n`;\nexport const GreyText = styled.div`\n  color: ${({ theme }) => theme.dark2};\n  ${Small};\n`;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { PieChart, Pie, Cell } from 'recharts';\nimport PropTypes from 'prop-types';\n\n/* Styled Components */\nimport {\n  CircleWrapper,\n  NumbersInCircle,\n  LargePercentage,\n  GreyText,\n} from './styles/CircularPercentage';\n\n//Contained within a square tho\nconst CircularPercentage = ({\n  theme,\n  height,\n  percent,\n  barThickness,\n  label,\n}) => (\n  <CircleWrapper>\n    <PieChart width={height} height={height}>\n      <Pie\n        dataKey=\"value\"\n        data={[{ value: percent }, { value: 100 - percent }]}\n        cx=\"50%\"\n        cy=\"50%\"\n        outerRadius={height / 2}\n        innerRadius={height / 2 - barThickness}\n      >\n        <Cell fill={theme.primary} />\n        <Cell fill={theme.light3} />\n      </Pie>\n    </PieChart>\n    <NumbersInCircle height={height}>\n      <LargePercentage>{percent}%</LargePercentage>\n      <GreyText>{label}</GreyText>\n    </NumbersInCircle>\n  </CircleWrapper>\n);\n\nCircularPercentage.propTypes = {\n  height: PropTypes.number,\n  percent: PropTypes.number, //Out of 100, not as a decimal\n  barThickness: PropTypes.number,\n  label: PropTypes.string,\n};\n\nexport default withTheme(CircularPercentage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n/* Selectors */\nimport {\n  getWidth,\n  getIsBrowserDesktop,\n} from '../../data/reducers/BrowserReducer';\n\n/* Styled Components */\nimport {\n  RatingBoxWrapper,\n  CircularPercentageWrapper,\n  RatingBarsColumn,\n  ProgressWrapper,\n  ProgressTextLabel,\n  ProgressBarWrapper,\n  ProgressNumberLabel,\n  ReviewsAndGraphButtonWrapper,\n  NumCommentsAndRatingsWrapper,\n  NumCommentsWrapper,\n  NumRatingsWrapper,\n} from './styles/RatingBox';\n\n/* Child Components */\nimport ProgressBar from './ProgressBar';\nimport CircularPercentage from '../statistics/CircularPercentage';\n\nexport const RATING_BOX_HEIGHT = 244;\nexport const RATING_BOX_WIDTH = 512;\n\nconst mapStateToProps = state => ({\n  width: getWidth(state),\n  isBrowserDesktop: getIsBrowserDesktop(state),\n});\n\n/*\n  NOTE DATA FOR \"LIKED\" MUST BE PERCENTAGES[0]\n*/\nconst RatingBox = ({\n  percentages,\n  numRatings,\n  numComments,\n  width,\n  isBrowserDesktop,\n}) => {\n  const likedPercent = Math.round(percentages[0].percent * 100);\n\n  return (\n    <RatingBoxWrapper\n      ratingBoxHeight={RATING_BOX_HEIGHT}\n      ratingBoxWidth={RATING_BOX_WIDTH}\n    >\n      <CircularPercentageWrapper>\n        <CircularPercentage\n          height={\n            isBrowserDesktop\n              ? RATING_BOX_HEIGHT - 32\n              : Math.min(width / 2 - 32, 200)\n          }\n          percent={likedPercent}\n          barThickness={16}\n          label=\"liked\"\n        />\n      </CircularPercentageWrapper>\n      <RatingBarsColumn>\n        {percentages.map((metric, ind) =>\n          ind === 0 ? null : (\n            <ProgressWrapper key={metric.displayName}>\n              <ProgressTextLabel>{metric.displayName}</ProgressTextLabel>\n              <ProgressBarWrapper>\n                <ProgressBar percentComplete={metric.percent} width=\"100%\" />\n                <ProgressNumberLabel>\n                  {Math.round(metric.percent * 100)}%\n                </ProgressNumberLabel>\n              </ProgressBarWrapper>\n            </ProgressWrapper>\n          ),\n        )}\n        <ReviewsAndGraphButtonWrapper>\n          <NumCommentsAndRatingsWrapper>\n            <NumCommentsWrapper>\n              {numComments} {numComments === 1 ? 'comment' : 'comments'}\n            </NumCommentsWrapper>\n            <NumRatingsWrapper>\n              {numRatings} {numRatings === 1 ? 'rating' : 'ratings'}\n            </NumRatingsWrapper>\n          </NumCommentsAndRatingsWrapper>\n          {/* Graph button goes here */}\n        </ReviewsAndGraphButtonWrapper>\n      </RatingBarsColumn>\n    </RatingBoxWrapper>\n  );\n};\n\nRatingBox.propTypes = {\n  percentages: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayName: PropTypes.string,\n      percent: PropTypes.number,\n    }),\n  ),\n  numRatings: PropTypes.number,\n  numComments: PropTypes.number,\n  theme: PropTypes.object,\n};\n\nexport default connect(mapStateToProps)(RatingBox);\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { Card, BoxShadow, Body } from '../../../constants/Mixins';\n\nexport const ReviewWrapper = styled.div`\n  ${BoxShadow}\n  margin-bottom: 32px;\n  background-color: ${({ theme }) => theme.light1};\n\n  ${breakpoint('mobile', 'desktop')`\n    padding: 16px;\n    align-content: center;\n  `}\n\n  ${breakpoint('desktop')`\n    ${Card('24px 32px')}\n    margin-bottom: 32px;\n    justify-content: space-between;\n    flex-direction: row;\n  `}\n`;\n\nexport const ReviewPictureAndMetricsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const ReviewPictureAndUpvotesWrapper = styled.div`\n  display: flex;\n  margin-bottom: 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    align-items: center;\n  `}\n\n  ${breakpoint('tablet')`\n    margin-right: 32px;\n    position: relative;\n  `}\n`;\n\nexport const ReviewPicture = styled.div`\n  width: 64px;\n  height: 64px;\n  background-color: ${({ theme }) => theme.dark3};\n  border-radius: 32px 32px 32px 32px;\n\n  ${breakpoint('mobile', 'tablet')`\n    margin-right: 8px;\n  `}\n`;\n\nexport const ReviewUpvotes = styled.button`\n  padding: 0;\n  width: 40px;\n  height: 40px;\n  background-color: ${({ selected, theme }) => selected ?\n    theme.primary : theme.light1};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  border-radius: 20px 20px 20px 20px;\n  border: 2px solid ${({ theme }) => theme.light3};\n  cursor: pointer;\n\n  &:hover, &:focus {\n    ${({ selected, theme }) =>\n      `background-color:${selected ? theme.primaryDark : theme.light2};`}\n  }\n\n  ${breakpoint('tablet')`\n    position: absolute;\n    top: 36px;\n    right: -16px;\n    cursor: pointer;\n  `}\n`;\n\nexport const ReviewTextWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  word-wrap: break-word;\n`;\n\nexport const ReviewText = styled.div`\n  word-break: break-word;\n  ${Body}\n`;\n\nexport const ReviewAuthor = styled.div`\n  ${Body}\n  margin-top: 16px;\n  color: ${({ theme }) => theme.dark1};\n`;\n\nexport const ReviewMetricsWrapper = styled.table`\n  min-width: 168px;\n  margin-left: 16px;\n`;\n\nexport const ReviewMetricsBody = styled.tbody``;\n\nexport const SingleMetricWrapper = styled.tr``;\n\nexport const SingleMetricSquares = styled.td`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const SingleMetricLabel = styled.td`\n  ${Body}\n  color: ${({ theme }) => theme.dark2};\n  padding-left: 8px;\n  vertical-align: top;\n`;\n\nexport const UpvoteNumber = styled.div`\n  ${Body}\n  color: ${({ selected, theme }) => (selected ? 'white' : theme.dark3)}\n  margin-left: 4px;\n`;\n","import styled from 'styled-components';\nimport { Body, BoxShadow } from '../../../constants/Mixins';\n\nexport const BubbleRatingsWrapper = styled.div`\n  display: flex;\n  padding-bottom: 16px;\n\n  @media only screen and (max-width: 800px) {\n    padding-bottom: 8px\n  }\n`;\n\nexport const UnitCircle = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${({ diameter }) => diameter}px;\n  height: ${({ diameter }) => diameter}px;\n  border-radius: ${({ diameter }) => diameter / 2}px;\n  background-color: ${({ filledColor, emptyColor, theme, filled }) =>\n    filled\n      ? filledColor\n        ? filledColor\n        : theme.primary\n      : emptyColor\n      ? emptyColor\n      : 'white'};\n  border: 2px solid ${({ filled, theme }) => (filled ? theme.primaryDark : theme.light4)};\n  margin: 0 1px;\n  ${({ filled }) => (filled ? '' : BoxShadow)}\n`;\n\nexport const ThumbsWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Thumb = styled.div`\n  ${Body}\n  color: ${({theme, colored}) => colored ? theme.primary : theme.light4};\n  margin-left: 4px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThumbsUp, ThumbsDown } from 'react-feather';\nimport { withTheme } from 'styled-components';\n\n/* Styled Components */\nimport {\n  BubbleRatingsWrapper,\n  UnitCircle,\n  ThumbsWrapper,\n  Thumb\n} from './styles/BubbleRatings';\n\nconst Thumbs = ({ boolRating }) => (\n  <ThumbsWrapper>\n    <Thumb colored={boolRating === true}>\n      <ThumbsUp width={20} height={20} />\n    </Thumb>\n    <Thumb colored={boolRating === false}>\n      <ThumbsDown width={20} height={20} />\n    </Thumb>\n  </ThumbsWrapper>\n);\n\nconst Squares = ({ rating, total }) => (\n  <>\n    {Array.apply(null, Array(total)).map((_, ind) => {\n      return (\n        <UnitCircle\n          key={ind}\n          filled={ind < rating}\n          diameter={16}\n        />\n      );\n    })}\n  </>\n);\n\n/*\n  Provides either a row of circles indicating a rating out of 5 or \n  a Y and N block indicating a rating for yes or no (for the liked it rating for courses)\n*/\nconst BubbleRatings = ({ total = 5, rating, boolRating, theme }) => {\n  return (\n    <BubbleRatingsWrapper>\n      {boolRating === true || boolRating === false ? (\n        <Thumbs boolRating={boolRating} />\n      ) : (\n        <Squares rating={rating} total={total} />\n      )}\n    </BubbleRatingsWrapper>\n  );\n};\n\nBubbleRatings.propTypes = {\n  total: PropTypes.number, //int total that the rating is out of (5 for us rn)\n  rating: PropTypes.number, // int rating that is given (out of 5)\n  boolRating: PropTypes.bool, //This will be not null/undefined if we want to use this intead of a number out of 5\n  theme: PropTypes.object,\n};\n\nexport default withTheme(BubbleRatings);\n","import gql from 'graphql-tag';\n\nexport const INSERT_COURSE_REVIEW_VOTE = gql`\n  mutation INSERT_COURSE_REVIEW_VOTE(\n    $user_id: Int,\n    $review_id: Int\n  ) {\n    insert_course_review_upvote(objects: {review_id: $review_id, user_id: $user_id}) {\n      affected_rows\n    }\n  }\n`;\n\nexport const DELETE_COURSE_REVIEW_VOTE = gql`\n  mutation DELETE_COURSE_REVIEW_VOTE(\n    $user_id: Int,\n    $review_id: Int\n  ) {\n    delete_course_review_upvote(where: {user_id: {_eq: $user_id}, review_id: {_eq: $review_id}}) {\n      affected_rows\n    }\n  }\n`;\n\nexport const INSERT_PROF_REVIEW_VOTE = gql`\n  mutation INSERT_PROF_REVIEW_VOTE(\n    $user_id: Int,\n    $review_id: Int\n  ) {\n    insert_prof_review_upvote(objects: {review_id: $review_id, user_id: $user_id}) {\n      affected_rows\n    }\n  }\n`;\n\nexport const DELETE_PROF_REVIEW_VOTE = gql`\n  mutation DELETE_PROF_REVIEW_VOTE(\n    $user_id: Int,\n    $review_id: Int\n  ) {\n    delete_prof_review_upvote(where: {user_id: {_eq: $user_id}, review_id: {_eq: $review_id}}) {\n      affected_rows\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { ThumbsUp } from 'react-feather';\nimport moment from 'moment';\nimport { useMutation } from 'react-apollo';\n\n/* Selectors */\nimport { getIsBrowserDesktop } from '../../data/reducers/BrowserReducer';\nimport { getIsLoggedIn } from '../../data/reducers/AuthReducer';\nimport { authModalOpen } from '../../data/actions/AuthActions';\n\n/* Styled Components */\nimport {\n  ReviewWrapper,\n  ReviewPictureAndMetricsRow,\n  ReviewTextWrapper,\n  ReviewMetricsWrapper,\n  ReviewMetricsBody,\n  ReviewPictureAndUpvotesWrapper,\n  ReviewPicture,\n  ReviewUpvotes,\n  ReviewText,\n  ReviewAuthor,\n  UpvoteNumber,\n  SingleMetricWrapper,\n  SingleMetricSquares,\n  SingleMetricLabel,\n} from './styles/Review';\n\n/* Child Components */\nimport BubbleRatings from '../input/BubbleRatings';\n\n/* GraphQL */\nimport {\n  DELETE_COURSE_REVIEW_VOTE,\n  DELETE_PROF_REVIEW_VOTE,\n  INSERT_COURSE_REVIEW_VOTE,\n  INSERT_PROF_REVIEW_VOTE\n} from '../../graphql/mutations/Upvote';\nimport { REFETCH_COURSE_REVIEW_UPVOTE } from '../../graphql/queries/course/CourseReview';\nimport { REFETCH_PROF_REVIEW_UPVOTE } from '../../graphql/queries/prof/ProfReview';\n\nconst mapStateToProps = state => ({\n  isBrowserDesktop: getIsBrowserDesktop(state),\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nconst MetricIfExists = (metrics, metric) => {\n  if (metrics[metric] !== null && metrics[metric] !== undefined) {\n    if (metrics[metric] === true || metrics[metric] === false) {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings boolRating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {metric === 'liked' ? 'Liked' : metric}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    } else {\n      return (\n        <SingleMetricWrapper>\n          <SingleMetricSquares>\n            <BubbleRatings total={5} rating={metrics[metric]} />\n          </SingleMetricSquares>\n          <SingleMetricLabel>\n            {' '}\n            {metric.charAt(0).toUpperCase() + metric.slice(1)}?\n          </SingleMetricLabel>\n        </SingleMetricWrapper>\n      );\n    }\n  }\n};\n\nconst Review = ({\n  review,\n  theme,\n  isBrowserDesktop,\n  isLoggedIn,\n  isCourseReview\n}) => {\n  const { upvotes, upvote_users, review: reviewText, author, created_at, metrics } = review;\n  const userID = localStorage.getItem('user_id');\n\n  const refetchQueries = [{\n    query: isCourseReview ? REFETCH_COURSE_REVIEW_UPVOTE : REFETCH_PROF_REVIEW_UPVOTE,\n    variables: { review_id: review.id }\n  }]\n\n  const dispatch = useDispatch();\n  const [userUpvoted, setUserUpvoted] = useState(upvote_users.includes(Number(userID)));\n  const [insertReviewVote] = useMutation(\n    isCourseReview ? INSERT_COURSE_REVIEW_VOTE : INSERT_PROF_REVIEW_VOTE,\n    { refetchQueries }\n  );\n  const [deleteReviewVote] = useMutation(\n    isCourseReview ? DELETE_COURSE_REVIEW_VOTE : DELETE_PROF_REVIEW_VOTE,\n    { refetchQueries }\n  );\n\n  const onClickUpvote = () => {\n    if (!isLoggedIn) {\n      dispatch(authModalOpen());\n      return;\n    }\n\n    if (userUpvoted) {\n      deleteReviewVote({variables: {review_id: review.id, user_id: userID} });\n    } else {\n      insertReviewVote({variables: {review_id: review.id, user_id: userID} });\n    }\n    setUserUpvoted(!userUpvoted);\n  }\n\n  const authorNameText = author.full_name ? `-${author.full_name}` : '-Anonymous';\n  const reviewContent = (\n    <ReviewTextWrapper>\n      <ReviewText>{reviewText}</ReviewText>\n      <ReviewAuthor>\n        {authorNameText}{author.program ? `, a ${author.program} student` : ''}\n        , {moment(created_at).fromNow()}\n      </ReviewAuthor>\n    </ReviewTextWrapper>\n  );\n\n  return (\n    <ReviewWrapper>\n      <ReviewPictureAndMetricsRow>\n        <ReviewPictureAndUpvotesWrapper>\n          <ReviewPicture />\n          <ReviewUpvotes selected={userUpvoted} onClick={onClickUpvote}>\n            <ThumbsUp\n              color={userUpvoted ? 'white' : theme.dark3}\n              size={16}\n              strokeWidth={2}\n            />\n            <UpvoteNumber selected={userUpvoted}>\n              {upvotes ? upvotes : 0}\n            </UpvoteNumber>\n          </ReviewUpvotes>\n        </ReviewPictureAndUpvotesWrapper>\n        {isBrowserDesktop && reviewContent}\n        <ReviewMetricsWrapper>\n          <ReviewMetricsBody>\n            {MetricIfExists(metrics, 'clear')}\n            {MetricIfExists(metrics, 'engaging')}\n            {MetricIfExists(metrics, 'useful')}\n            {MetricIfExists(metrics, 'easy')}\n            {MetricIfExists(metrics, 'liked')}\n          </ReviewMetricsBody>\n        </ReviewMetricsWrapper>\n      </ReviewPictureAndMetricsRow>\n      {!isBrowserDesktop && reviewContent}\n    </ReviewWrapper>\n  );\n};\n\nReview.propTypes = {\n  upvotes: PropTypes.number,\n  review: PropTypes.shape({\n    upvotes: PropTypes.number,\n    review: PropTypes.string.isRequired,\n    author: PropTypes.shape({\n      full_name: PropTypes.string,\n      program: PropTypes.string,\n      picture_url: PropTypes.string\n    }).isRequired,\n    user: PropTypes.shape({\n      user_id: PropTypes.number\n    }),\n    metrics: PropTypes.shape({\n      useful: PropTypes.number, //not all these metrics have to exist, we should only display the ones that do\n      easy: PropTypes.number, //for example course review only has useful, easy liked,\n      liked: PropTypes.bool, //prof review only has liked, clear and engagin\n      clear: PropTypes.number,\n      engaging: PropTypes.number,\n    }).isRequired,\n  }).isRequired\n};\n\nexport default withTheme(connect(mapStateToProps)(Review));\n"],"sourceRoot":""}